<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1142" onload="init(evt)" viewBox="0 0 1200 1142" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1142" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1125.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1125.00"> </text><svg id="frames" x="10" width="1180" total_samples="43103"><g><title>gemm_common::gemm::gemm_basic_generic::{{closure}} (11 samples, 0.03%)</title><rect x="0.3155%" y="949" width="0.0255%" height="15" fill="rgb(227,0,7)" fg:x="136" fg:w="11"/><text x="0.5655%" y="959.50"></text></g><g><title>gemm_f32::microkernel::fma::f32::x3x4 (5 samples, 0.01%)</title><rect x="0.3294%" y="933" width="0.0116%" height="15" fill="rgb(217,0,24)" fg:x="142" fg:w="5"/><text x="0.5794%" y="943.50"></text></g><g><title>gemm_f32::microkernel::fma::f32::x2x4 (7 samples, 0.02%)</title><rect x="0.3596%" y="917" width="0.0162%" height="15" fill="rgb(221,193,54)" fg:x="155" fg:w="7"/><text x="0.6096%" y="927.50"></text></g><g><title>gemm_common::gemm::gemm_basic_generic::{{closure}} (26 samples, 0.06%)</title><rect x="0.3410%" y="933" width="0.0603%" height="15" fill="rgb(248,212,6)" fg:x="147" fg:w="26"/><text x="0.5910%" y="943.50"></text></g><g><title>gemm_f32::microkernel::fma::f32::x3x4 (11 samples, 0.03%)</title><rect x="0.3758%" y="917" width="0.0255%" height="15" fill="rgb(208,68,35)" fg:x="162" fg:w="11"/><text x="0.6258%" y="927.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (13 samples, 0.03%)</title><rect x="0.4014%" y="933" width="0.0302%" height="15" fill="rgb(232,128,0)" fg:x="173" fg:w="13"/><text x="0.6514%" y="943.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.03%)</title><rect x="0.4014%" y="917" width="0.0302%" height="15" fill="rgb(207,160,47)" fg:x="173" fg:w="13"/><text x="0.6514%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (13 samples, 0.03%)</title><rect x="0.4014%" y="901" width="0.0302%" height="15" fill="rgb(228,23,34)" fg:x="173" fg:w="13"/><text x="0.6514%" y="911.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (5 samples, 0.01%)</title><rect x="0.4199%" y="885" width="0.0116%" height="15" fill="rgb(218,30,26)" fg:x="181" fg:w="5"/><text x="0.6699%" y="895.50"></text></g><g><title>gemm_common::gemm::gemm_basic_generic::{{closure}} (12 samples, 0.03%)</title><rect x="0.4338%" y="917" width="0.0278%" height="15" fill="rgb(220,122,19)" fg:x="187" fg:w="12"/><text x="0.6838%" y="927.50"></text></g><g><title>gemm_f32::microkernel::fma::f32::x3x4 (8 samples, 0.02%)</title><rect x="0.4431%" y="901" width="0.0186%" height="15" fill="rgb(250,228,42)" fg:x="191" fg:w="8"/><text x="0.6931%" y="911.50"></text></g><g><title>gemm_f32::microkernel::fma::f32::x2x4 (5 samples, 0.01%)</title><rect x="0.4640%" y="869" width="0.0116%" height="15" fill="rgb(240,193,28)" fg:x="200" fg:w="5"/><text x="0.7140%" y="879.50"></text></g><g><title>gemm_common::gemm::gemm_basic_generic::{{closure}} (10 samples, 0.02%)</title><rect x="0.4617%" y="885" width="0.0232%" height="15" fill="rgb(216,20,37)" fg:x="199" fg:w="10"/><text x="0.7117%" y="895.50"></text></g><g><title>gemm_common::gemm::gemm_basic_generic::{{closure}} (8 samples, 0.02%)</title><rect x="0.4849%" y="869" width="0.0186%" height="15" fill="rgb(206,188,39)" fg:x="209" fg:w="8"/><text x="0.7349%" y="879.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5 samples, 0.01%)</title><rect x="0.5034%" y="869" width="0.0116%" height="15" fill="rgb(217,207,13)" fg:x="217" fg:w="5"/><text x="0.7534%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="0.5034%" y="853" width="0.0116%" height="15" fill="rgb(231,73,38)" fg:x="217" fg:w="5"/><text x="0.7534%" y="863.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="0.5034%" y="837" width="0.0116%" height="15" fill="rgb(225,20,46)" fg:x="217" fg:w="5"/><text x="0.7534%" y="847.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (24 samples, 0.06%)</title><rect x="0.4617%" y="917" width="0.0557%" height="15" fill="rgb(210,31,41)" fg:x="199" fg:w="24"/><text x="0.7117%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (24 samples, 0.06%)</title><rect x="0.4617%" y="901" width="0.0557%" height="15" fill="rgb(221,200,47)" fg:x="199" fg:w="24"/><text x="0.7117%" y="911.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (14 samples, 0.03%)</title><rect x="0.4849%" y="885" width="0.0325%" height="15" fill="rgb(226,26,5)" fg:x="209" fg:w="14"/><text x="0.7349%" y="895.50"></text></g><g><title>gemm_common::gemm::gemm_basic_generic::{{closure}} (15 samples, 0.03%)</title><rect x="0.5174%" y="901" width="0.0348%" height="15" fill="rgb(249,33,26)" fg:x="223" fg:w="15"/><text x="0.7674%" y="911.50"></text></g><g><title>gemm_f32::microkernel::fma::f32::x3x4 (8 samples, 0.02%)</title><rect x="0.5336%" y="885" width="0.0186%" height="15" fill="rgb(235,183,28)" fg:x="230" fg:w="8"/><text x="0.7836%" y="895.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (17 samples, 0.04%)</title><rect x="0.5522%" y="901" width="0.0394%" height="15" fill="rgb(221,5,38)" fg:x="238" fg:w="17"/><text x="0.8022%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.04%)</title><rect x="0.5522%" y="885" width="0.0394%" height="15" fill="rgb(247,18,42)" fg:x="238" fg:w="17"/><text x="0.8022%" y="895.50"></text></g><g><title>gemm_common::gemm::gemm_basic_generic::{{closure}} (17 samples, 0.04%)</title><rect x="0.5522%" y="869" width="0.0394%" height="15" fill="rgb(241,131,45)" fg:x="238" fg:w="17"/><text x="0.8022%" y="879.50"></text></g><g><title>gemm_f32::microkernel::fma::f32::x3x4 (11 samples, 0.03%)</title><rect x="0.5661%" y="853" width="0.0255%" height="15" fill="rgb(249,31,29)" fg:x="244" fg:w="11"/><text x="0.8161%" y="863.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (34 samples, 0.08%)</title><rect x="0.5174%" y="917" width="0.0789%" height="15" fill="rgb(225,111,53)" fg:x="223" fg:w="34"/><text x="0.7674%" y="927.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (5 samples, 0.01%)</title><rect x="0.5962%" y="901" width="0.0116%" height="15" fill="rgb(238,160,17)" fg:x="257" fg:w="5"/><text x="0.8462%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="0.5962%" y="885" width="0.0116%" height="15" fill="rgb(214,148,48)" fg:x="257" fg:w="5"/><text x="0.8462%" y="895.50"></text></g><g><title>gemm_common::gemm::gemm_basic_generic::{{closure}} (5 samples, 0.01%)</title><rect x="0.5962%" y="869" width="0.0116%" height="15" fill="rgb(232,36,49)" fg:x="257" fg:w="5"/><text x="0.8462%" y="879.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (8 samples, 0.02%)</title><rect x="0.5962%" y="917" width="0.0186%" height="15" fill="rgb(209,103,24)" fg:x="257" fg:w="8"/><text x="0.8462%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (87 samples, 0.20%)</title><rect x="0.4315%" y="933" width="0.2018%" height="15" fill="rgb(229,88,8)" fg:x="186" fg:w="87"/><text x="0.6815%" y="943.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_any_threads (8 samples, 0.02%)</title><rect x="0.6148%" y="917" width="0.0186%" height="15" fill="rgb(213,181,19)" fg:x="265" fg:w="8"/><text x="0.8648%" y="927.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (8 samples, 0.02%)</title><rect x="0.6148%" y="901" width="0.0186%" height="15" fill="rgb(254,191,54)" fg:x="265" fg:w="8"/><text x="0.8648%" y="911.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (5 samples, 0.01%)</title><rect x="0.6218%" y="885" width="0.0116%" height="15" fill="rgb(241,83,37)" fg:x="268" fg:w="5"/><text x="0.8718%" y="895.50"></text></g><g><title>gemm_common::gemm::gemm_basic_generic::{{closure}} (7 samples, 0.02%)</title><rect x="0.6357%" y="885" width="0.0162%" height="15" fill="rgb(233,36,39)" fg:x="274" fg:w="7"/><text x="0.8857%" y="895.50"></text></g><g><title>gemm_f32::microkernel::fma::f32::x3x4 (6 samples, 0.01%)</title><rect x="0.6380%" y="869" width="0.0139%" height="15" fill="rgb(226,3,54)" fg:x="275" fg:w="6"/><text x="0.8880%" y="879.50"></text></g><g><title>gemm_common::gemm::gemm_basic_generic::{{closure}} (7 samples, 0.02%)</title><rect x="0.6519%" y="869" width="0.0162%" height="15" fill="rgb(245,192,40)" fg:x="281" fg:w="7"/><text x="0.9019%" y="879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (18 samples, 0.04%)</title><rect x="0.6357%" y="917" width="0.0418%" height="15" fill="rgb(238,167,29)" fg:x="274" fg:w="18"/><text x="0.8857%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.04%)</title><rect x="0.6357%" y="901" width="0.0418%" height="15" fill="rgb(232,182,51)" fg:x="274" fg:w="18"/><text x="0.8857%" y="911.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 0.03%)</title><rect x="0.6519%" y="885" width="0.0255%" height="15" fill="rgb(231,60,39)" fg:x="281" fg:w="11"/><text x="0.9019%" y="895.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (6 samples, 0.01%)</title><rect x="0.6774%" y="917" width="0.0139%" height="15" fill="rgb(208,69,12)" fg:x="292" fg:w="6"/><text x="0.9274%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.01%)</title><rect x="0.6774%" y="901" width="0.0139%" height="15" fill="rgb(235,93,37)" fg:x="292" fg:w="6"/><text x="0.9274%" y="911.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (6 samples, 0.01%)</title><rect x="0.6774%" y="885" width="0.0139%" height="15" fill="rgb(213,116,39)" fg:x="292" fg:w="6"/><text x="0.9274%" y="895.50"></text></g><g><title>crossbeam_epoch::default::with_handle (5 samples, 0.01%)</title><rect x="0.6798%" y="869" width="0.0116%" height="15" fill="rgb(222,207,29)" fg:x="293" fg:w="5"/><text x="0.9298%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (163 samples, 0.38%)</title><rect x="0.3155%" y="965" width="0.3782%" height="15" fill="rgb(206,96,30)" fg:x="136" fg:w="163"/><text x="0.5655%" y="975.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (152 samples, 0.35%)</title><rect x="0.3410%" y="949" width="0.3526%" height="15" fill="rgb(218,138,4)" fg:x="147" fg:w="152"/><text x="0.5910%" y="959.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (26 samples, 0.06%)</title><rect x="0.6334%" y="933" width="0.0603%" height="15" fill="rgb(250,191,14)" fg:x="273" fg:w="26"/><text x="0.8834%" y="943.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (8 samples, 0.02%)</title><rect x="0.6937%" y="917" width="0.0186%" height="15" fill="rgb(239,60,40)" fg:x="299" fg:w="8"/><text x="0.9437%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.02%)</title><rect x="0.6937%" y="901" width="0.0186%" height="15" fill="rgb(206,27,48)" fg:x="299" fg:w="8"/><text x="0.9437%" y="911.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.02%)</title><rect x="0.6937%" y="885" width="0.0186%" height="15" fill="rgb(225,35,8)" fg:x="299" fg:w="8"/><text x="0.9437%" y="895.50"></text></g><g><title>gemm_common::gemm::gemm_basic_generic::{{closure}} (10 samples, 0.02%)</title><rect x="0.7122%" y="853" width="0.0232%" height="15" fill="rgb(250,213,24)" fg:x="307" fg:w="10"/><text x="0.9622%" y="863.50"></text></g><g><title>gemm_f32::microkernel::fma::f32::x3x4 (6 samples, 0.01%)</title><rect x="0.7215%" y="837" width="0.0139%" height="15" fill="rgb(247,123,22)" fg:x="311" fg:w="6"/><text x="0.9715%" y="847.50"></text></g><g><title>gemm_common::gemm::gemm_basic_generic::{{closure}} (10 samples, 0.02%)</title><rect x="0.7354%" y="805" width="0.0232%" height="15" fill="rgb(231,138,38)" fg:x="317" fg:w="10"/><text x="0.9854%" y="815.50"></text></g><g><title>gemm_f32::microkernel::fma::f32::x3x4 (5 samples, 0.01%)</title><rect x="0.7470%" y="789" width="0.0116%" height="15" fill="rgb(231,145,46)" fg:x="322" fg:w="5"/><text x="0.9970%" y="799.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (15 samples, 0.03%)</title><rect x="0.7354%" y="853" width="0.0348%" height="15" fill="rgb(251,118,11)" fg:x="317" fg:w="15"/><text x="0.9854%" y="863.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 0.03%)</title><rect x="0.7354%" y="837" width="0.0348%" height="15" fill="rgb(217,147,25)" fg:x="317" fg:w="15"/><text x="0.9854%" y="847.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (15 samples, 0.03%)</title><rect x="0.7354%" y="821" width="0.0348%" height="15" fill="rgb(247,81,37)" fg:x="317" fg:w="15"/><text x="0.9854%" y="831.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (26 samples, 0.06%)</title><rect x="0.7122%" y="901" width="0.0603%" height="15" fill="rgb(209,12,38)" fg:x="307" fg:w="26"/><text x="0.9622%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.06%)</title><rect x="0.7122%" y="885" width="0.0603%" height="15" fill="rgb(227,1,9)" fg:x="307" fg:w="26"/><text x="0.9622%" y="895.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (26 samples, 0.06%)</title><rect x="0.7122%" y="869" width="0.0603%" height="15" fill="rgb(248,47,43)" fg:x="307" fg:w="26"/><text x="0.9622%" y="879.50"></text></g><g><title>gemm_common::gemm::gemm_basic_generic::{{closure}} (15 samples, 0.03%)</title><rect x="0.7749%" y="885" width="0.0348%" height="15" fill="rgb(221,10,30)" fg:x="334" fg:w="15"/><text x="1.0249%" y="895.50"></text></g><g><title>gemm_f32::microkernel::fma::f32::x3x4 (11 samples, 0.03%)</title><rect x="0.7842%" y="869" width="0.0255%" height="15" fill="rgb(210,229,1)" fg:x="338" fg:w="11"/><text x="1.0342%" y="879.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (27 samples, 0.06%)</title><rect x="0.7726%" y="901" width="0.0626%" height="15" fill="rgb(222,148,37)" fg:x="333" fg:w="27"/><text x="1.0226%" y="911.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (11 samples, 0.03%)</title><rect x="0.8097%" y="885" width="0.0255%" height="15" fill="rgb(234,67,33)" fg:x="349" fg:w="11"/><text x="1.0597%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.03%)</title><rect x="0.8097%" y="869" width="0.0255%" height="15" fill="rgb(247,98,35)" fg:x="349" fg:w="11"/><text x="1.0597%" y="879.50"></text></g><g><title>gemm_common::gemm::gemm_basic_generic::{{closure}} (11 samples, 0.03%)</title><rect x="0.8097%" y="853" width="0.0255%" height="15" fill="rgb(247,138,52)" fg:x="349" fg:w="11"/><text x="1.0597%" y="863.50"></text></g><g><title>gemm_f32::microkernel::fma::f32::x3x4 (5 samples, 0.01%)</title><rect x="0.8236%" y="837" width="0.0116%" height="15" fill="rgb(213,79,30)" fg:x="355" fg:w="5"/><text x="1.0736%" y="847.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (57 samples, 0.13%)</title><rect x="0.7122%" y="917" width="0.1322%" height="15" fill="rgb(246,177,23)" fg:x="307" fg:w="57"/><text x="0.9622%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (69 samples, 0.16%)</title><rect x="0.6937%" y="949" width="0.1601%" height="15" fill="rgb(230,62,27)" fg:x="299" fg:w="69"/><text x="0.9437%" y="959.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (69 samples, 0.16%)</title><rect x="0.6937%" y="933" width="0.1601%" height="15" fill="rgb(216,154,8)" fg:x="299" fg:w="69"/><text x="0.9437%" y="943.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (239 samples, 0.55%)</title><rect x="0.3062%" y="981" width="0.5545%" height="15" fill="rgb(244,35,45)" fg:x="132" fg:w="239"/><text x="0.5562%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (72 samples, 0.17%)</title><rect x="0.6937%" y="965" width="0.1670%" height="15" fill="rgb(251,115,12)" fg:x="299" fg:w="72"/><text x="0.9437%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (112 samples, 0.26%)</title><rect x="0.8607%" y="965" width="0.2598%" height="15" fill="rgb(240,54,50)" fg:x="371" fg:w="112"/><text x="1.1107%" y="975.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (102 samples, 0.24%)</title><rect x="0.8839%" y="949" width="0.2366%" height="15" fill="rgb(233,84,52)" fg:x="381" fg:w="102"/><text x="1.1339%" y="959.50"></text></g><g><title>crossbeam_epoch::default::with_handle (92 samples, 0.21%)</title><rect x="0.9071%" y="933" width="0.2134%" height="15" fill="rgb(207,117,47)" fg:x="391" fg:w="92"/><text x="1.1571%" y="943.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (22 samples, 0.05%)</title><rect x="1.0695%" y="917" width="0.0510%" height="15" fill="rgb(249,43,39)" fg:x="461" fg:w="22"/><text x="1.3195%" y="927.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (22 samples, 0.05%)</title><rect x="1.0695%" y="901" width="0.0510%" height="15" fill="rgb(209,38,44)" fg:x="461" fg:w="22"/><text x="1.3195%" y="911.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (14 samples, 0.03%)</title><rect x="1.1275%" y="965" width="0.0325%" height="15" fill="rgb(236,212,23)" fg:x="486" fg:w="14"/><text x="1.3775%" y="975.50"></text></g><g><title>crossbeam_epoch::default::with_handle (11 samples, 0.03%)</title><rect x="1.1345%" y="949" width="0.0255%" height="15" fill="rgb(242,79,21)" fg:x="489" fg:w="11"/><text x="1.3845%" y="959.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (133 samples, 0.31%)</title><rect x="0.8607%" y="981" width="0.3086%" height="15" fill="rgb(211,96,35)" fg:x="371" fg:w="133"/><text x="1.1107%" y="991.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (12 samples, 0.03%)</title><rect x="1.1693%" y="981" width="0.0278%" height="15" fill="rgb(253,215,40)" fg:x="504" fg:w="12"/><text x="1.4193%" y="991.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (5 samples, 0.01%)</title><rect x="1.1855%" y="965" width="0.0116%" height="15" fill="rgb(211,81,21)" fg:x="511" fg:w="5"/><text x="1.4355%" y="975.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (400 samples, 0.93%)</title><rect x="0.3016%" y="1013" width="0.9280%" height="15" fill="rgb(208,190,38)" fg:x="130" fg:w="400"/><text x="0.5516%" y="1023.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (400 samples, 0.93%)</title><rect x="0.3016%" y="997" width="0.9280%" height="15" fill="rgb(235,213,38)" fg:x="130" fg:w="400"/><text x="0.5516%" y="1007.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_any_threads (14 samples, 0.03%)</title><rect x="1.1971%" y="981" width="0.0325%" height="15" fill="rgb(237,122,38)" fg:x="516" fg:w="14"/><text x="1.4471%" y="991.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (14 samples, 0.03%)</title><rect x="1.1971%" y="965" width="0.0325%" height="15" fill="rgb(244,218,35)" fg:x="516" fg:w="14"/><text x="1.4471%" y="975.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (7 samples, 0.02%)</title><rect x="1.2134%" y="949" width="0.0162%" height="15" fill="rgb(240,68,47)" fg:x="523" fg:w="7"/><text x="1.4634%" y="959.50"></text></g><g><title>candle_core::storage::Storage::binary_impl (9 samples, 0.02%)</title><rect x="1.5660%" y="853" width="0.0209%" height="15" fill="rgb(210,16,53)" fg:x="675" fg:w="9"/><text x="1.8160%" y="863.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::binary_impl (8 samples, 0.02%)</title><rect x="1.5683%" y="837" width="0.0186%" height="15" fill="rgb(235,124,12)" fg:x="676" fg:w="8"/><text x="1.8183%" y="847.50"></text></g><g><title>candle_core::cpu_backend::utils::binary_map (8 samples, 0.02%)</title><rect x="1.5683%" y="821" width="0.0186%" height="15" fill="rgb(224,169,11)" fg:x="676" fg:w="8"/><text x="1.8183%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="1.5730%" y="805" width="0.0139%" height="15" fill="rgb(250,166,2)" fg:x="678" fg:w="6"/><text x="1.8230%" y="815.50"></text></g><g><title>&lt;candle_core::tensor::Tensor as core::ops::arith::Sub&lt;B&gt;&gt;::sub (15 samples, 0.03%)</title><rect x="1.5567%" y="885" width="0.0348%" height="15" fill="rgb(242,216,29)" fg:x="671" fg:w="15"/><text x="1.8067%" y="895.50"></text></g><g><title>candle_core::tensor::Tensor::sub (15 samples, 0.03%)</title><rect x="1.5567%" y="869" width="0.0348%" height="15" fill="rgb(230,116,27)" fg:x="671" fg:w="15"/><text x="1.8067%" y="879.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::unary_impl (277 samples, 0.64%)</title><rect x="1.5962%" y="837" width="0.6426%" height="15" fill="rgb(228,99,48)" fg:x="688" fg:w="277"/><text x="1.8462%" y="847.50"></text></g><g><title>candle_core::cpu_backend::utils::unary_map (276 samples, 0.64%)</title><rect x="1.5985%" y="821" width="0.6403%" height="15" fill="rgb(253,11,6)" fg:x="689" fg:w="276"/><text x="1.8485%" y="831.50"></text></g><g><title>&lt;candle_nn::activation::Activation as candle_core::Module&gt;::forward (281 samples, 0.65%)</title><rect x="1.5915%" y="869" width="0.6519%" height="15" fill="rgb(247,143,39)" fg:x="686" fg:w="281"/><text x="1.8415%" y="879.50"></text></g><g><title>candle_core::tensor::Tensor::relu (280 samples, 0.65%)</title><rect x="1.5939%" y="853" width="0.6496%" height="15" fill="rgb(236,97,10)" fg:x="687" fg:w="280"/><text x="1.8439%" y="863.50"></text></g><g><title>candle_core::storage::Storage::binary_impl (1,043 samples, 2.42%)</title><rect x="2.2597%" y="821" width="2.4198%" height="15" fill="rgb(233,208,19)" fg:x="974" fg:w="1043"/><text x="2.5097%" y="831.50">ca..</text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::binary_impl (1,043 samples, 2.42%)</title><rect x="2.2597%" y="805" width="2.4198%" height="15" fill="rgb(216,164,2)" fg:x="974" fg:w="1043"/><text x="2.5097%" y="815.50">&lt;c..</text></g><g><title>candle_core::cpu_backend::utils::binary_map (1,042 samples, 2.42%)</title><rect x="2.2620%" y="789" width="2.4175%" height="15" fill="rgb(220,129,5)" fg:x="975" fg:w="1042"/><text x="2.5120%" y="799.50">ca..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,041 samples, 2.42%)</title><rect x="2.2643%" y="773" width="2.4151%" height="15" fill="rgb(242,17,10)" fg:x="976" fg:w="1041"/><text x="2.5143%" y="783.50">&lt;a..</text></g><g><title>candle_core::tensor::Tensor::add (1,050 samples, 2.44%)</title><rect x="2.2527%" y="837" width="2.4360%" height="15" fill="rgb(242,107,0)" fg:x="971" fg:w="1050"/><text x="2.5027%" y="847.50">ca..</text></g><g><title>candle_core::tensor::Tensor::broadcast_add (1,058 samples, 2.45%)</title><rect x="2.2481%" y="853" width="2.4546%" height="15" fill="rgb(251,28,31)" fg:x="969" fg:w="1058"/><text x="2.4981%" y="863.50">ca..</text></g><g><title>candle_core::tensor::Tensor::broadcast_as (6 samples, 0.01%)</title><rect x="4.6888%" y="837" width="0.0139%" height="15" fill="rgb(233,223,10)" fg:x="2021" fg:w="6"/><text x="4.9388%" y="847.50"></text></g><g><title>num_cpus::linux::get_num_cpus (39 samples, 0.09%)</title><rect x="4.7212%" y="789" width="0.0905%" height="15" fill="rgb(215,21,27)" fg:x="2035" fg:w="39"/><text x="4.9712%" y="799.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (10 samples, 0.02%)</title><rect x="4.8164%" y="757" width="0.0232%" height="15" fill="rgb(232,23,21)" fg:x="2076" fg:w="10"/><text x="5.0664%" y="767.50"></text></g><g><title>candle_core::utils::get_num_threads (53 samples, 0.12%)</title><rect x="4.7212%" y="805" width="0.1230%" height="15" fill="rgb(244,5,23)" fg:x="2035" fg:w="53"/><text x="4.9712%" y="815.50"></text></g><g><title>std::env::_var (14 samples, 0.03%)</title><rect x="4.8117%" y="789" width="0.0325%" height="15" fill="rgb(226,81,46)" fg:x="2074" fg:w="14"/><text x="5.0617%" y="799.50"></text></g><g><title>std::env::_var_os (12 samples, 0.03%)</title><rect x="4.8164%" y="773" width="0.0278%" height="15" fill="rgb(247,70,30)" fg:x="2076" fg:w="12"/><text x="5.0664%" y="783.50"></text></g><g><title>gemm_common::pack_operands::pack_lhs (31 samples, 0.07%)</title><rect x="4.9022%" y="789" width="0.0719%" height="15" fill="rgb(212,68,19)" fg:x="2113" fg:w="31"/><text x="5.1522%" y="799.50"></text></g><g><title>gemm_common::simd::x86::V3::vectorize::__impl (31 samples, 0.07%)</title><rect x="4.9022%" y="773" width="0.0719%" height="15" fill="rgb(240,187,13)" fg:x="2113" fg:w="31"/><text x="5.1522%" y="783.50"></text></g><g><title>gemm_common::simd::x86::V3::vectorize::__impl (22 samples, 0.05%)</title><rect x="4.9741%" y="789" width="0.0510%" height="15" fill="rgb(223,113,26)" fg:x="2144" fg:w="22"/><text x="5.2241%" y="799.50"></text></g><g><title>gemm_f32::microkernel::fma::f32::x2x4 (32 samples, 0.07%)</title><rect x="5.0252%" y="789" width="0.0742%" height="15" fill="rgb(206,192,2)" fg:x="2166" fg:w="32"/><text x="5.2752%" y="799.50"></text></g><g><title>gemm_f32::microkernel::fma::f32::x3x4 (136 samples, 0.32%)</title><rect x="5.0994%" y="789" width="0.3155%" height="15" fill="rgb(241,108,4)" fg:x="2198" fg:w="136"/><text x="5.3494%" y="799.50"></text></g><g><title>candle_core::storage::Storage::matmul (304 samples, 0.71%)</title><rect x="4.7120%" y="837" width="0.7053%" height="15" fill="rgb(247,173,49)" fg:x="2031" fg:w="304"/><text x="4.9620%" y="847.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::matmul (303 samples, 0.70%)</title><rect x="4.7143%" y="821" width="0.7030%" height="15" fill="rgb(224,114,35)" fg:x="2032" fg:w="303"/><text x="4.9643%" y="831.50"></text></g><g><title>gemm_f32::gemm::f32::fma::gemm_basic (247 samples, 0.57%)</title><rect x="4.8442%" y="805" width="0.5730%" height="15" fill="rgb(245,159,27)" fg:x="2088" fg:w="247"/><text x="5.0942%" y="815.50"></text></g><g><title>candle_core::tensor::Tensor::matmul (314 samples, 0.73%)</title><rect x="4.7027%" y="853" width="0.7285%" height="15" fill="rgb(245,172,44)" fg:x="2027" fg:w="314"/><text x="4.9527%" y="863.50"></text></g><g><title>candle_core::tensor::from_storage (5 samples, 0.01%)</title><rect x="5.4196%" y="837" width="0.0116%" height="15" fill="rgb(236,23,11)" fg:x="2336" fg:w="5"/><text x="5.6696%" y="847.50"></text></g><g><title>&lt;r2l_candle_lm::thread_safe_sequential::ThreadSafeSequential as candle_core::Module&gt;::forward (1,661 samples, 3.85%)</title><rect x="1.5915%" y="885" width="3.8536%" height="15" fill="rgb(205,117,38)" fg:x="686" fg:w="1661"/><text x="1.8415%" y="895.50">&lt;r2l..</text></g><g><title>&lt;candle_nn::linear::Linear as candle_core::Module&gt;::forward (1,380 samples, 3.20%)</title><rect x="2.2435%" y="869" width="3.2016%" height="15" fill="rgb(237,72,25)" fg:x="967" fg:w="1380"/><text x="2.4935%" y="879.50">&lt;ca..</text></g><g><title>candle_core::tensor::Tensor::t (6 samples, 0.01%)</title><rect x="5.4312%" y="853" width="0.0139%" height="15" fill="rgb(244,70,9)" fg:x="2341" fg:w="6"/><text x="5.6812%" y="863.50"></text></g><g><title>candle_core::tensor::Tensor::transpose (6 samples, 0.01%)</title><rect x="5.4312%" y="837" width="0.0139%" height="15" fill="rgb(217,125,39)" fg:x="2341" fg:w="6"/><text x="5.6812%" y="847.50"></text></g><g><title>candle_core::tensor::&lt;impl core::ops::arith::Mul&lt;candle_core::tensor::Tensor&gt; for f64&gt;::mul (5 samples, 0.01%)</title><rect x="5.4451%" y="885" width="0.0116%" height="15" fill="rgb(235,36,10)" fg:x="2347" fg:w="5"/><text x="5.6951%" y="895.50"></text></g><g><title>candle_core::tensor::Tensor::affine (5 samples, 0.01%)</title><rect x="5.4451%" y="869" width="0.0116%" height="15" fill="rgb(251,123,47)" fg:x="2347" fg:w="5"/><text x="5.6951%" y="879.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::unary_impl (8 samples, 0.02%)</title><rect x="5.4869%" y="869" width="0.0186%" height="15" fill="rgb(221,13,13)" fg:x="2365" fg:w="8"/><text x="5.7369%" y="879.50"></text></g><g><title>candle_core::cpu_backend::utils::unary_map (8 samples, 0.02%)</title><rect x="5.4869%" y="853" width="0.0186%" height="15" fill="rgb(238,131,9)" fg:x="2365" fg:w="8"/><text x="5.7369%" y="863.50"></text></g><g><title>candle_core::tensor::Tensor::sqr (11 samples, 0.03%)</title><rect x="5.4822%" y="885" width="0.0255%" height="15" fill="rgb(211,50,8)" fg:x="2363" fg:w="11"/><text x="5.7322%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (100 samples, 0.23%)</title><rect x="5.6817%" y="869" width="0.2320%" height="15" fill="rgb(245,182,24)" fg:x="2449" fg:w="100"/><text x="5.9317%" y="879.50"></text></g><g><title>candle_core::tensor::Tensor::check_dim (14 samples, 0.03%)</title><rect x="5.9137%" y="869" width="0.0325%" height="15" fill="rgb(242,14,37)" fg:x="2549" fg:w="14"/><text x="6.1637%" y="879.50"></text></g><g><title>candle_core::tensor::Tensor::is_contiguous (19 samples, 0.04%)</title><rect x="5.9462%" y="869" width="0.0441%" height="15" fill="rgb(246,228,12)" fg:x="2563" fg:w="19"/><text x="6.1962%" y="879.50"></text></g><g><title>candle_core::storage::Storage::copy2d (18 samples, 0.04%)</title><rect x="6.2084%" y="853" width="0.0418%" height="15" fill="rgb(213,55,15)" fg:x="2676" fg:w="18"/><text x="6.4584%" y="863.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::copy2d (11 samples, 0.03%)</title><rect x="6.2246%" y="837" width="0.0255%" height="15" fill="rgb(209,9,3)" fg:x="2683" fg:w="11"/><text x="6.4746%" y="847.50"></text></g><g><title>candle_core::tensor::Tensor::storage (45 samples, 0.10%)</title><rect x="6.2501%" y="853" width="0.1044%" height="15" fill="rgb(230,59,30)" fg:x="2694" fg:w="45"/><text x="6.5001%" y="863.50"></text></g><g><title>candle_core::tensor_cat::&lt;impl candle_core::tensor::Tensor&gt;::cat_contiguous (158 samples, 0.37%)</title><rect x="5.9903%" y="869" width="0.3666%" height="15" fill="rgb(209,121,21)" fg:x="2582" fg:w="158"/><text x="6.2403%" y="879.50"></text></g><g><title>&lt;usize as candle_core::shape::Dim&gt;::to_index_plus_one (7 samples, 0.02%)</title><rect x="7.3150%" y="821" width="0.0162%" height="15" fill="rgb(220,109,13)" fg:x="3153" fg:w="7"/><text x="7.5650%" y="831.50"></text></g><g><title>__rustc::__rdl_alloc (5 samples, 0.01%)</title><rect x="7.3313%" y="821" width="0.0116%" height="15" fill="rgb(232,18,1)" fg:x="3160" fg:w="5"/><text x="7.5813%" y="831.50"></text></g><g><title>candle_core::tensor::Tensor::stack (836 samples, 1.94%)</title><rect x="5.5077%" y="885" width="1.9395%" height="15" fill="rgb(215,41,42)" fg:x="2374" fg:w="836"/><text x="5.7577%" y="895.50">c..</text></g><g><title>core::iter::adapters::try_process (470 samples, 1.09%)</title><rect x="6.3569%" y="869" width="1.0904%" height="15" fill="rgb(224,123,36)" fg:x="2740" fg:w="470"/><text x="6.6069%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (469 samples, 1.09%)</title><rect x="6.3592%" y="853" width="1.0881%" height="15" fill="rgb(240,125,3)" fg:x="2741" fg:w="469"/><text x="6.6092%" y="863.50"></text></g><g><title>candle_core::tensor::Tensor::unsqueeze (457 samples, 1.06%)</title><rect x="6.3870%" y="837" width="1.0603%" height="15" fill="rgb(205,98,50)" fg:x="2753" fg:w="457"/><text x="6.6370%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (45 samples, 0.10%)</title><rect x="7.3429%" y="821" width="0.1044%" height="15" fill="rgb(205,185,37)" fg:x="3165" fg:w="45"/><text x="7.5929%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 0.05%)</title><rect x="7.3962%" y="805" width="0.0510%" height="15" fill="rgb(238,207,15)" fg:x="3188" fg:w="22"/><text x="7.6462%" y="815.50"></text></g><g><title>__rustc::__rdl_realloc (5 samples, 0.01%)</title><rect x="7.4357%" y="789" width="0.0116%" height="15" fill="rgb(213,199,42)" fg:x="3205" fg:w="5"/><text x="7.6857%" y="799.50"></text></g><g><title>candle_core::storage::Storage::reduce_op (5 samples, 0.01%)</title><rect x="7.4496%" y="869" width="0.0116%" height="15" fill="rgb(235,201,11)" fg:x="3211" fg:w="5"/><text x="7.6996%" y="879.50"></text></g><g><title>&lt;r2l_candle_lm::distributions::diagonal_distribution::DiagGaussianDistribution as r2l_core::distributions::Policy&gt;::log_probs (2,552 samples, 5.92%)</title><rect x="1.5428%" y="901" width="5.9207%" height="15" fill="rgb(207,46,11)" fg:x="665" fg:w="2552"/><text x="1.7928%" y="911.50">&lt;r2l_can..</text></g><g><title>candle_core::tensor::Tensor::sum_impl (7 samples, 0.02%)</title><rect x="7.4473%" y="885" width="0.0162%" height="15" fill="rgb(241,35,35)" fg:x="3210" fg:w="7"/><text x="7.6973%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (7 samples, 0.02%)</title><rect x="7.4658%" y="885" width="0.0162%" height="15" fill="rgb(243,32,47)" fg:x="3218" fg:w="7"/><text x="7.7158%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (6 samples, 0.01%)</title><rect x="7.4682%" y="869" width="0.0139%" height="15" fill="rgb(247,202,23)" fg:x="3219" fg:w="6"/><text x="7.7182%" y="879.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::affine (590 samples, 1.37%)</title><rect x="7.6654%" y="821" width="1.3688%" height="15" fill="rgb(219,102,11)" fg:x="3304" fg:w="590"/><text x="7.9154%" y="831.50"></text></g><g><title>candle_core::cpu_backend::utils::unary_map (577 samples, 1.34%)</title><rect x="7.6955%" y="805" width="1.3387%" height="15" fill="rgb(243,110,44)" fg:x="3317" fg:w="577"/><text x="7.9455%" y="815.50"></text></g><g><title>candle_core::tensor::Tensor::storage (18 samples, 0.04%)</title><rect x="9.0342%" y="821" width="0.0418%" height="15" fill="rgb(222,74,54)" fg:x="3894" fg:w="18"/><text x="9.2842%" y="831.50"></text></g><g><title>&lt;&amp;candle_core::tensor::Tensor as core::ops::arith::Mul&lt;f64&gt;&gt;::mul (741 samples, 1.72%)</title><rect x="7.5285%" y="853" width="1.7191%" height="15" fill="rgb(216,99,12)" fg:x="3245" fg:w="741"/><text x="7.7785%" y="863.50"></text></g><g><title>candle_core::tensor::Tensor::affine (740 samples, 1.72%)</title><rect x="7.5308%" y="837" width="1.7168%" height="15" fill="rgb(226,22,26)" fg:x="3246" fg:w="740"/><text x="7.7808%" y="847.50"></text></g><g><title>candle_core::tensor::from_storage (74 samples, 0.17%)</title><rect x="9.0759%" y="821" width="0.1717%" height="15" fill="rgb(217,163,10)" fg:x="3912" fg:w="74"/><text x="9.3259%" y="831.50"></text></g><g><title>candle_core::layout::Layout::contiguous_with_offset (24 samples, 0.06%)</title><rect x="9.1919%" y="805" width="0.0557%" height="15" fill="rgb(213,25,53)" fg:x="3962" fg:w="24"/><text x="9.4419%" y="815.50"></text></g><g><title>candle_core::storage::Storage::binary_impl (60 samples, 0.14%)</title><rect x="9.3103%" y="821" width="0.1392%" height="15" fill="rgb(252,105,26)" fg:x="4013" fg:w="60"/><text x="9.5603%" y="831.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::binary_impl (52 samples, 0.12%)</title><rect x="9.3288%" y="805" width="0.1206%" height="15" fill="rgb(220,39,43)" fg:x="4021" fg:w="52"/><text x="9.5788%" y="815.50"></text></g><g><title>candle_core::cpu_backend::utils::binary_map (46 samples, 0.11%)</title><rect x="9.3427%" y="789" width="0.1067%" height="15" fill="rgb(229,68,48)" fg:x="4027" fg:w="46"/><text x="9.5927%" y="799.50"></text></g><g><title>candle_core::tensor::Tensor::storage (10 samples, 0.02%)</title><rect x="9.4587%" y="821" width="0.0232%" height="15" fill="rgb(252,8,32)" fg:x="4077" fg:w="10"/><text x="9.7087%" y="831.50"></text></g><g><title>&lt;candle_core::tensor::Tensor as core::ops::arith::Add&lt;B&gt;&gt;::add (122 samples, 0.28%)</title><rect x="9.2476%" y="853" width="0.2830%" height="15" fill="rgb(223,20,43)" fg:x="3986" fg:w="122"/><text x="9.4976%" y="863.50"></text></g><g><title>candle_core::tensor::Tensor::add (117 samples, 0.27%)</title><rect x="9.2592%" y="837" width="0.2714%" height="15" fill="rgb(229,81,49)" fg:x="3991" fg:w="117"/><text x="9.5092%" y="847.50"></text></g><g><title>candle_core::tensor::from_storage (21 samples, 0.05%)</title><rect x="9.4819%" y="821" width="0.0487%" height="15" fill="rgb(236,28,36)" fg:x="4087" fg:w="21"/><text x="9.7319%" y="831.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::affine (18 samples, 0.04%)</title><rect x="9.5539%" y="821" width="0.0418%" height="15" fill="rgb(249,185,26)" fg:x="4118" fg:w="18"/><text x="9.8039%" y="831.50"></text></g><g><title>candle_core::cpu_backend::utils::unary_map (16 samples, 0.04%)</title><rect x="9.5585%" y="805" width="0.0371%" height="15" fill="rgb(249,174,33)" fg:x="4120" fg:w="16"/><text x="9.8085%" y="815.50"></text></g><g><title>&lt;candle_core::tensor::Tensor as core::ops::arith::Add&lt;f64&gt;&gt;::add (40 samples, 0.09%)</title><rect x="9.5307%" y="853" width="0.0928%" height="15" fill="rgb(233,201,37)" fg:x="4108" fg:w="40"/><text x="9.7807%" y="863.50"></text></g><g><title>candle_core::tensor::Tensor::affine (38 samples, 0.09%)</title><rect x="9.5353%" y="837" width="0.0882%" height="15" fill="rgb(221,78,26)" fg:x="4110" fg:w="38"/><text x="9.7853%" y="847.50"></text></g><g><title>candle_core::tensor::from_storage (11 samples, 0.03%)</title><rect x="9.5979%" y="821" width="0.0255%" height="15" fill="rgb(250,127,30)" fg:x="4137" fg:w="11"/><text x="9.8479%" y="831.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::binary_impl (280 samples, 0.65%)</title><rect x="9.6675%" y="805" width="0.6496%" height="15" fill="rgb(230,49,44)" fg:x="4167" fg:w="280"/><text x="9.9175%" y="815.50"></text></g><g><title>candle_core::cpu_backend::utils::binary_map (274 samples, 0.64%)</title><rect x="9.6815%" y="789" width="0.6357%" height="15" fill="rgb(229,67,23)" fg:x="4173" fg:w="274"/><text x="9.9315%" y="799.50"></text></g><g><title>candle_core::storage::Storage::binary_impl (282 samples, 0.65%)</title><rect x="9.6652%" y="821" width="0.6542%" height="15" fill="rgb(249,83,47)" fg:x="4166" fg:w="282"/><text x="9.9152%" y="831.50"></text></g><g><title>candle_core::tensor::Tensor::storage (7 samples, 0.02%)</title><rect x="10.3195%" y="821" width="0.0162%" height="15" fill="rgb(215,43,3)" fg:x="4448" fg:w="7"/><text x="10.5695%" y="831.50"></text></g><g><title>&lt;candle_core::tensor::Tensor as core::ops::arith::Div&lt;B&gt;&gt;::div (320 samples, 0.74%)</title><rect x="9.6235%" y="853" width="0.7424%" height="15" fill="rgb(238,154,13)" fg:x="4148" fg:w="320"/><text x="9.8735%" y="863.50"></text></g><g><title>candle_core::tensor::Tensor::div (314 samples, 0.73%)</title><rect x="9.6374%" y="837" width="0.7285%" height="15" fill="rgb(219,56,2)" fg:x="4154" fg:w="314"/><text x="9.8874%" y="847.50"></text></g><g><title>candle_core::tensor::from_storage (13 samples, 0.03%)</title><rect x="10.3357%" y="821" width="0.0302%" height="15" fill="rgb(233,0,4)" fg:x="4455" fg:w="13"/><text x="10.5857%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (10 samples, 0.02%)</title><rect x="10.3821%" y="837" width="0.0232%" height="15" fill="rgb(235,30,7)" fg:x="4475" fg:w="10"/><text x="10.6321%" y="847.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::affine (294 samples, 0.68%)</title><rect x="10.4378%" y="821" width="0.6821%" height="15" fill="rgb(250,79,13)" fg:x="4499" fg:w="294"/><text x="10.6878%" y="831.50"></text></g><g><title>candle_core::cpu_backend::utils::unary_map (289 samples, 0.67%)</title><rect x="10.4494%" y="805" width="0.6705%" height="15" fill="rgb(211,146,34)" fg:x="4504" fg:w="289"/><text x="10.6994%" y="815.50"></text></g><g><title>candle_core::tensor::Tensor::storage (9 samples, 0.02%)</title><rect x="11.1199%" y="821" width="0.0209%" height="15" fill="rgb(228,22,38)" fg:x="4793" fg:w="9"/><text x="11.3699%" y="831.50"></text></g><g><title>&lt;candle_core::tensor::Tensor as core::ops::arith::Mul&lt;f64&gt;&gt;::mul (357 samples, 0.83%)</title><rect x="10.3659%" y="853" width="0.8282%" height="15" fill="rgb(235,168,5)" fg:x="4468" fg:w="357"/><text x="10.6159%" y="863.50"></text></g><g><title>candle_core::tensor::Tensor::affine (340 samples, 0.79%)</title><rect x="10.4053%" y="837" width="0.7888%" height="15" fill="rgb(221,155,16)" fg:x="4485" fg:w="340"/><text x="10.6553%" y="847.50"></text></g><g><title>candle_core::tensor::from_storage (23 samples, 0.05%)</title><rect x="11.1408%" y="821" width="0.0534%" height="15" fill="rgb(215,215,53)" fg:x="4802" fg:w="23"/><text x="11.3908%" y="831.50"></text></g><g><title>candle_core::layout::Layout::contiguous_with_offset (8 samples, 0.02%)</title><rect x="11.1756%" y="805" width="0.0186%" height="15" fill="rgb(223,4,10)" fg:x="4817" fg:w="8"/><text x="11.4256%" y="815.50"></text></g><g><title>candle_core::storage::Storage::binary_impl (39 samples, 0.09%)</title><rect x="11.2544%" y="821" width="0.0905%" height="15" fill="rgb(234,103,6)" fg:x="4851" fg:w="39"/><text x="11.5044%" y="831.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::binary_impl (36 samples, 0.08%)</title><rect x="11.2614%" y="805" width="0.0835%" height="15" fill="rgb(227,97,0)" fg:x="4854" fg:w="36"/><text x="11.5114%" y="815.50"></text></g><g><title>candle_core::cpu_backend::utils::binary_map (32 samples, 0.07%)</title><rect x="11.2707%" y="789" width="0.0742%" height="15" fill="rgb(234,150,53)" fg:x="4858" fg:w="32"/><text x="11.5207%" y="799.50"></text></g><g><title>candle_core::tensor::Tensor::storage (7 samples, 0.02%)</title><rect x="11.3472%" y="821" width="0.0162%" height="15" fill="rgb(228,201,54)" fg:x="4891" fg:w="7"/><text x="11.5972%" y="831.50"></text></g><g><title>&lt;candle_core::tensor::Tensor as core::ops::arith::Sub&lt;B&gt;&gt;::sub (89 samples, 0.21%)</title><rect x="11.1941%" y="853" width="0.2065%" height="15" fill="rgb(222,22,37)" fg:x="4825" fg:w="89"/><text x="11.4441%" y="863.50"></text></g><g><title>candle_core::tensor::Tensor::sub (82 samples, 0.19%)</title><rect x="11.2104%" y="837" width="0.1902%" height="15" fill="rgb(237,53,32)" fg:x="4832" fg:w="82"/><text x="11.4604%" y="847.50"></text></g><g><title>candle_core::tensor::from_storage (16 samples, 0.04%)</title><rect x="11.3635%" y="821" width="0.0371%" height="15" fill="rgb(233,25,53)" fg:x="4898" fg:w="16"/><text x="11.6135%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (138 samples, 0.32%)</title><rect x="11.4076%" y="853" width="0.3202%" height="15" fill="rgb(210,40,34)" fg:x="4917" fg:w="138"/><text x="11.6576%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (100 samples, 0.23%)</title><rect x="11.4957%" y="837" width="0.2320%" height="15" fill="rgb(241,220,44)" fg:x="4955" fg:w="100"/><text x="11.7457%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (55 samples, 0.13%)</title><rect x="11.6001%" y="821" width="0.1276%" height="15" fill="rgb(235,28,35)" fg:x="5000" fg:w="55"/><text x="11.8501%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (28 samples, 0.06%)</title><rect x="11.6628%" y="805" width="0.0650%" height="15" fill="rgb(210,56,17)" fg:x="5027" fg:w="28"/><text x="11.9128%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (10 samples, 0.02%)</title><rect x="11.7045%" y="789" width="0.0232%" height="15" fill="rgb(224,130,29)" fg:x="5045" fg:w="10"/><text x="11.9545%" y="799.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::unary_impl (26 samples, 0.06%)</title><rect x="11.7440%" y="837" width="0.0603%" height="15" fill="rgb(235,212,8)" fg:x="5062" fg:w="26"/><text x="11.9940%" y="847.50"></text></g><g><title>candle_core::cpu_backend::utils::unary_map (22 samples, 0.05%)</title><rect x="11.7532%" y="821" width="0.0510%" height="15" fill="rgb(223,33,50)" fg:x="5066" fg:w="22"/><text x="12.0032%" y="831.50"></text></g><g><title>candle_core::tensor::Tensor::sqr (49 samples, 0.11%)</title><rect x="11.7370%" y="853" width="0.1137%" height="15" fill="rgb(219,149,13)" fg:x="5059" fg:w="49"/><text x="11.9870%" y="863.50"></text></g><g><title>candle_core::tensor::from_storage (19 samples, 0.04%)</title><rect x="11.8066%" y="837" width="0.0441%" height="15" fill="rgb(250,156,29)" fg:x="5089" fg:w="19"/><text x="12.0566%" y="847.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::unary_impl (61 samples, 0.14%)</title><rect x="11.8762%" y="837" width="0.1415%" height="15" fill="rgb(216,193,19)" fg:x="5119" fg:w="61"/><text x="12.1262%" y="847.50"></text></g><g><title>candle_core::cpu_backend::utils::unary_map (59 samples, 0.14%)</title><rect x="11.8808%" y="821" width="0.1369%" height="15" fill="rgb(216,135,14)" fg:x="5121" fg:w="59"/><text x="12.1308%" y="831.50"></text></g><g><title>candle_core::tensor::Tensor::sqrt (92 samples, 0.21%)</title><rect x="11.8507%" y="853" width="0.2134%" height="15" fill="rgb(241,47,5)" fg:x="5108" fg:w="92"/><text x="12.1007%" y="863.50"></text></g><g><title>candle_core::tensor::from_storage (16 samples, 0.04%)</title><rect x="12.0270%" y="837" width="0.0371%" height="15" fill="rgb(233,42,35)" fg:x="5184" fg:w="16"/><text x="12.2770%" y="847.50"></text></g><g><title>&lt;candle_nn::optim::AdamW as candle_nn::optim::Optimizer&gt;::step (2,019 samples, 4.68%)</title><rect x="7.4983%" y="869" width="4.6841%" height="15" fill="rgb(231,13,6)" fg:x="3232" fg:w="2019"/><text x="7.7483%" y="879.50">&lt;cand..</text></g><g><title>candle_core::variable::Var::set (51 samples, 0.12%)</title><rect x="12.0641%" y="853" width="0.1183%" height="15" fill="rgb(207,181,40)" fg:x="5200" fg:w="51"/><text x="12.3141%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (41 samples, 0.10%)</title><rect x="12.1824%" y="869" width="0.0951%" height="15" fill="rgb(254,173,49)" fg:x="5251" fg:w="41"/><text x="12.4324%" y="879.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (33 samples, 0.08%)</title><rect x="12.2010%" y="853" width="0.0766%" height="15" fill="rgb(221,1,38)" fg:x="5259" fg:w="33"/><text x="12.4510%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (17 samples, 0.04%)</title><rect x="12.2381%" y="837" width="0.0394%" height="15" fill="rgb(206,124,46)" fg:x="5275" fg:w="17"/><text x="12.4881%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (9 samples, 0.02%)</title><rect x="12.2567%" y="821" width="0.0209%" height="15" fill="rgb(249,21,11)" fg:x="5283" fg:w="9"/><text x="12.5067%" y="831.50"></text></g><g><title>candle_core::storage::Storage::binary_impl (45 samples, 0.10%)</title><rect x="12.5049%" y="821" width="0.1044%" height="15" fill="rgb(222,201,40)" fg:x="5390" fg:w="45"/><text x="12.7549%" y="831.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::binary_impl (43 samples, 0.10%)</title><rect x="12.5096%" y="805" width="0.0998%" height="15" fill="rgb(235,61,29)" fg:x="5392" fg:w="43"/><text x="12.7596%" y="815.50"></text></g><g><title>candle_core::cpu_backend::utils::binary_map (41 samples, 0.10%)</title><rect x="12.5142%" y="789" width="0.0951%" height="15" fill="rgb(219,207,3)" fg:x="5394" fg:w="41"/><text x="12.7642%" y="799.50"></text></g><g><title>&lt;&amp;candle_core::tensor::Tensor as core::ops::arith::Mul&lt;B&gt;&gt;::mul (57 samples, 0.13%)</title><rect x="12.4933%" y="853" width="0.1322%" height="15" fill="rgb(222,56,46)" fg:x="5385" fg:w="57"/><text x="12.7433%" y="863.50"></text></g><g><title>candle_core::tensor::Tensor::mul (56 samples, 0.13%)</title><rect x="12.4956%" y="837" width="0.1299%" height="15" fill="rgb(239,76,54)" fg:x="5386" fg:w="56"/><text x="12.7456%" y="847.50"></text></g><g><title>candle_core::tensor::from_storage (5 samples, 0.01%)</title><rect x="12.6140%" y="821" width="0.0116%" height="15" fill="rgb(231,124,27)" fg:x="5437" fg:w="5"/><text x="12.8640%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (152 samples, 0.35%)</title><rect x="12.6302%" y="853" width="0.3526%" height="15" fill="rgb(249,195,6)" fg:x="5444" fg:w="152"/><text x="12.8802%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (82 samples, 0.19%)</title><rect x="12.7926%" y="837" width="0.1902%" height="15" fill="rgb(237,174,47)" fg:x="5514" fg:w="82"/><text x="13.0426%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (39 samples, 0.09%)</title><rect x="12.8924%" y="821" width="0.0905%" height="15" fill="rgb(206,201,31)" fg:x="5557" fg:w="39"/><text x="13.1424%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (15 samples, 0.03%)</title><rect x="12.9481%" y="805" width="0.0348%" height="15" fill="rgb(231,57,52)" fg:x="5581" fg:w="15"/><text x="13.1981%" y="815.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes::walk (8 samples, 0.02%)</title><rect x="13.0617%" y="437" width="0.0186%" height="15" fill="rgb(248,177,22)" fg:x="5630" fg:w="8"/><text x="13.3117%" y="447.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes::walk (11 samples, 0.03%)</title><rect x="13.0594%" y="453" width="0.0255%" height="15" fill="rgb(215,211,37)" fg:x="5629" fg:w="11"/><text x="13.3094%" y="463.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes::walk (15 samples, 0.03%)</title><rect x="13.0594%" y="469" width="0.0348%" height="15" fill="rgb(241,128,51)" fg:x="5629" fg:w="15"/><text x="13.3094%" y="479.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes::walk (17 samples, 0.04%)</title><rect x="13.0571%" y="501" width="0.0394%" height="15" fill="rgb(227,165,31)" fg:x="5628" fg:w="17"/><text x="13.3071%" y="511.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes::walk (16 samples, 0.04%)</title><rect x="13.0594%" y="485" width="0.0371%" height="15" fill="rgb(228,167,24)" fg:x="5629" fg:w="16"/><text x="13.3094%" y="495.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes::walk (21 samples, 0.05%)</title><rect x="13.0548%" y="533" width="0.0487%" height="15" fill="rgb(228,143,12)" fg:x="5627" fg:w="21"/><text x="13.3048%" y="543.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes::walk (21 samples, 0.05%)</title><rect x="13.0548%" y="517" width="0.0487%" height="15" fill="rgb(249,149,8)" fg:x="5627" fg:w="21"/><text x="13.3048%" y="527.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes::walk (23 samples, 0.05%)</title><rect x="13.0525%" y="549" width="0.0534%" height="15" fill="rgb(243,35,44)" fg:x="5626" fg:w="23"/><text x="13.3025%" y="559.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes::walk (24 samples, 0.06%)</title><rect x="13.0525%" y="565" width="0.0557%" height="15" fill="rgb(246,89,9)" fg:x="5626" fg:w="24"/><text x="13.3025%" y="575.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes::walk (27 samples, 0.06%)</title><rect x="13.0478%" y="581" width="0.0626%" height="15" fill="rgb(233,213,13)" fg:x="5624" fg:w="27"/><text x="13.2978%" y="591.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes::walk (34 samples, 0.08%)</title><rect x="13.0478%" y="597" width="0.0789%" height="15" fill="rgb(233,141,41)" fg:x="5624" fg:w="34"/><text x="13.2978%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.02%)</title><rect x="13.1105%" y="581" width="0.0162%" height="15" fill="rgb(239,167,4)" fg:x="5651" fg:w="7"/><text x="13.3605%" y="591.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes::walk (57 samples, 0.13%)</title><rect x="13.0455%" y="613" width="0.1322%" height="15" fill="rgb(209,217,16)" fg:x="5623" fg:w="57"/><text x="13.2955%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (21 samples, 0.05%)</title><rect x="13.1290%" y="597" width="0.0487%" height="15" fill="rgb(219,88,35)" fg:x="5659" fg:w="21"/><text x="13.3790%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13 samples, 0.03%)</title><rect x="13.1476%" y="581" width="0.0302%" height="15" fill="rgb(220,193,23)" fg:x="5667" fg:w="13"/><text x="13.3976%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="13.1661%" y="565" width="0.0116%" height="15" fill="rgb(230,90,52)" fg:x="5675" fg:w="5"/><text x="13.4161%" y="575.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes::walk (62 samples, 0.14%)</title><rect x="13.0385%" y="629" width="0.1438%" height="15" fill="rgb(252,106,19)" fg:x="5620" fg:w="62"/><text x="13.2885%" y="639.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes::walk (66 samples, 0.15%)</title><rect x="13.0316%" y="661" width="0.1531%" height="15" fill="rgb(206,74,20)" fg:x="5617" fg:w="66"/><text x="13.2816%" y="671.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes::walk (65 samples, 0.15%)</title><rect x="13.0339%" y="645" width="0.1508%" height="15" fill="rgb(230,138,44)" fg:x="5618" fg:w="65"/><text x="13.2839%" y="655.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes::walk (70 samples, 0.16%)</title><rect x="13.0246%" y="677" width="0.1624%" height="15" fill="rgb(235,182,43)" fg:x="5614" fg:w="70"/><text x="13.2746%" y="687.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes::walk (76 samples, 0.18%)</title><rect x="13.0130%" y="693" width="0.1763%" height="15" fill="rgb(242,16,51)" fg:x="5609" fg:w="76"/><text x="13.2630%" y="703.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes::walk (79 samples, 0.18%)</title><rect x="13.0084%" y="709" width="0.1833%" height="15" fill="rgb(248,9,4)" fg:x="5607" fg:w="79"/><text x="13.2584%" y="719.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes::walk (89 samples, 0.21%)</title><rect x="12.9945%" y="773" width="0.2065%" height="15" fill="rgb(210,31,22)" fg:x="5601" fg:w="89"/><text x="13.2445%" y="783.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes::walk (89 samples, 0.21%)</title><rect x="12.9945%" y="757" width="0.2065%" height="15" fill="rgb(239,54,39)" fg:x="5601" fg:w="89"/><text x="13.2445%" y="767.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes::walk (89 samples, 0.21%)</title><rect x="12.9945%" y="741" width="0.2065%" height="15" fill="rgb(230,99,41)" fg:x="5601" fg:w="89"/><text x="13.2445%" y="751.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes::walk (87 samples, 0.20%)</title><rect x="12.9991%" y="725" width="0.2018%" height="15" fill="rgb(253,106,12)" fg:x="5603" fg:w="87"/><text x="13.2491%" y="735.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes::walk (93 samples, 0.22%)</title><rect x="12.9898%" y="805" width="0.2158%" height="15" fill="rgb(213,46,41)" fg:x="5599" fg:w="93"/><text x="13.2398%" y="815.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes::walk (92 samples, 0.21%)</title><rect x="12.9921%" y="789" width="0.2134%" height="15" fill="rgb(215,133,35)" fg:x="5600" fg:w="92"/><text x="13.2421%" y="799.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes (99 samples, 0.23%)</title><rect x="12.9829%" y="853" width="0.2297%" height="15" fill="rgb(213,28,5)" fg:x="5596" fg:w="99"/><text x="13.2329%" y="863.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes::walk (98 samples, 0.23%)</title><rect x="12.9852%" y="837" width="0.2274%" height="15" fill="rgb(215,77,49)" fg:x="5597" fg:w="98"/><text x="13.2352%" y="847.50"></text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::sorted_nodes::walk (97 samples, 0.23%)</title><rect x="12.9875%" y="821" width="0.2250%" height="15" fill="rgb(248,100,22)" fg:x="5598" fg:w="97"/><text x="13.2375%" y="831.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuDevice as candle_core::backend::BackendDevice&gt;::zeros_impl (17 samples, 0.04%)</title><rect x="13.3935%" y="821" width="0.0394%" height="15" fill="rgb(208,67,9)" fg:x="5773" fg:w="17"/><text x="13.6435%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.01%)</title><rect x="13.5814%" y="805" width="0.0116%" height="15" fill="rgb(219,133,21)" fg:x="5854" fg:w="5"/><text x="13.8314%" y="815.50"></text></g><g><title>candle_core::tensor::Tensor::zeros_like (141 samples, 0.33%)</title><rect x="13.2682%" y="837" width="0.3271%" height="15" fill="rgb(246,46,29)" fg:x="5719" fg:w="141"/><text x="13.5182%" y="847.50"></text></g><g><title>candle_core::tensor::from_storage (69 samples, 0.16%)</title><rect x="13.4353%" y="821" width="0.1601%" height="15" fill="rgb(246,185,52)" fg:x="5791" fg:w="69"/><text x="13.6853%" y="831.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17 samples, 0.04%)</title><rect x="13.5953%" y="837" width="0.0394%" height="15" fill="rgb(252,136,11)" fg:x="5860" fg:w="17"/><text x="13.8453%" y="847.50"></text></g><g><title>candle_core::backprop::GradStore::or_insert (191 samples, 0.44%)</title><rect x="13.2195%" y="853" width="0.4431%" height="15" fill="rgb(219,138,53)" fg:x="5698" fg:w="191"/><text x="13.4695%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.03%)</title><rect x="13.6348%" y="837" width="0.0278%" height="15" fill="rgb(211,51,23)" fg:x="5877" fg:w="12"/><text x="13.8848%" y="847.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="13.6487%" y="821" width="0.0139%" height="15" fill="rgb(247,221,28)" fg:x="5883" fg:w="6"/><text x="13.8987%" y="831.50"></text></g><g><title>candle_core::storage::Storage::reduce_op (1,425 samples, 3.31%)</title><rect x="13.6742%" y="853" width="3.3060%" height="15" fill="rgb(251,222,45)" fg:x="5894" fg:w="1425"/><text x="13.9242%" y="863.50">can..</text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::reduce_op (1,421 samples, 3.30%)</title><rect x="13.6835%" y="837" width="3.2968%" height="15" fill="rgb(217,162,53)" fg:x="5898" fg:w="1421"/><text x="13.9335%" y="847.50">&lt;ca..</text></g><g><title>candle_core::storage::Storage::binary_impl (870 samples, 2.02%)</title><rect x="17.1032%" y="837" width="2.0184%" height="15" fill="rgb(229,93,14)" fg:x="7372" fg:w="870"/><text x="17.3532%" y="847.50">c..</text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::binary_impl (851 samples, 1.97%)</title><rect x="17.1473%" y="821" width="1.9743%" height="15" fill="rgb(209,67,49)" fg:x="7391" fg:w="851"/><text x="17.3973%" y="831.50">&lt;..</text></g><g><title>candle_core::cpu_backend::utils::binary_map (826 samples, 1.92%)</title><rect x="17.2053%" y="805" width="1.9163%" height="15" fill="rgb(213,87,29)" fg:x="7416" fg:w="826"/><text x="17.4553%" y="815.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (591 samples, 1.37%)</title><rect x="17.7505%" y="789" width="1.3711%" height="15" fill="rgb(205,151,52)" fg:x="7651" fg:w="591"/><text x="18.0005%" y="799.50"></text></g><g><title>candle_core::tensor::Tensor::same_shape_binary_op (5 samples, 0.01%)</title><rect x="19.1216%" y="837" width="0.0116%" height="15" fill="rgb(253,215,39)" fg:x="8242" fg:w="5"/><text x="19.3716%" y="847.50"></text></g><g><title>candle_core::tensor::Tensor::storage (25 samples, 0.06%)</title><rect x="19.1332%" y="837" width="0.0580%" height="15" fill="rgb(221,220,41)" fg:x="8247" fg:w="25"/><text x="19.3832%" y="847.50"></text></g><g><title>candle_core::tensor::Tensor::add (1,011 samples, 2.35%)</title><rect x="16.9803%" y="853" width="2.3455%" height="15" fill="rgb(218,133,21)" fg:x="7319" fg:w="1011"/><text x="17.2303%" y="863.50">c..</text></g><g><title>candle_core::tensor::from_storage (58 samples, 0.13%)</title><rect x="19.1912%" y="837" width="0.1346%" height="15" fill="rgb(221,193,43)" fg:x="8272" fg:w="58"/><text x="19.4412%" y="847.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::affine (6 samples, 0.01%)</title><rect x="19.3351%" y="837" width="0.0139%" height="15" fill="rgb(240,128,52)" fg:x="8334" fg:w="6"/><text x="19.5851%" y="847.50"></text></g><g><title>candle_core::tensor::Tensor::affine (19 samples, 0.04%)</title><rect x="19.3258%" y="853" width="0.0441%" height="15" fill="rgb(253,114,12)" fg:x="8330" fg:w="19"/><text x="19.5758%" y="863.50"></text></g><g><title>candle_core::tensor::from_storage (7 samples, 0.02%)</title><rect x="19.3536%" y="837" width="0.0162%" height="15" fill="rgb(215,223,47)" fg:x="8342" fg:w="7"/><text x="19.6036%" y="847.50"></text></g><g><title>candle_core::tensor::Tensor::broadcast_as (9 samples, 0.02%)</title><rect x="19.3699%" y="853" width="0.0209%" height="15" fill="rgb(248,225,23)" fg:x="8349" fg:w="9"/><text x="19.6199%" y="863.50"></text></g><g><title>candle_core::storage::Storage::cmp (81 samples, 0.19%)</title><rect x="19.4279%" y="837" width="0.1879%" height="15" fill="rgb(250,108,0)" fg:x="8374" fg:w="81"/><text x="19.6779%" y="847.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::cmp (80 samples, 0.19%)</title><rect x="19.4302%" y="821" width="0.1856%" height="15" fill="rgb(228,208,7)" fg:x="8375" fg:w="80"/><text x="19.6802%" y="831.50"></text></g><g><title>candle_core::cpu_backend::utils::binary_map (79 samples, 0.18%)</title><rect x="19.4325%" y="805" width="0.1833%" height="15" fill="rgb(244,45,10)" fg:x="8376" fg:w="79"/><text x="19.6825%" y="815.50"></text></g><g><title>candle_core::tensor::Tensor::cmp (101 samples, 0.23%)</title><rect x="19.3908%" y="853" width="0.2343%" height="15" fill="rgb(207,125,25)" fg:x="8358" fg:w="101"/><text x="19.6408%" y="863.50"></text></g><g><title>candle_core::tensor::Tensor::detach (18 samples, 0.04%)</title><rect x="19.6251%" y="853" width="0.0418%" height="15" fill="rgb(210,195,18)" fg:x="8459" fg:w="18"/><text x="19.8751%" y="863.50"></text></g><g><title>candle_core::storage::Storage::binary_impl (5 samples, 0.01%)</title><rect x="19.6808%" y="837" width="0.0116%" height="15" fill="rgb(249,80,12)" fg:x="8483" fg:w="5"/><text x="19.9308%" y="847.50"></text></g><g><title>candle_core::tensor::Tensor::div (20 samples, 0.05%)</title><rect x="19.6668%" y="853" width="0.0464%" height="15" fill="rgb(221,65,9)" fg:x="8477" fg:w="20"/><text x="19.9168%" y="863.50"></text></g><g><title>candle_core::tensor::from_storage (7 samples, 0.02%)</title><rect x="19.6970%" y="837" width="0.0162%" height="15" fill="rgb(235,49,36)" fg:x="8490" fg:w="7"/><text x="19.9470%" y="847.50"></text></g><g><title>num_cpus::linux::get_num_cpus (196 samples, 0.45%)</title><rect x="19.7782%" y="789" width="0.4547%" height="15" fill="rgb(225,32,20)" fg:x="8525" fg:w="196"/><text x="20.0282%" y="799.50"></text></g><g><title>candle_core::utils::get_num_threads (217 samples, 0.50%)</title><rect x="19.7782%" y="805" width="0.5034%" height="15" fill="rgb(215,141,46)" fg:x="8525" fg:w="217"/><text x="20.0282%" y="815.50"></text></g><g><title>std::env::_var (21 samples, 0.05%)</title><rect x="20.2329%" y="789" width="0.0487%" height="15" fill="rgb(250,160,47)" fg:x="8721" fg:w="21"/><text x="20.4829%" y="799.50"></text></g><g><title>std::env::_var_os (20 samples, 0.05%)</title><rect x="20.2353%" y="773" width="0.0464%" height="15" fill="rgb(216,222,40)" fg:x="8722" fg:w="20"/><text x="20.4853%" y="783.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (17 samples, 0.04%)</title><rect x="20.2422%" y="757" width="0.0394%" height="15" fill="rgb(234,217,39)" fg:x="8725" fg:w="17"/><text x="20.4922%" y="767.50"></text></g><g><title>gemm_common::pack_operands::pack_lhs (13 samples, 0.03%)</title><rect x="20.4000%" y="789" width="0.0302%" height="15" fill="rgb(207,178,40)" fg:x="8793" fg:w="13"/><text x="20.6500%" y="799.50"></text></g><g><title>gemm_common::simd::x86::V3::vectorize::__impl (13 samples, 0.03%)</title><rect x="20.4000%" y="773" width="0.0302%" height="15" fill="rgb(221,136,13)" fg:x="8793" fg:w="13"/><text x="20.6500%" y="783.50"></text></g><g><title>gemm_common::pack_operands::pack_rhs (30 samples, 0.07%)</title><rect x="20.4301%" y="789" width="0.0696%" height="15" fill="rgb(249,199,10)" fg:x="8806" fg:w="30"/><text x="20.6801%" y="799.50"></text></g><g><title>gemm_common::simd::x86::V3::vectorize::__impl (30 samples, 0.07%)</title><rect x="20.4301%" y="773" width="0.0696%" height="15" fill="rgb(249,222,13)" fg:x="8806" fg:w="30"/><text x="20.6801%" y="783.50"></text></g><g><title>gemm_common::simd::x86::V3::vectorize::__impl (18 samples, 0.04%)</title><rect x="20.4997%" y="789" width="0.0418%" height="15" fill="rgb(244,185,38)" fg:x="8836" fg:w="18"/><text x="20.7497%" y="799.50"></text></g><g><title>gemm_f32::microkernel::fma::f32::x1x4 (53 samples, 0.12%)</title><rect x="20.5415%" y="789" width="0.1230%" height="15" fill="rgb(236,202,9)" fg:x="8854" fg:w="53"/><text x="20.7915%" y="799.50"></text></g><g><title>gemm_common::pack_operands::pack_lhs (54 samples, 0.13%)</title><rect x="20.7132%" y="773" width="0.1253%" height="15" fill="rgb(250,229,37)" fg:x="8928" fg:w="54"/><text x="20.9632%" y="783.50"></text></g><g><title>gemm_common::simd::x86::V3::vectorize::__impl (54 samples, 0.13%)</title><rect x="20.7132%" y="757" width="0.1253%" height="15" fill="rgb(206,174,23)" fg:x="8928" fg:w="54"/><text x="20.9632%" y="767.50"></text></g><g><title>gemm_f32::microkernel::fma::f32::x2x3 (7 samples, 0.02%)</title><rect x="20.8385%" y="773" width="0.0162%" height="15" fill="rgb(211,33,43)" fg:x="8982" fg:w="7"/><text x="21.0885%" y="783.50"></text></g><g><title>gemm_f32::microkernel::fma::f32::x2x4 (135 samples, 0.31%)</title><rect x="20.8547%" y="773" width="0.3132%" height="15" fill="rgb(245,58,50)" fg:x="8989" fg:w="135"/><text x="21.1047%" y="783.50"></text></g><g><title>gemm_f32::microkernel::fma::f32::x3x3 (14 samples, 0.03%)</title><rect x="21.1679%" y="773" width="0.0325%" height="15" fill="rgb(244,68,36)" fg:x="9124" fg:w="14"/><text x="21.4179%" y="783.50"></text></g><g><title>candle_core::storage::Storage::matmul (1,026 samples, 2.38%)</title><rect x="19.7457%" y="837" width="2.3803%" height="15" fill="rgb(232,229,15)" fg:x="8511" fg:w="1026"/><text x="19.9957%" y="847.50">ca..</text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::matmul (1,025 samples, 2.38%)</title><rect x="19.7480%" y="821" width="2.3780%" height="15" fill="rgb(254,30,23)" fg:x="8512" fg:w="1025"/><text x="19.9980%" y="831.50">&lt;c..</text></g><g><title>gemm_f32::gemm::f32::fma::gemm_basic (795 samples, 1.84%)</title><rect x="20.2817%" y="805" width="1.8444%" height="15" fill="rgb(235,160,14)" fg:x="8742" fg:w="795"/><text x="20.5317%" y="815.50">g..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (630 samples, 1.46%)</title><rect x="20.6645%" y="789" width="1.4616%" height="15" fill="rgb(212,155,44)" fg:x="8907" fg:w="630"/><text x="20.9145%" y="799.50"></text></g><g><title>gemm_f32::microkernel::fma::f32::x3x4 (399 samples, 0.93%)</title><rect x="21.2004%" y="773" width="0.9257%" height="15" fill="rgb(226,2,50)" fg:x="9138" fg:w="399"/><text x="21.4504%" y="783.50"></text></g><g><title>candle_core::tensor::Tensor::matmul (1,058 samples, 2.45%)</title><rect x="19.7132%" y="853" width="2.4546%" height="15" fill="rgb(234,177,6)" fg:x="8497" fg:w="1058"/><text x="19.9632%" y="863.50">ca..</text></g><g><title>candle_core::tensor::from_storage (14 samples, 0.03%)</title><rect x="22.1354%" y="837" width="0.0325%" height="15" fill="rgb(217,24,9)" fg:x="9541" fg:w="14"/><text x="22.3854%" y="847.50"></text></g><g><title>candle_core::storage::Storage::binary_impl (16 samples, 0.04%)</title><rect x="22.2050%" y="837" width="0.0371%" height="15" fill="rgb(220,13,46)" fg:x="9571" fg:w="16"/><text x="22.4550%" y="847.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::binary_impl (13 samples, 0.03%)</title><rect x="22.2119%" y="821" width="0.0302%" height="15" fill="rgb(239,221,27)" fg:x="9574" fg:w="13"/><text x="22.4619%" y="831.50"></text></g><g><title>candle_core::cpu_backend::utils::binary_map (9 samples, 0.02%)</title><rect x="22.2212%" y="805" width="0.0209%" height="15" fill="rgb(222,198,25)" fg:x="9578" fg:w="9"/><text x="22.4712%" y="815.50"></text></g><g><title>candle_core::tensor::Tensor::storage (7 samples, 0.02%)</title><rect x="22.2421%" y="837" width="0.0162%" height="15" fill="rgb(211,99,13)" fg:x="9587" fg:w="7"/><text x="22.4921%" y="847.50"></text></g><g><title>candle_core::tensor::Tensor::mul (55 samples, 0.13%)</title><rect x="22.1678%" y="853" width="0.1276%" height="15" fill="rgb(232,111,31)" fg:x="9555" fg:w="55"/><text x="22.4178%" y="863.50"></text></g><g><title>candle_core::tensor::from_storage (16 samples, 0.04%)</title><rect x="22.2583%" y="837" width="0.0371%" height="15" fill="rgb(245,82,37)" fg:x="9594" fg:w="16"/><text x="22.5083%" y="847.50"></text></g><g><title>candle_core::tensor::Tensor::squeeze (7 samples, 0.02%)</title><rect x="22.3140%" y="853" width="0.0162%" height="15" fill="rgb(227,149,46)" fg:x="9618" fg:w="7"/><text x="22.5640%" y="863.50"></text></g><g><title>candle_core::storage::Storage::binary_impl (5 samples, 0.01%)</title><rect x="22.3488%" y="837" width="0.0116%" height="15" fill="rgb(218,36,50)" fg:x="9633" fg:w="5"/><text x="22.5988%" y="847.50"></text></g><g><title>candle_core::tensor::Tensor::sub (18 samples, 0.04%)</title><rect x="22.3326%" y="853" width="0.0418%" height="15" fill="rgb(226,80,48)" fg:x="9626" fg:w="18"/><text x="22.5826%" y="863.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::to_dtype (50 samples, 0.12%)</title><rect x="22.3836%" y="837" width="0.1160%" height="15" fill="rgb(238,224,15)" fg:x="9648" fg:w="50"/><text x="22.6336%" y="847.50"></text></g><g><title>candle_core::cpu_backend::utils::unary_map (48 samples, 0.11%)</title><rect x="22.3882%" y="821" width="0.1114%" height="15" fill="rgb(241,136,10)" fg:x="9650" fg:w="48"/><text x="22.6382%" y="831.50"></text></g><g><title>candle_core::tensor::Tensor::to_dtype (63 samples, 0.15%)</title><rect x="22.3743%" y="853" width="0.1462%" height="15" fill="rgb(208,32,45)" fg:x="9644" fg:w="63"/><text x="22.6243%" y="863.50"></text></g><g><title>candle_core::tensor::from_storage (7 samples, 0.02%)</title><rect x="22.5042%" y="837" width="0.0162%" height="15" fill="rgb(207,135,9)" fg:x="9700" fg:w="7"/><text x="22.7542%" y="847.50"></text></g><g><title>candle_core::tensor::Tensor::transpose (22 samples, 0.05%)</title><rect x="22.5205%" y="853" width="0.0510%" height="15" fill="rgb(206,86,44)" fg:x="9707" fg:w="22"/><text x="22.7705%" y="863.50"></text></g><g><title>candle_core::tensor::Tensor::zeros_like (9 samples, 0.02%)</title><rect x="22.5715%" y="853" width="0.0209%" height="15" fill="rgb(245,177,15)" fg:x="9729" fg:w="9"/><text x="22.8215%" y="863.50"></text></g><g><title>candle_core::tensor::from_storage (12 samples, 0.03%)</title><rect x="22.5924%" y="853" width="0.0278%" height="15" fill="rgb(206,64,50)" fg:x="9738" fg:w="12"/><text x="22.8424%" y="863.50"></text></g><g><title>&lt;r2l_candle_lm::learning_module2::ParalellActorCriticLM2 as r2l_core::policies::LearningModule&gt;::update (6,540 samples, 15.17%)</title><rect x="7.4635%" y="901" width="15.1730%" height="15" fill="rgb(234,36,40)" fg:x="3217" fg:w="6540"/><text x="7.7135%" y="911.50">&lt;r2l_candle_lm::learnin..</text></g><g><title>r2l_candle_lm::optimizer::OptimizerWithMaxGrad::backward_step (6,530 samples, 15.15%)</title><rect x="7.4867%" y="885" width="15.1498%" height="15" fill="rgb(213,64,8)" fg:x="3227" fg:w="6530"/><text x="7.7367%" y="895.50">r2l_candle_lm::optimize..</text></g><g><title>candle_core::backprop::&lt;impl candle_core::tensor::Tensor&gt;::backward (4,465 samples, 10.36%)</title><rect x="12.2776%" y="869" width="10.3589%" height="15" fill="rgb(210,75,36)" fg:x="5292" fg:w="4465"/><text x="12.5276%" y="879.50">candle_core::ba..</text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 0.02%)</title><rect x="22.6202%" y="853" width="0.0162%" height="15" fill="rgb(229,88,21)" fg:x="9750" fg:w="7"/><text x="22.8702%" y="863.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::unary_impl (23 samples, 0.05%)</title><rect x="22.6411%" y="837" width="0.0534%" height="15" fill="rgb(252,204,47)" fg:x="9759" fg:w="23"/><text x="22.8911%" y="847.50"></text></g><g><title>candle_core::cpu_backend::utils::unary_map (22 samples, 0.05%)</title><rect x="22.6434%" y="821" width="0.0510%" height="15" fill="rgb(208,77,27)" fg:x="9760" fg:w="22"/><text x="22.8934%" y="831.50"></text></g><g><title>&lt;candle_nn::activation::Activation as candle_core::Module&gt;::forward (27 samples, 0.06%)</title><rect x="22.6365%" y="869" width="0.0626%" height="15" fill="rgb(221,76,26)" fg:x="9757" fg:w="27"/><text x="22.8865%" y="879.50"></text></g><g><title>candle_core::tensor::Tensor::relu (27 samples, 0.06%)</title><rect x="22.6365%" y="853" width="0.0626%" height="15" fill="rgb(225,139,18)" fg:x="9757" fg:w="27"/><text x="22.8865%" y="863.50"></text></g><g><title>candle_core::storage::Storage::binary_impl (435 samples, 1.01%)</title><rect x="22.7246%" y="821" width="1.0092%" height="15" fill="rgb(230,137,11)" fg:x="9795" fg:w="435"/><text x="22.9746%" y="831.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::binary_impl (433 samples, 1.00%)</title><rect x="22.7293%" y="805" width="1.0046%" height="15" fill="rgb(212,28,1)" fg:x="9797" fg:w="433"/><text x="22.9793%" y="815.50"></text></g><g><title>candle_core::cpu_backend::utils::binary_map (433 samples, 1.00%)</title><rect x="22.7293%" y="789" width="1.0046%" height="15" fill="rgb(248,164,17)" fg:x="9797" fg:w="433"/><text x="22.9793%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (429 samples, 1.00%)</title><rect x="22.7386%" y="773" width="0.9953%" height="15" fill="rgb(222,171,42)" fg:x="9801" fg:w="429"/><text x="22.9886%" y="783.50"></text></g><g><title>candle_core::tensor::Tensor::add (441 samples, 1.02%)</title><rect x="22.7177%" y="837" width="1.0231%" height="15" fill="rgb(243,84,45)" fg:x="9792" fg:w="441"/><text x="22.9677%" y="847.50"></text></g><g><title>candle_core::tensor::Tensor::broadcast_add (459 samples, 1.06%)</title><rect x="22.7014%" y="853" width="1.0649%" height="15" fill="rgb(252,49,23)" fg:x="9785" fg:w="459"/><text x="22.9514%" y="863.50"></text></g><g><title>candle_core::tensor::Tensor::broadcast_as (11 samples, 0.03%)</title><rect x="23.7408%" y="837" width="0.0255%" height="15" fill="rgb(215,19,7)" fg:x="10233" fg:w="11"/><text x="23.9908%" y="847.50"></text></g><g><title>num_cpus::linux::get_num_cpus (47 samples, 0.11%)</title><rect x="23.7802%" y="789" width="0.1090%" height="15" fill="rgb(238,81,41)" fg:x="10250" fg:w="47"/><text x="24.0302%" y="799.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (8 samples, 0.02%)</title><rect x="23.8893%" y="757" width="0.0186%" height="15" fill="rgb(210,199,37)" fg:x="10297" fg:w="8"/><text x="24.1393%" y="767.50"></text></g><g><title>candle_core::utils::get_num_threads (56 samples, 0.13%)</title><rect x="23.7802%" y="805" width="0.1299%" height="15" fill="rgb(244,192,49)" fg:x="10250" fg:w="56"/><text x="24.0302%" y="815.50"></text></g><g><title>std::env::_var (9 samples, 0.02%)</title><rect x="23.8893%" y="789" width="0.0209%" height="15" fill="rgb(226,211,11)" fg:x="10297" fg:w="9"/><text x="24.1393%" y="799.50"></text></g><g><title>std::env::_var_os (9 samples, 0.02%)</title><rect x="23.8893%" y="773" width="0.0209%" height="15" fill="rgb(236,162,54)" fg:x="10297" fg:w="9"/><text x="24.1393%" y="783.50"></text></g><g><title>gemm_common::pack_operands::pack_lhs (28 samples, 0.06%)</title><rect x="23.9357%" y="789" width="0.0650%" height="15" fill="rgb(220,229,9)" fg:x="10317" fg:w="28"/><text x="24.1857%" y="799.50"></text></g><g><title>gemm_common::simd::x86::V3::vectorize::__impl (28 samples, 0.06%)</title><rect x="23.9357%" y="773" width="0.0650%" height="15" fill="rgb(250,87,22)" fg:x="10317" fg:w="28"/><text x="24.1857%" y="783.50"></text></g><g><title>gemm_common::simd::x86::V3::vectorize::__impl (8 samples, 0.02%)</title><rect x="24.0006%" y="789" width="0.0186%" height="15" fill="rgb(239,43,17)" fg:x="10345" fg:w="8"/><text x="24.2506%" y="799.50"></text></g><g><title>gemm_f32::microkernel::fma::f32::x2x4 (37 samples, 0.09%)</title><rect x="24.0192%" y="789" width="0.0858%" height="15" fill="rgb(231,177,25)" fg:x="10353" fg:w="37"/><text x="24.2692%" y="799.50"></text></g><g><title>candle_core::storage::Storage::matmul (254 samples, 0.59%)</title><rect x="23.7663%" y="837" width="0.5893%" height="15" fill="rgb(219,179,1)" fg:x="10244" fg:w="254"/><text x="24.0163%" y="847.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::matmul (254 samples, 0.59%)</title><rect x="23.7663%" y="821" width="0.5893%" height="15" fill="rgb(238,219,53)" fg:x="10244" fg:w="254"/><text x="24.0163%" y="831.50"></text></g><g><title>gemm_f32::gemm::f32::fma::gemm_basic (192 samples, 0.45%)</title><rect x="23.9102%" y="805" width="0.4454%" height="15" fill="rgb(232,167,36)" fg:x="10306" fg:w="192"/><text x="24.1602%" y="815.50"></text></g><g><title>gemm_f32::microkernel::fma::f32::x3x4 (108 samples, 0.25%)</title><rect x="24.1051%" y="789" width="0.2506%" height="15" fill="rgb(244,19,51)" fg:x="10390" fg:w="108"/><text x="24.3551%" y="799.50"></text></g><g><title>candle_core::tensor::Tensor::matmul (259 samples, 0.60%)</title><rect x="23.7663%" y="853" width="0.6009%" height="15" fill="rgb(224,6,22)" fg:x="10244" fg:w="259"/><text x="24.0163%" y="863.50"></text></g><g><title>&lt;r2l_candle_lm::thread_safe_sequential::ThreadSafeSequential as candle_core::Module&gt;::forward (751 samples, 1.74%)</title><rect x="22.6365%" y="885" width="1.7423%" height="15" fill="rgb(224,145,5)" fg:x="9757" fg:w="751"/><text x="22.8865%" y="895.50"></text></g><g><title>&lt;candle_nn::linear::Linear as candle_core::Module&gt;::forward (724 samples, 1.68%)</title><rect x="22.6991%" y="869" width="1.6797%" height="15" fill="rgb(234,130,49)" fg:x="9784" fg:w="724"/><text x="22.9491%" y="879.50"></text></g><g><title>candle_core::tensor::Tensor::t (5 samples, 0.01%)</title><rect x="24.3672%" y="853" width="0.0116%" height="15" fill="rgb(254,6,2)" fg:x="10503" fg:w="5"/><text x="24.6172%" y="863.50"></text></g><g><title>candle_core::tensor::Tensor::transpose (5 samples, 0.01%)</title><rect x="24.3672%" y="837" width="0.0116%" height="15" fill="rgb(208,96,46)" fg:x="10503" fg:w="5"/><text x="24.6172%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (25 samples, 0.06%)</title><rect x="24.4299%" y="869" width="0.0580%" height="15" fill="rgb(239,3,39)" fg:x="10530" fg:w="25"/><text x="24.6799%" y="879.50"></text></g><g><title>candle_core::tensor::Tensor::storage (5 samples, 0.01%)</title><rect x="24.5714%" y="853" width="0.0116%" height="15" fill="rgb(233,210,1)" fg:x="10591" fg:w="5"/><text x="24.8214%" y="863.50"></text></g><g><title>candle_core::tensor_cat::&lt;impl candle_core::tensor::Tensor&gt;::cat_contiguous (37 samples, 0.09%)</title><rect x="24.5041%" y="869" width="0.0858%" height="15" fill="rgb(244,137,37)" fg:x="10562" fg:w="37"/><text x="24.7541%" y="879.50"></text></g><g><title>&lt;r2l_candle_lm::learning_module2::SequentialValueFunction as r2l_core::policies::ValueFunction&gt;::calculate_values (911 samples, 2.11%)</title><rect x="22.6365%" y="901" width="2.1135%" height="15" fill="rgb(240,136,2)" fg:x="9757" fg:w="911"/><text x="22.8865%" y="911.50">&lt;..</text></g><g><title>candle_core::tensor::Tensor::stack (159 samples, 0.37%)</title><rect x="24.3811%" y="885" width="0.3689%" height="15" fill="rgb(239,18,37)" fg:x="10509" fg:w="159"/><text x="24.6311%" y="895.50"></text></g><g><title>core::iter::adapters::try_process (69 samples, 0.16%)</title><rect x="24.5899%" y="869" width="0.1601%" height="15" fill="rgb(218,185,22)" fg:x="10599" fg:w="69"/><text x="24.8399%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (69 samples, 0.16%)</title><rect x="24.5899%" y="853" width="0.1601%" height="15" fill="rgb(225,218,4)" fg:x="10599" fg:w="69"/><text x="24.8399%" y="863.50"></text></g><g><title>candle_core::tensor::Tensor::unsqueeze (67 samples, 0.16%)</title><rect x="24.5946%" y="837" width="0.1554%" height="15" fill="rgb(230,182,32)" fg:x="10601" fg:w="67"/><text x="24.8446%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (10 samples, 0.02%)</title><rect x="24.7268%" y="821" width="0.0232%" height="15" fill="rgb(242,56,43)" fg:x="10658" fg:w="10"/><text x="24.9768%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (31 samples, 0.07%)</title><rect x="24.7523%" y="901" width="0.0719%" height="15" fill="rgb(233,99,24)" fg:x="10669" fg:w="31"/><text x="25.0023%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (31 samples, 0.07%)</title><rect x="24.7523%" y="885" width="0.0719%" height="15" fill="rgb(234,209,42)" fg:x="10669" fg:w="31"/><text x="25.0023%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (29 samples, 0.07%)</title><rect x="24.7570%" y="869" width="0.0673%" height="15" fill="rgb(227,7,12)" fg:x="10671" fg:w="29"/><text x="25.0070%" y="879.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (25 samples, 0.06%)</title><rect x="24.7663%" y="853" width="0.0580%" height="15" fill="rgb(245,203,43)" fg:x="10675" fg:w="25"/><text x="25.0163%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (23 samples, 0.05%)</title><rect x="24.7709%" y="837" width="0.0534%" height="15" fill="rgb(238,205,33)" fg:x="10677" fg:w="23"/><text x="25.0209%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (23 samples, 0.05%)</title><rect x="24.7709%" y="821" width="0.0534%" height="15" fill="rgb(231,56,7)" fg:x="10677" fg:w="23"/><text x="25.0209%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (22 samples, 0.05%)</title><rect x="24.7732%" y="805" width="0.0510%" height="15" fill="rgb(244,186,29)" fg:x="10678" fg:w="22"/><text x="25.0232%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (22 samples, 0.05%)</title><rect x="24.7732%" y="789" width="0.0510%" height="15" fill="rgb(234,111,31)" fg:x="10678" fg:w="22"/><text x="25.0232%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (21 samples, 0.05%)</title><rect x="24.7755%" y="773" width="0.0487%" height="15" fill="rgb(241,149,10)" fg:x="10679" fg:w="21"/><text x="25.0255%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (20 samples, 0.05%)</title><rect x="24.7779%" y="757" width="0.0464%" height="15" fill="rgb(249,206,44)" fg:x="10680" fg:w="20"/><text x="25.0279%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (18 samples, 0.04%)</title><rect x="24.7825%" y="741" width="0.0418%" height="15" fill="rgb(251,153,30)" fg:x="10682" fg:w="18"/><text x="25.0325%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (17 samples, 0.04%)</title><rect x="24.7848%" y="725" width="0.0394%" height="15" fill="rgb(239,152,38)" fg:x="10683" fg:w="17"/><text x="25.0348%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (16 samples, 0.04%)</title><rect x="24.7871%" y="709" width="0.0371%" height="15" fill="rgb(249,139,47)" fg:x="10684" fg:w="16"/><text x="25.0371%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (14 samples, 0.03%)</title><rect x="24.7918%" y="693" width="0.0325%" height="15" fill="rgb(244,64,35)" fg:x="10686" fg:w="14"/><text x="25.0418%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (11 samples, 0.03%)</title><rect x="24.7987%" y="677" width="0.0255%" height="15" fill="rgb(216,46,15)" fg:x="10689" fg:w="11"/><text x="25.0487%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (9 samples, 0.02%)</title><rect x="24.8034%" y="661" width="0.0209%" height="15" fill="rgb(250,74,19)" fg:x="10691" fg:w="9"/><text x="25.0534%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (8 samples, 0.02%)</title><rect x="24.8057%" y="645" width="0.0186%" height="15" fill="rgb(249,42,33)" fg:x="10692" fg:w="8"/><text x="25.0557%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (7 samples, 0.02%)</title><rect x="24.8080%" y="629" width="0.0162%" height="15" fill="rgb(242,149,17)" fg:x="10693" fg:w="7"/><text x="25.0580%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (6 samples, 0.01%)</title><rect x="24.8103%" y="613" width="0.0139%" height="15" fill="rgb(244,29,21)" fg:x="10694" fg:w="6"/><text x="25.0603%" y="623.50"></text></g><g><title>candle_core::tensor::Tensor::clamp (16 samples, 0.04%)</title><rect x="24.8243%" y="901" width="0.0371%" height="15" fill="rgb(220,130,37)" fg:x="10700" fg:w="16"/><text x="25.0743%" y="911.50"></text></g><g><title>candle_core::tensor::Tensor::exp (11 samples, 0.03%)</title><rect x="24.8614%" y="901" width="0.0255%" height="15" fill="rgb(211,67,2)" fg:x="10716" fg:w="11"/><text x="25.1114%" y="911.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::unary_impl (11 samples, 0.03%)</title><rect x="24.8614%" y="885" width="0.0255%" height="15" fill="rgb(235,68,52)" fg:x="10716" fg:w="11"/><text x="25.1114%" y="895.50"></text></g><g><title>candle_core::cpu_backend::utils::unary_map (11 samples, 0.03%)</title><rect x="24.8614%" y="869" width="0.0255%" height="15" fill="rgb(246,142,3)" fg:x="10716" fg:w="11"/><text x="25.1114%" y="879.50"></text></g><g><title>candle_core::tensor::Tensor::from_slice (5 samples, 0.01%)</title><rect x="24.8869%" y="901" width="0.0116%" height="15" fill="rgb(241,25,7)" fg:x="10727" fg:w="5"/><text x="25.1369%" y="911.50"></text></g><g><title>candle_core::tensor::from_storage (5 samples, 0.01%)</title><rect x="24.8869%" y="885" width="0.0116%" height="15" fill="rgb(242,119,39)" fg:x="10727" fg:w="5"/><text x="25.1369%" y="895.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::reduce_op (5 samples, 0.01%)</title><rect x="24.9055%" y="869" width="0.0116%" height="15" fill="rgb(241,98,45)" fg:x="10735" fg:w="5"/><text x="25.1555%" y="879.50"></text></g><g><title>candle_core::tensor::Tensor::mean_all (15 samples, 0.03%)</title><rect x="24.8985%" y="901" width="0.0348%" height="15" fill="rgb(254,28,30)" fg:x="10732" fg:w="15"/><text x="25.1485%" y="911.50"></text></g><g><title>candle_core::tensor::Tensor::sum_all (12 samples, 0.03%)</title><rect x="24.9055%" y="885" width="0.0278%" height="15" fill="rgb(241,142,54)" fg:x="10735" fg:w="12"/><text x="25.1555%" y="895.50"></text></g><g><title>candle_core::tensor::Tensor::minimum (5 samples, 0.01%)</title><rect x="24.9333%" y="901" width="0.0116%" height="15" fill="rgb(222,85,15)" fg:x="10747" fg:w="5"/><text x="25.1833%" y="911.50"></text></g><g><title>candle_core::tensor::Tensor::sub (9 samples, 0.02%)</title><rect x="24.9588%" y="901" width="0.0209%" height="15" fill="rgb(210,85,47)" fg:x="10758" fg:w="9"/><text x="25.2088%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;r2l_agents::candle_agents::ppo::PPOBatchData&gt; (16 samples, 0.04%)</title><rect x="24.9797%" y="901" width="0.0371%" height="15" fill="rgb(224,206,25)" fg:x="10767" fg:w="16"/><text x="25.2297%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (16 samples, 0.04%)</title><rect x="24.9797%" y="885" width="0.0371%" height="15" fill="rgb(243,201,19)" fg:x="10767" fg:w="16"/><text x="25.2297%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (15 samples, 0.03%)</title><rect x="24.9820%" y="869" width="0.0348%" height="15" fill="rgb(236,59,4)" fg:x="10768" fg:w="15"/><text x="25.2320%" y="879.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (15 samples, 0.03%)</title><rect x="24.9820%" y="853" width="0.0348%" height="15" fill="rgb(254,179,45)" fg:x="10768" fg:w="15"/><text x="25.2320%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (15 samples, 0.03%)</title><rect x="24.9820%" y="837" width="0.0348%" height="15" fill="rgb(226,14,10)" fg:x="10768" fg:w="15"/><text x="25.2320%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (14 samples, 0.03%)</title><rect x="24.9843%" y="821" width="0.0325%" height="15" fill="rgb(244,27,41)" fg:x="10769" fg:w="14"/><text x="25.2343%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (14 samples, 0.03%)</title><rect x="24.9843%" y="805" width="0.0325%" height="15" fill="rgb(235,35,32)" fg:x="10769" fg:w="14"/><text x="25.2343%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (11 samples, 0.03%)</title><rect x="24.9913%" y="789" width="0.0255%" height="15" fill="rgb(218,68,31)" fg:x="10772" fg:w="11"/><text x="25.2413%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (7 samples, 0.02%)</title><rect x="25.0006%" y="773" width="0.0162%" height="15" fill="rgb(207,120,37)" fg:x="10776" fg:w="7"/><text x="25.2506%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;r2l_core::sampler3::buffers::VariableSizedStateBuffer&lt;candle_core::tensor::Tensor&gt;&gt; (110 samples, 0.26%)</title><rect x="25.0168%" y="901" width="0.2552%" height="15" fill="rgb(227,98,0)" fg:x="10783" fg:w="110"/><text x="25.2668%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;candle_core::tensor::Tensor&gt;&gt; (110 samples, 0.26%)</title><rect x="25.0168%" y="885" width="0.2552%" height="15" fill="rgb(207,7,3)" fg:x="10783" fg:w="110"/><text x="25.2668%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (78 samples, 0.18%)</title><rect x="25.0911%" y="869" width="0.1810%" height="15" fill="rgb(206,98,19)" fg:x="10815" fg:w="78"/><text x="25.3411%" y="879.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (19 samples, 0.04%)</title><rect x="25.2279%" y="853" width="0.0441%" height="15" fill="rgb(217,5,26)" fg:x="10874" fg:w="19"/><text x="25.4779%" y="863.50"></text></g><g><title>r2l_core::sampler3::buffers::BatchIndexIterator::new (10 samples, 0.02%)</title><rect x="25.2720%" y="901" width="0.0232%" height="15" fill="rgb(235,190,38)" fg:x="10893" fg:w="10"/><text x="25.5220%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="25.2813%" y="885" width="0.0139%" height="15" fill="rgb(247,86,24)" fg:x="10897" fg:w="6"/><text x="25.5313%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="25.2836%" y="869" width="0.0116%" height="15" fill="rgb(205,101,16)" fg:x="10898" fg:w="5"/><text x="25.5336%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 0.05%)</title><rect x="25.4599%" y="885" width="0.0464%" height="15" fill="rgb(246,168,33)" fg:x="10974" fg:w="20"/><text x="25.7099%" y="895.50"></text></g><g><title>&lt;candle_nn::activation::Activation as candle_core::Module&gt;::forward (270 samples, 0.63%)</title><rect x="25.5063%" y="853" width="0.6264%" height="15" fill="rgb(231,114,1)" fg:x="10994" fg:w="270"/><text x="25.7563%" y="863.50"></text></g><g><title>candle_core::tensor::Tensor::relu (270 samples, 0.63%)</title><rect x="25.5063%" y="837" width="0.6264%" height="15" fill="rgb(207,184,53)" fg:x="10994" fg:w="270"/><text x="25.7563%" y="847.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::unary_impl (269 samples, 0.62%)</title><rect x="25.5087%" y="821" width="0.6241%" height="15" fill="rgb(224,95,51)" fg:x="10995" fg:w="269"/><text x="25.7587%" y="831.50"></text></g><g><title>candle_core::cpu_backend::utils::unary_map (269 samples, 0.62%)</title><rect x="25.5087%" y="805" width="0.6241%" height="15" fill="rgb(212,188,45)" fg:x="10995" fg:w="269"/><text x="25.7587%" y="815.50"></text></g><g><title>candle_core::tensor::Tensor::broadcast_add (640 samples, 1.48%)</title><rect x="26.1328%" y="837" width="1.4848%" height="15" fill="rgb(223,154,38)" fg:x="11264" fg:w="640"/><text x="26.3828%" y="847.50"></text></g><g><title>candle_core::tensor::Tensor::add (638 samples, 1.48%)</title><rect x="26.1374%" y="821" width="1.4802%" height="15" fill="rgb(251,22,52)" fg:x="11266" fg:w="638"/><text x="26.3874%" y="831.50"></text></g><g><title>candle_core::storage::Storage::binary_impl (638 samples, 1.48%)</title><rect x="26.1374%" y="805" width="1.4802%" height="15" fill="rgb(229,209,22)" fg:x="11266" fg:w="638"/><text x="26.3874%" y="815.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::binary_impl (638 samples, 1.48%)</title><rect x="26.1374%" y="789" width="1.4802%" height="15" fill="rgb(234,138,34)" fg:x="11266" fg:w="638"/><text x="26.3874%" y="799.50"></text></g><g><title>candle_core::cpu_backend::utils::binary_map (638 samples, 1.48%)</title><rect x="26.1374%" y="773" width="1.4802%" height="15" fill="rgb(212,95,11)" fg:x="11266" fg:w="638"/><text x="26.3874%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (638 samples, 1.48%)</title><rect x="26.1374%" y="757" width="1.4802%" height="15" fill="rgb(240,179,47)" fg:x="11266" fg:w="638"/><text x="26.3874%" y="767.50"></text></g><g><title>gemm_common::pack_operands::pack_lhs (5 samples, 0.01%)</title><rect x="27.6245%" y="773" width="0.0116%" height="15" fill="rgb(240,163,11)" fg:x="11907" fg:w="5"/><text x="27.8745%" y="783.50"></text></g><g><title>gemm_common::simd::x86::V3::vectorize::__impl (5 samples, 0.01%)</title><rect x="27.6245%" y="757" width="0.0116%" height="15" fill="rgb(236,37,12)" fg:x="11907" fg:w="5"/><text x="27.8745%" y="767.50"></text></g><g><title>gemm_f32::microkernel::fma::f32::x2x4 (5 samples, 0.01%)</title><rect x="27.6454%" y="773" width="0.0116%" height="15" fill="rgb(232,164,16)" fg:x="11916" fg:w="5"/><text x="27.8954%" y="783.50"></text></g><g><title>gemm_f32::microkernel::fma::f32::x3x4 (12 samples, 0.03%)</title><rect x="27.6570%" y="773" width="0.0278%" height="15" fill="rgb(244,205,15)" fg:x="11921" fg:w="12"/><text x="27.9070%" y="783.50"></text></g><g><title>candle_core::tensor::Tensor::matmul (32 samples, 0.07%)</title><rect x="27.6176%" y="837" width="0.0742%" height="15" fill="rgb(223,117,47)" fg:x="11904" fg:w="32"/><text x="27.8676%" y="847.50"></text></g><g><title>candle_core::storage::Storage::matmul (32 samples, 0.07%)</title><rect x="27.6176%" y="821" width="0.0742%" height="15" fill="rgb(244,107,35)" fg:x="11904" fg:w="32"/><text x="27.8676%" y="831.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::matmul (32 samples, 0.07%)</title><rect x="27.6176%" y="805" width="0.0742%" height="15" fill="rgb(205,140,8)" fg:x="11904" fg:w="32"/><text x="27.8676%" y="815.50"></text></g><g><title>gemm_f32::gemm::f32::fma::gemm_basic (31 samples, 0.07%)</title><rect x="27.6199%" y="789" width="0.0719%" height="15" fill="rgb(228,84,46)" fg:x="11905" fg:w="31"/><text x="27.8699%" y="799.50"></text></g><g><title>&lt;r2l_candle_lm::thread_safe_sequential::ThreadSafeSequential as candle_core::Module&gt;::forward (943 samples, 2.19%)</title><rect x="25.5063%" y="869" width="2.1878%" height="15" fill="rgb(254,188,9)" fg:x="10994" fg:w="943"/><text x="25.7563%" y="879.50">&lt;..</text></g><g><title>&lt;candle_nn::linear::Linear as candle_core::Module&gt;::forward (673 samples, 1.56%)</title><rect x="26.1328%" y="853" width="1.5614%" height="15" fill="rgb(206,112,54)" fg:x="11264" fg:w="673"/><text x="26.3828%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (19 samples, 0.04%)</title><rect x="27.7428%" y="853" width="0.0441%" height="15" fill="rgb(216,84,49)" fg:x="11958" fg:w="19"/><text x="27.9928%" y="863.50"></text></g><g><title>candle_core::tensor::Tensor::is_contiguous (5 samples, 0.01%)</title><rect x="27.7962%" y="853" width="0.0116%" height="15" fill="rgb(214,194,35)" fg:x="11981" fg:w="5"/><text x="28.0462%" y="863.50"></text></g><g><title>candle_core::storage::Storage::copy2d (8 samples, 0.02%)</title><rect x="27.8751%" y="837" width="0.0186%" height="15" fill="rgb(249,28,3)" fg:x="12015" fg:w="8"/><text x="28.1251%" y="847.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::copy2d (6 samples, 0.01%)</title><rect x="27.8797%" y="821" width="0.0139%" height="15" fill="rgb(222,56,52)" fg:x="12017" fg:w="6"/><text x="28.1297%" y="831.50"></text></g><g><title>candle_core::tensor_cat::&lt;impl candle_core::tensor::Tensor&gt;::cat_contiguous (52 samples, 0.12%)</title><rect x="27.8078%" y="853" width="0.1206%" height="15" fill="rgb(245,217,50)" fg:x="11986" fg:w="52"/><text x="28.0578%" y="863.50"></text></g><g><title>candle_core::tensor::Tensor::storage (15 samples, 0.03%)</title><rect x="27.8937%" y="837" width="0.0348%" height="15" fill="rgb(213,201,24)" fg:x="12023" fg:w="15"/><text x="28.1437%" y="847.50"></text></g><g><title>&lt;usize as candle_core::shape::Dim&gt;::to_index_plus_one (7 samples, 0.02%)</title><rect x="28.0375%" y="805" width="0.0162%" height="15" fill="rgb(248,116,28)" fg:x="12085" fg:w="7"/><text x="28.2875%" y="815.50"></text></g><g><title>&lt;r2l_candle_lm::learning_module2::SequentialValueFunction as r2l_core::policies::ValueFunction&gt;::calculate_values (1,104 samples, 2.56%)</title><rect x="25.5063%" y="885" width="2.5613%" height="15" fill="rgb(219,72,43)" fg:x="10994" fg:w="1104"/><text x="25.7563%" y="895.50">&lt;r..</text></g><g><title>candle_core::tensor::Tensor::stack (161 samples, 0.37%)</title><rect x="27.6941%" y="869" width="0.3735%" height="15" fill="rgb(209,138,14)" fg:x="11937" fg:w="161"/><text x="27.9441%" y="879.50"></text></g><g><title>core::iter::adapters::try_process (60 samples, 0.14%)</title><rect x="27.9285%" y="853" width="0.1392%" height="15" fill="rgb(222,18,33)" fg:x="12038" fg:w="60"/><text x="28.1785%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (60 samples, 0.14%)</title><rect x="27.9285%" y="837" width="0.1392%" height="15" fill="rgb(213,199,7)" fg:x="12038" fg:w="60"/><text x="28.1785%" y="847.50"></text></g><g><title>candle_core::tensor::Tensor::unsqueeze (59 samples, 0.14%)</title><rect x="27.9308%" y="821" width="0.1369%" height="15" fill="rgb(250,110,10)" fg:x="12039" fg:w="59"/><text x="28.1808%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (5 samples, 0.01%)</title><rect x="28.0561%" y="805" width="0.0116%" height="15" fill="rgb(248,123,6)" fg:x="12093" fg:w="5"/><text x="28.3061%" y="815.50"></text></g><g><title>r2l_core::sampler3::buffers::calculate_advantages_and_returns (1,199 samples, 2.78%)</title><rect x="25.2952%" y="901" width="2.7817%" height="15" fill="rgb(206,91,31)" fg:x="10903" fg:w="1199"/><text x="25.5452%" y="911.50">r2..</text></g><g><title>r2l_core::utils::rollout_buffer::Logps::sample (9 samples, 0.02%)</title><rect x="28.0862%" y="901" width="0.0209%" height="15" fill="rgb(211,154,13)" fg:x="12106" fg:w="9"/><text x="28.3362%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.02%)</title><rect x="28.0862%" y="885" width="0.0209%" height="15" fill="rgb(225,148,7)" fg:x="12106" fg:w="9"/><text x="28.3362%" y="895.50"></text></g><g><title>&lt;r2l_agents::candle_agents::ppo4::CandlePPO4&lt;M,H&gt; as r2l_core::agents::Agent4&gt;::learn3 (11,586 samples, 26.88%)</title><rect x="1.2412%" y="917" width="26.8798%" height="15" fill="rgb(220,160,43)" fg:x="535" fg:w="11586"/><text x="1.4912%" y="927.50">&lt;r2l_agents::candle_agents::ppo4::CandlePPO..</text></g><g><title>r2l_core::utils::rollout_buffer::Returns::sample (6 samples, 0.01%)</title><rect x="28.1071%" y="901" width="0.0139%" height="15" fill="rgb(213,52,39)" fg:x="12115" fg:w="6"/><text x="28.3571%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="28.1071%" y="885" width="0.0139%" height="15" fill="rgb(243,137,7)" fg:x="12115" fg:w="6"/><text x="28.3571%" y="895.50"></text></g><g><title>&lt;r2l_core::sampler3::buffers::FixedSizeStateBuffer&lt;E&gt; as r2l_core::sampler3::buffers::Buffer&gt;::last_state (11 samples, 0.03%)</title><rect x="28.2185%" y="885" width="0.0255%" height="15" fill="rgb(230,79,13)" fg:x="12163" fg:w="11"/><text x="28.4685%" y="895.50"></text></g><g><title>&lt;r2l_core::sampler3::buffers::FixedSizeStateBuffer&lt;E&gt; as r2l_core::sampler3::buffers::Buffer&gt;::push (44 samples, 0.10%)</title><rect x="28.2440%" y="885" width="0.1021%" height="15" fill="rgb(247,105,23)" fg:x="12174" fg:w="44"/><text x="28.4940%" y="895.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::binary_impl (29 samples, 0.07%)</title><rect x="28.9701%" y="805" width="0.0673%" height="15" fill="rgb(223,179,41)" fg:x="12487" fg:w="29"/><text x="29.2201%" y="815.50"></text></g><g><title>candle_core::cpu_backend::utils::binary_map (14 samples, 0.03%)</title><rect x="29.0049%" y="789" width="0.0325%" height="15" fill="rgb(218,9,34)" fg:x="12502" fg:w="14"/><text x="29.2549%" y="799.50"></text></g><g><title>candle_core::storage::Storage::binary_impl (42 samples, 0.10%)</title><rect x="28.9469%" y="821" width="0.0974%" height="15" fill="rgb(222,106,8)" fg:x="12477" fg:w="42"/><text x="29.1969%" y="831.50"></text></g><g><title>candle_core::tensor::Tensor::same_shape_binary_op (5 samples, 0.01%)</title><rect x="29.0444%" y="821" width="0.0116%" height="15" fill="rgb(211,220,0)" fg:x="12519" fg:w="5"/><text x="29.2944%" y="831.50"></text></g><g><title>candle_core::tensor::Tensor::storage (24 samples, 0.06%)</title><rect x="29.0560%" y="821" width="0.0557%" height="15" fill="rgb(229,52,16)" fg:x="12524" fg:w="24"/><text x="29.3060%" y="831.50"></text></g><g><title>&lt;candle_core::tensor::Tensor as core::ops::arith::Add&lt;B&gt;&gt;::add (180 samples, 0.42%)</title><rect x="28.7729%" y="853" width="0.4176%" height="15" fill="rgb(212,155,18)" fg:x="12402" fg:w="180"/><text x="29.0229%" y="863.50"></text></g><g><title>candle_core::tensor::Tensor::add (160 samples, 0.37%)</title><rect x="28.8193%" y="837" width="0.3712%" height="15" fill="rgb(242,21,14)" fg:x="12422" fg:w="160"/><text x="29.0693%" y="847.50"></text></g><g><title>candle_core::tensor::from_storage (34 samples, 0.08%)</title><rect x="29.1117%" y="821" width="0.0789%" height="15" fill="rgb(222,19,48)" fg:x="12548" fg:w="34"/><text x="29.3617%" y="831.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::unary_impl (58 samples, 0.13%)</title><rect x="29.5919%" y="805" width="0.1346%" height="15" fill="rgb(232,45,27)" fg:x="12755" fg:w="58"/><text x="29.8419%" y="815.50"></text></g><g><title>candle_core::cpu_backend::utils::unary_map (27 samples, 0.06%)</title><rect x="29.6638%" y="789" width="0.0626%" height="15" fill="rgb(249,103,42)" fg:x="12786" fg:w="27"/><text x="29.9138%" y="799.50"></text></g><g><title>candle_core::layout::Layout::strided_blocks (7 samples, 0.02%)</title><rect x="29.7102%" y="773" width="0.0162%" height="15" fill="rgb(246,81,33)" fg:x="12806" fg:w="7"/><text x="29.9602%" y="783.50"></text></g><g><title>candle_core::tensor::Tensor::storage (20 samples, 0.05%)</title><rect x="29.7288%" y="805" width="0.0464%" height="15" fill="rgb(252,33,42)" fg:x="12814" fg:w="20"/><text x="29.9788%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.02%)</title><rect x="30.0142%" y="789" width="0.0209%" height="15" fill="rgb(209,212,41)" fg:x="12937" fg:w="9"/><text x="30.2642%" y="799.50"></text></g><g><title>&lt;candle_nn::activation::Activation as candle_core::Module&gt;::forward (296 samples, 0.69%)</title><rect x="29.3553%" y="837" width="0.6867%" height="15" fill="rgb(207,154,6)" fg:x="12653" fg:w="296"/><text x="29.6053%" y="847.50"></text></g><g><title>candle_core::tensor::Tensor::relu (295 samples, 0.68%)</title><rect x="29.3576%" y="821" width="0.6844%" height="15" fill="rgb(223,64,47)" fg:x="12654" fg:w="295"/><text x="29.6076%" y="831.50"></text></g><g><title>candle_core::tensor::from_storage (115 samples, 0.27%)</title><rect x="29.7752%" y="805" width="0.2668%" height="15" fill="rgb(211,161,38)" fg:x="12834" fg:w="115"/><text x="30.0252%" y="815.50"></text></g><g><title>candle_core::shape::Shape::broadcast_shape_binary_op (23 samples, 0.05%)</title><rect x="30.6707%" y="805" width="0.0534%" height="15" fill="rgb(219,138,40)" fg:x="13220" fg:w="23"/><text x="30.9207%" y="815.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::binary_impl (88 samples, 0.20%)</title><rect x="31.3296%" y="773" width="0.2042%" height="15" fill="rgb(241,228,46)" fg:x="13504" fg:w="88"/><text x="31.5796%" y="783.50"></text></g><g><title>candle_core::cpu_backend::utils::binary_map (51 samples, 0.12%)</title><rect x="31.4154%" y="757" width="0.1183%" height="15" fill="rgb(223,209,38)" fg:x="13541" fg:w="51"/><text x="31.6654%" y="767.50"></text></g><g><title>candle_core::storage::Storage::binary_impl (155 samples, 0.36%)</title><rect x="31.1904%" y="789" width="0.3596%" height="15" fill="rgb(236,164,45)" fg:x="13444" fg:w="155"/><text x="31.4404%" y="799.50"></text></g><g><title>candle_core::storage::Storage::same_dtype (7 samples, 0.02%)</title><rect x="31.5338%" y="773" width="0.0162%" height="15" fill="rgb(231,15,5)" fg:x="13592" fg:w="7"/><text x="31.7838%" y="783.50"></text></g><g><title>candle_core::tensor::Tensor::same_shape_binary_op (10 samples, 0.02%)</title><rect x="31.5500%" y="789" width="0.0232%" height="15" fill="rgb(252,35,15)" fg:x="13599" fg:w="10"/><text x="31.8000%" y="799.50"></text></g><g><title>candle_core::tensor::Tensor::storage (48 samples, 0.11%)</title><rect x="31.5732%" y="789" width="0.1114%" height="15" fill="rgb(248,181,18)" fg:x="13609" fg:w="48"/><text x="31.8232%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (21 samples, 0.05%)</title><rect x="32.1602%" y="773" width="0.0487%" height="15" fill="rgb(233,39,42)" fg:x="13862" fg:w="21"/><text x="32.4102%" y="783.50"></text></g><g><title>candle_core::tensor::Tensor::add (646 samples, 1.50%)</title><rect x="30.7241%" y="805" width="1.4987%" height="15" fill="rgb(238,110,33)" fg:x="13243" fg:w="646"/><text x="30.9741%" y="815.50"></text></g><g><title>candle_core::tensor::from_storage (232 samples, 0.54%)</title><rect x="31.6846%" y="789" width="0.5382%" height="15" fill="rgb(233,195,10)" fg:x="13657" fg:w="232"/><text x="31.9346%" y="799.50"></text></g><g><title>__rustc::__rdl_alloc (6 samples, 0.01%)</title><rect x="32.2089%" y="773" width="0.0139%" height="15" fill="rgb(254,105,3)" fg:x="13883" fg:w="6"/><text x="32.4589%" y="783.50"></text></g><g><title>candle_core::tensor::Tensor::broadcast_add (1,022 samples, 2.37%)</title><rect x="30.4132%" y="821" width="2.3711%" height="15" fill="rgb(221,225,9)" fg:x="13109" fg:w="1022"/><text x="30.6632%" y="831.50">ca..</text></g><g><title>candle_core::tensor::Tensor::broadcast_as (242 samples, 0.56%)</title><rect x="32.2228%" y="805" width="0.5614%" height="15" fill="rgb(224,227,45)" fg:x="13889" fg:w="242"/><text x="32.4728%" y="815.50"></text></g><g><title>candle_core::layout::Layout::broadcast_as (80 samples, 0.19%)</title><rect x="32.5987%" y="789" width="0.1856%" height="15" fill="rgb(229,198,43)" fg:x="14051" fg:w="80"/><text x="32.8487%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (24 samples, 0.06%)</title><rect x="32.7286%" y="773" width="0.0557%" height="15" fill="rgb(206,209,35)" fg:x="14107" fg:w="24"/><text x="32.9786%" y="783.50"></text></g><g><title>candle_core::tensor::Tensor::is_contiguous (5 samples, 0.01%)</title><rect x="32.7889%" y="821" width="0.0116%" height="15" fill="rgb(245,195,53)" fg:x="14133" fg:w="5"/><text x="33.0389%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (34 samples, 0.08%)</title><rect x="33.2483%" y="805" width="0.0789%" height="15" fill="rgb(240,92,26)" fg:x="14331" fg:w="34"/><text x="33.4983%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.02%)</title><rect x="33.3039%" y="789" width="0.0232%" height="15" fill="rgb(207,40,23)" fg:x="14355" fg:w="10"/><text x="33.5539%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.03%)</title><rect x="33.9072%" y="773" width="0.0348%" height="15" fill="rgb(223,111,35)" fg:x="14615" fg:w="15"/><text x="34.1572%" y="783.50"></text></g><g><title>candle_core::cpu_backend::MatMul::ab_skip (9 samples, 0.02%)</title><rect x="33.9559%" y="773" width="0.0209%" height="15" fill="rgb(229,147,28)" fg:x="14636" fg:w="9"/><text x="34.2059%" y="783.50"></text></g><g><title>num_cpus::linux::get_num_cpus (2,905 samples, 6.74%)</title><rect x="34.0000%" y="757" width="6.7397%" height="15" fill="rgb(211,29,28)" fg:x="14655" fg:w="2905"/><text x="34.2500%" y="767.50">num_cpus:..</text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (36 samples, 0.08%)</title><rect x="40.7999%" y="725" width="0.0835%" height="15" fill="rgb(228,72,33)" fg:x="17586" fg:w="36"/><text x="41.0499%" y="735.50"></text></g><g><title>candle_core::utils::get_num_threads (3,049 samples, 7.07%)</title><rect x="33.9768%" y="773" width="7.0738%" height="15" fill="rgb(205,214,31)" fg:x="14645" fg:w="3049"/><text x="34.2268%" y="783.50">candle_co..</text></g><g><title>std::env::_var (134 samples, 0.31%)</title><rect x="40.7396%" y="757" width="0.3109%" height="15" fill="rgb(224,111,15)" fg:x="17560" fg:w="134"/><text x="40.9896%" y="767.50"></text></g><g><title>std::env::_var_os (121 samples, 0.28%)</title><rect x="40.7698%" y="741" width="0.2807%" height="15" fill="rgb(253,21,26)" fg:x="17573" fg:w="121"/><text x="41.0198%" y="751.50"></text></g><g><title>std::sys::env::unix::getenv::{{closure}} (72 samples, 0.17%)</title><rect x="40.8835%" y="725" width="0.1670%" height="15" fill="rgb(245,139,43)" fg:x="17622" fg:w="72"/><text x="41.1335%" y="735.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::matmul (4,319 samples, 10.02%)</title><rect x="33.4687%" y="789" width="10.0202%" height="15" fill="rgb(252,170,7)" fg:x="14426" fg:w="4319"/><text x="33.7187%" y="799.50">&lt;candle_core::..</text></g><g><title>gemm_f32::gemm::f32::fma::gemm_basic (1,051 samples, 2.44%)</title><rect x="41.0505%" y="773" width="2.4383%" height="15" fill="rgb(231,118,14)" fg:x="17694" fg:w="1051"/><text x="41.3005%" y="783.50">ge..</text></g><g><title>gemm_common::simd::x86::V3::vectorize::__impl (998 samples, 2.32%)</title><rect x="41.1735%" y="757" width="2.3154%" height="15" fill="rgb(238,83,0)" fg:x="17747" fg:w="998"/><text x="41.4235%" y="767.50">g..</text></g><g><title>candle_core::storage::Storage::matmul (4,382 samples, 10.17%)</title><rect x="33.3271%" y="805" width="10.1663%" height="15" fill="rgb(221,39,39)" fg:x="14365" fg:w="4382"/><text x="33.5771%" y="815.50">candle_core::st..</text></g><g><title>candle_core::tensor::Tensor::storage (63 samples, 0.15%)</title><rect x="43.4935%" y="805" width="0.1462%" height="15" fill="rgb(222,119,46)" fg:x="18747" fg:w="63"/><text x="43.7435%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 0.04%)</title><rect x="43.9111%" y="789" width="0.0371%" height="15" fill="rgb(222,165,49)" fg:x="18927" fg:w="16"/><text x="44.1611%" y="799.50"></text></g><g><title>candle_core::tensor::Tensor::matmul (4,820 samples, 11.18%)</title><rect x="32.8005%" y="821" width="11.1825%" height="15" fill="rgb(219,113,52)" fg:x="14138" fg:w="4820"/><text x="33.0505%" y="831.50">candle_core::ten..</text></g><g><title>candle_core::tensor::from_storage (148 samples, 0.34%)</title><rect x="43.6397%" y="805" width="0.3434%" height="15" fill="rgb(214,7,15)" fg:x="18810" fg:w="148"/><text x="43.8897%" y="815.50"></text></g><g><title>__rustc::rust_panic (13 samples, 0.03%)</title><rect x="43.9529%" y="789" width="0.0302%" height="15" fill="rgb(235,32,4)" fg:x="18945" fg:w="13"/><text x="44.2029%" y="799.50"></text></g><g><title>&lt;(usize,usize,()) as candle_core::shape::ShapeWithOneHole&gt;::into_shape (26 samples, 0.06%)</title><rect x="44.7533%" y="805" width="0.0603%" height="15" fill="rgb(238,90,54)" fg:x="19290" fg:w="26"/><text x="45.0033%" y="815.50"></text></g><g><title>candle_core::shape::hole_size (16 samples, 0.04%)</title><rect x="44.7765%" y="789" width="0.0371%" height="15" fill="rgb(213,208,19)" fg:x="19300" fg:w="16"/><text x="45.0265%" y="799.50"></text></g><g><title>&lt;candle_core::shape::Shape as core::convert::From&lt;(usize,usize)&gt;&gt;::from (11 samples, 0.03%)</title><rect x="44.8136%" y="805" width="0.0255%" height="15" fill="rgb(233,156,4)" fg:x="19316" fg:w="11"/><text x="45.0636%" y="815.50"></text></g><g><title>__rustc::__rdl_alloc (7 samples, 0.02%)</title><rect x="44.8391%" y="805" width="0.0162%" height="15" fill="rgb(207,194,5)" fg:x="19327" fg:w="7"/><text x="45.0891%" y="815.50"></text></g><g><title>candle_core::shape::Shape::elem_count (60 samples, 0.14%)</title><rect x="44.8553%" y="805" width="0.1392%" height="15" fill="rgb(206,111,30)" fg:x="19334" fg:w="60"/><text x="45.1053%" y="815.50"></text></g><g><title>candle_core::shape::Shape::stride_contiguous (109 samples, 0.25%)</title><rect x="44.9945%" y="805" width="0.2529%" height="15" fill="rgb(243,70,54)" fg:x="19394" fg:w="109"/><text x="45.2445%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (28 samples, 0.06%)</title><rect x="45.1825%" y="789" width="0.0650%" height="15" fill="rgb(242,28,8)" fg:x="19475" fg:w="28"/><text x="45.4325%" y="799.50"></text></g><g><title>candle_core::tensor::Tensor::elem_count (16 samples, 0.04%)</title><rect x="45.2474%" y="805" width="0.0371%" height="15" fill="rgb(219,106,18)" fg:x="19503" fg:w="16"/><text x="45.4974%" y="815.50"></text></g><g><title>candle_core::tensor::Tensor::reshape (572 samples, 1.33%)</title><rect x="43.9830%" y="821" width="1.3271%" height="15" fill="rgb(244,222,10)" fg:x="18958" fg:w="572"/><text x="44.2330%" y="831.50"></text></g><g><title>candle_core::tensor::Tensor::is_contiguous (11 samples, 0.03%)</title><rect x="45.2846%" y="805" width="0.0255%" height="15" fill="rgb(236,179,52)" fg:x="19519" fg:w="11"/><text x="45.5346%" y="815.50"></text></g><g><title>&lt;r2l_candle_lm::thread_safe_sequential::ThreadSafeSequential as candle_core::Module&gt;::forward (7,140 samples, 16.56%)</title><rect x="29.1905%" y="853" width="16.5650%" height="15" fill="rgb(213,23,39)" fg:x="12582" fg:w="7140"/><text x="29.4405%" y="863.50">&lt;r2l_candle_lm::thread_saf..</text></g><g><title>&lt;candle_nn::linear::Linear as candle_core::Module&gt;::forward (6,773 samples, 15.71%)</title><rect x="30.0420%" y="837" width="15.7135%" height="15" fill="rgb(238,48,10)" fg:x="12949" fg:w="6773"/><text x="30.2920%" y="847.50">&lt;candle_nn::linear::Line..</text></g><g><title>candle_core::tensor::Tensor::t (192 samples, 0.45%)</title><rect x="45.3101%" y="821" width="0.4454%" height="15" fill="rgb(251,196,23)" fg:x="19530" fg:w="192"/><text x="45.5601%" y="831.50"></text></g><g><title>candle_core::tensor::Tensor::transpose (186 samples, 0.43%)</title><rect x="45.3240%" y="805" width="0.4315%" height="15" fill="rgb(250,152,24)" fg:x="19536" fg:w="186"/><text x="45.5740%" y="815.50"></text></g><g><title>candle_core::layout::Layout::transpose (23 samples, 0.05%)</title><rect x="45.7022%" y="789" width="0.0534%" height="15" fill="rgb(209,150,17)" fg:x="19699" fg:w="23"/><text x="45.9522%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1,083 samples, 2.51%)</title><rect x="45.7555%" y="853" width="2.5126%" height="15" fill="rgb(234,202,34)" fg:x="19722" fg:w="1083"/><text x="46.0055%" y="863.50">al..</text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (883 samples, 2.05%)</title><rect x="46.2195%" y="837" width="2.0486%" height="15" fill="rgb(253,148,53)" fg:x="19922" fg:w="883"/><text x="46.4695%" y="847.50">a..</text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (763 samples, 1.77%)</title><rect x="46.4979%" y="821" width="1.7702%" height="15" fill="rgb(218,129,16)" fg:x="20042" fg:w="763"/><text x="46.7479%" y="831.50">a..</text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (701 samples, 1.63%)</title><rect x="46.6418%" y="805" width="1.6263%" height="15" fill="rgb(216,85,19)" fg:x="20104" fg:w="701"/><text x="46.8918%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (623 samples, 1.45%)</title><rect x="46.8227%" y="789" width="1.4454%" height="15" fill="rgb(235,228,7)" fg:x="20182" fg:w="623"/><text x="47.0727%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (588 samples, 1.36%)</title><rect x="46.9039%" y="773" width="1.3642%" height="15" fill="rgb(245,175,0)" fg:x="20217" fg:w="588"/><text x="47.1539%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (519 samples, 1.20%)</title><rect x="47.0640%" y="757" width="1.2041%" height="15" fill="rgb(208,168,36)" fg:x="20286" fg:w="519"/><text x="47.3140%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (491 samples, 1.14%)</title><rect x="47.1290%" y="741" width="1.1391%" height="15" fill="rgb(246,171,24)" fg:x="20314" fg:w="491"/><text x="47.3790%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (435 samples, 1.01%)</title><rect x="47.2589%" y="725" width="1.0092%" height="15" fill="rgb(215,142,24)" fg:x="20370" fg:w="435"/><text x="47.5089%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (374 samples, 0.87%)</title><rect x="47.4004%" y="709" width="0.8677%" height="15" fill="rgb(250,187,7)" fg:x="20431" fg:w="374"/><text x="47.6504%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (331 samples, 0.77%)</title><rect x="47.5002%" y="693" width="0.7679%" height="15" fill="rgb(228,66,33)" fg:x="20474" fg:w="331"/><text x="47.7502%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (261 samples, 0.61%)</title><rect x="47.6626%" y="677" width="0.6055%" height="15" fill="rgb(234,215,21)" fg:x="20544" fg:w="261"/><text x="47.9126%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (235 samples, 0.55%)</title><rect x="47.7229%" y="661" width="0.5452%" height="15" fill="rgb(222,191,20)" fg:x="20570" fg:w="235"/><text x="47.9729%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (177 samples, 0.41%)</title><rect x="47.8575%" y="645" width="0.4106%" height="15" fill="rgb(245,79,54)" fg:x="20628" fg:w="177"/><text x="48.1075%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (108 samples, 0.25%)</title><rect x="48.0175%" y="629" width="0.2506%" height="15" fill="rgb(240,10,37)" fg:x="20697" fg:w="108"/><text x="48.2675%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (62 samples, 0.14%)</title><rect x="48.1243%" y="613" width="0.1438%" height="15" fill="rgb(214,192,32)" fg:x="20743" fg:w="62"/><text x="48.3743%" y="623.50"></text></g><g><title>candle_core::tensor::Tensor::detach (25 samples, 0.06%)</title><rect x="48.2681%" y="853" width="0.0580%" height="15" fill="rgb(209,36,54)" fg:x="20805" fg:w="25"/><text x="48.5181%" y="863.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::unary_impl (32 samples, 0.07%)</title><rect x="48.4653%" y="837" width="0.0742%" height="15" fill="rgb(220,10,11)" fg:x="20890" fg:w="32"/><text x="48.7153%" y="847.50"></text></g><g><title>candle_core::cpu_backend::utils::unary_map (15 samples, 0.03%)</title><rect x="48.5047%" y="821" width="0.0348%" height="15" fill="rgb(221,106,17)" fg:x="20907" fg:w="15"/><text x="48.7547%" y="831.50"></text></g><g><title>candle_core::tensor::Tensor::storage (15 samples, 0.03%)</title><rect x="48.5419%" y="837" width="0.0348%" height="15" fill="rgb(251,142,44)" fg:x="20923" fg:w="15"/><text x="48.7919%" y="847.50"></text></g><g><title>candle_core::tensor::Tensor::exp (167 samples, 0.39%)</title><rect x="48.3261%" y="853" width="0.3874%" height="15" fill="rgb(238,13,15)" fg:x="20830" fg:w="167"/><text x="48.5761%" y="863.50"></text></g><g><title>candle_core::tensor::from_storage (59 samples, 0.14%)</title><rect x="48.5767%" y="837" width="0.1369%" height="15" fill="rgb(208,107,27)" fg:x="20938" fg:w="59"/><text x="48.8267%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="48.6996%" y="821" width="0.0139%" height="15" fill="rgb(205,136,37)" fg:x="20991" fg:w="6"/><text x="48.9496%" y="831.50"></text></g><g><title>candle_core::storage::Storage::binary_impl (31 samples, 0.07%)</title><rect x="48.8458%" y="837" width="0.0719%" height="15" fill="rgb(250,205,27)" fg:x="21054" fg:w="31"/><text x="49.0958%" y="847.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuStorage as candle_core::backend::BackendStorage&gt;::binary_impl (18 samples, 0.04%)</title><rect x="48.8759%" y="821" width="0.0418%" height="15" fill="rgb(210,80,43)" fg:x="21067" fg:w="18"/><text x="49.1259%" y="831.50"></text></g><g><title>candle_core::cpu_backend::utils::binary_map (10 samples, 0.02%)</title><rect x="48.8945%" y="805" width="0.0232%" height="15" fill="rgb(247,160,36)" fg:x="21075" fg:w="10"/><text x="49.1445%" y="815.50"></text></g><g><title>candle_core::tensor::Tensor::storage (23 samples, 0.05%)</title><rect x="48.9223%" y="837" width="0.0534%" height="15" fill="rgb(234,13,49)" fg:x="21087" fg:w="23"/><text x="49.1723%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.01%)</title><rect x="49.0871%" y="821" width="0.0116%" height="15" fill="rgb(234,122,0)" fg:x="21158" fg:w="5"/><text x="49.3371%" y="831.50"></text></g><g><title>candle_core::tensor::Tensor::mul (167 samples, 0.39%)</title><rect x="48.7135%" y="853" width="0.3874%" height="15" fill="rgb(207,146,38)" fg:x="20997" fg:w="167"/><text x="48.9635%" y="863.50"></text></g><g><title>candle_core::tensor::from_storage (54 samples, 0.13%)</title><rect x="48.9757%" y="837" width="0.1253%" height="15" fill="rgb(207,177,25)" fg:x="21110" fg:w="54"/><text x="49.2257%" y="847.50"></text></g><g><title>&lt;candle_core::shape::Shape as core::convert::From&lt;&amp;candle_core::shape::Shape&gt;&gt;::from (5 samples, 0.01%)</title><rect x="49.1242%" y="837" width="0.0116%" height="15" fill="rgb(211,178,42)" fg:x="21174" fg:w="5"/><text x="49.3742%" y="847.50"></text></g><g><title>candle_core::device::Device::rand_normal_f64 (43 samples, 0.10%)</title><rect x="49.1358%" y="837" width="0.0998%" height="15" fill="rgb(230,69,54)" fg:x="21179" fg:w="43"/><text x="49.3858%" y="847.50"></text></g><g><title>&lt;candle_core::cpu_backend::CpuDevice as candle_core::backend::BackendDevice&gt;::rand_normal (29 samples, 0.07%)</title><rect x="49.1683%" y="821" width="0.0673%" height="15" fill="rgb(214,135,41)" fg:x="21193" fg:w="29"/><text x="49.4183%" y="831.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distr::distribution::Distribution&lt;F&gt;&gt;::sample (18 samples, 0.04%)</title><rect x="49.1938%" y="805" width="0.0418%" height="15" fill="rgb(237,67,25)" fg:x="21204" fg:w="18"/><text x="49.4438%" y="815.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (6 samples, 0.01%)</title><rect x="49.2216%" y="789" width="0.0139%" height="15" fill="rgb(222,189,50)" fg:x="21216" fg:w="6"/><text x="49.4716%" y="799.50"></text></g><g><title>candle_core::shape::Shape::stride_contiguous (10 samples, 0.02%)</title><rect x="49.3492%" y="821" width="0.0232%" height="15" fill="rgb(245,148,34)" fg:x="21271" fg:w="10"/><text x="49.5992%" y="831.50"></text></g><g><title>candle_core::tensor::Tensor::randn_impl (124 samples, 0.29%)</title><rect x="49.1010%" y="853" width="0.2877%" height="15" fill="rgb(222,29,6)" fg:x="21164" fg:w="124"/><text x="49.3510%" y="863.50"></text></g><g><title>candle_core::tensor::from_storage (66 samples, 0.15%)</title><rect x="49.2356%" y="837" width="0.1531%" height="15" fill="rgb(221,189,43)" fg:x="21222" fg:w="66"/><text x="49.4856%" y="847.50"></text></g><g><title>candle_core::storage::Storage::dtype (5 samples, 0.01%)</title><rect x="49.3771%" y="821" width="0.0116%" height="15" fill="rgb(207,36,27)" fg:x="21283" fg:w="5"/><text x="49.6271%" y="831.50"></text></g><g><title>&lt;usize as candle_core::shape::Dim&gt;::to_index (5 samples, 0.01%)</title><rect x="49.6253%" y="837" width="0.0116%" height="15" fill="rgb(217,90,24)" fg:x="21390" fg:w="5"/><text x="49.8753%" y="847.50"></text></g><g><title>candle_core::tensor::Tensor::squeeze (108 samples, 0.25%)</title><rect x="49.3887%" y="853" width="0.2506%" height="15" fill="rgb(224,66,35)" fg:x="21288" fg:w="108"/><text x="49.6387%" y="863.50"></text></g><g><title>&lt;usize as candle_core::shape::Dim&gt;::to_index_plus_one (6 samples, 0.01%)</title><rect x="50.0940%" y="837" width="0.0139%" height="15" fill="rgb(221,13,50)" fg:x="21592" fg:w="6"/><text x="50.3440%" y="847.50"></text></g><g><title>__rustc::__rdl_alloc (6 samples, 0.01%)</title><rect x="50.1079%" y="837" width="0.0139%" height="15" fill="rgb(236,68,49)" fg:x="21598" fg:w="6"/><text x="50.3579%" y="847.50"></text></g><g><title>&lt;r2l_candle_lm::distributions::diagonal_distribution::DiagGaussianDistribution as r2l_core::distributions::Policy&gt;::get_action (9,441 samples, 21.90%)</title><rect x="28.3832%" y="869" width="21.9033%" height="15" fill="rgb(229,146,28)" fg:x="12234" fg:w="9441"/><text x="28.6332%" y="879.50">&lt;r2l_candle_lm::distributions::diag..</text></g><g><title>candle_core::tensor::Tensor::unsqueeze (279 samples, 0.65%)</title><rect x="49.6392%" y="853" width="0.6473%" height="15" fill="rgb(225,31,38)" fg:x="21396" fg:w="279"/><text x="49.8892%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (71 samples, 0.16%)</title><rect x="50.1218%" y="837" width="0.1647%" height="15" fill="rgb(250,208,3)" fg:x="21604" fg:w="71"/><text x="50.3718%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (31 samples, 0.07%)</title><rect x="50.2146%" y="821" width="0.0719%" height="15" fill="rgb(246,54,23)" fg:x="21644" fg:w="31"/><text x="50.4646%" y="831.50"></text></g><g><title>__rustc::__rdl_realloc (15 samples, 0.03%)</title><rect x="50.2517%" y="805" width="0.0348%" height="15" fill="rgb(243,76,11)" fg:x="21660" fg:w="15"/><text x="50.5017%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (40 samples, 0.09%)</title><rect x="50.3074%" y="853" width="0.0928%" height="15" fill="rgb(245,21,50)" fg:x="21684" fg:w="40"/><text x="50.5574%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (12 samples, 0.03%)</title><rect x="50.3724%" y="837" width="0.0278%" height="15" fill="rgb(228,9,43)" fg:x="21712" fg:w="12"/><text x="50.6224%" y="847.50"></text></g><g><title>r2l_core::tensor::candle_tensor::&lt;impl core::convert::From&lt;candle_core::tensor::Tensor&gt; for r2l_core::tensor::R2lBuffer&gt;::from (80 samples, 0.19%)</title><rect x="50.2865%" y="869" width="0.1856%" height="15" fill="rgb(208,100,47)" fg:x="21675" fg:w="80"/><text x="50.5365%" y="879.50"></text></g><g><title>candle_core::tensor::Tensor::to_vec1 (31 samples, 0.07%)</title><rect x="50.4002%" y="853" width="0.0719%" height="15" fill="rgb(232,26,8)" fg:x="21724" fg:w="31"/><text x="50.6502%" y="863.50"></text></g><g><title>candle_core::tensor::Tensor::storage (10 samples, 0.02%)</title><rect x="50.4489%" y="837" width="0.0232%" height="15" fill="rgb(216,166,38)" fg:x="21745" fg:w="10"/><text x="50.6989%" y="847.50"></text></g><g><title>&lt;r2l_core::sampler::PolicyWrapper&lt;D,T&gt; as r2l_core::distributions::Policy&gt;::get_action (9,607 samples, 22.29%)</title><rect x="28.3461%" y="885" width="22.2885%" height="15" fill="rgb(251,202,51)" fg:x="12218" fg:w="9607"/><text x="28.5961%" y="895.50">&lt;r2l_core::sampler::PolicyWrapper&lt;D..</text></g><g><title>r2l_core::tensor::candle_tensor::&lt;impl core::convert::From&lt;r2l_core::tensor::R2lBuffer&gt; for candle_core::tensor::Tensor&gt;::from (70 samples, 0.16%)</title><rect x="50.4721%" y="869" width="0.1624%" height="15" fill="rgb(254,216,34)" fg:x="21755" fg:w="70"/><text x="50.7221%" y="879.50"></text></g><g><title>candle_core::tensor::from_storage (59 samples, 0.14%)</title><rect x="50.4976%" y="853" width="0.1369%" height="15" fill="rgb(251,32,27)" fg:x="21766" fg:w="59"/><text x="50.7476%" y="863.50"></text></g><g><title>candle_core::shape::Shape::stride_contiguous (17 samples, 0.04%)</title><rect x="50.5951%" y="837" width="0.0394%" height="15" fill="rgb(208,127,28)" fg:x="21808" fg:w="17"/><text x="50.8451%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.02%)</title><rect x="50.6136%" y="821" width="0.0209%" height="15" fill="rgb(224,137,22)" fg:x="21816" fg:w="9"/><text x="50.8636%" y="831.50"></text></g><g><title>PyObject_CallFunctionObjArgs (6 samples, 0.01%)</title><rect x="50.7041%" y="805" width="0.0139%" height="15" fill="rgb(254,70,32)" fg:x="21855" fg:w="6"/><text x="50.9541%" y="815.50"></text></g><g><title>PyObject_GetAttr (6 samples, 0.01%)</title><rect x="50.7204%" y="805" width="0.0139%" height="15" fill="rgb(229,75,37)" fg:x="21862" fg:w="6"/><text x="50.9704%" y="815.50"></text></g><g><title>_PyObject_GenericGetAttrWithDict (5 samples, 0.01%)</title><rect x="50.7227%" y="789" width="0.0116%" height="15" fill="rgb(252,64,23)" fg:x="21863" fg:w="5"/><text x="50.9727%" y="799.50"></text></g><g><title>PyObject_SetAttr (6 samples, 0.01%)</title><rect x="50.7412%" y="805" width="0.0139%" height="15" fill="rgb(232,162,48)" fg:x="21871" fg:w="6"/><text x="50.9912%" y="815.50"></text></g><g><title>_PyObject_GenericSetAttrWithDict (6 samples, 0.01%)</title><rect x="50.7412%" y="789" width="0.0139%" height="15" fill="rgb(246,160,12)" fg:x="21871" fg:w="6"/><text x="50.9912%" y="799.50"></text></g><g><title>PyObject_GetAttr (6 samples, 0.01%)</title><rect x="50.9617%" y="757" width="0.0139%" height="15" fill="rgb(247,166,0)" fg:x="21966" fg:w="6"/><text x="51.2117%" y="767.50"></text></g><g><title>_PyObject_GenericGetAttrWithDict (5 samples, 0.01%)</title><rect x="50.9640%" y="741" width="0.0116%" height="15" fill="rgb(249,219,21)" fg:x="21967" fg:w="5"/><text x="51.2140%" y="751.50"></text></g><g><title>PyObject_Vectorcall (54 samples, 0.13%)</title><rect x="50.8688%" y="789" width="0.1253%" height="15" fill="rgb(205,209,3)" fg:x="21926" fg:w="54"/><text x="51.1188%" y="799.50"></text></g><g><title>_PyEval_EvalFrameDefault (52 samples, 0.12%)</title><rect x="50.8735%" y="773" width="0.1206%" height="15" fill="rgb(243,44,1)" fg:x="21928" fg:w="52"/><text x="51.1235%" y="783.50"></text></g><g><title>PySequence_Tuple (7 samples, 0.02%)</title><rect x="50.9941%" y="789" width="0.0162%" height="15" fill="rgb(206,159,16)" fg:x="21980" fg:w="7"/><text x="51.2441%" y="799.50"></text></g><g><title>PyObject_Vectorcall (122 samples, 0.28%)</title><rect x="50.7552%" y="805" width="0.2830%" height="15" fill="rgb(244,77,30)" fg:x="21877" fg:w="122"/><text x="51.0052%" y="815.50"></text></g><g><title>PyObject_Vectorcall (21 samples, 0.05%)</title><rect x="51.1078%" y="789" width="0.0487%" height="15" fill="rgb(218,69,12)" fg:x="22029" fg:w="21"/><text x="51.3578%" y="799.50"></text></g><g><title>PyObject_RichCompare (6 samples, 0.01%)</title><rect x="51.2540%" y="757" width="0.0139%" height="15" fill="rgb(212,87,7)" fg:x="22092" fg:w="6"/><text x="51.5040%" y="767.50"></text></g><g><title>PyObject_VectorcallMethod (10 samples, 0.02%)</title><rect x="51.2795%" y="757" width="0.0232%" height="15" fill="rgb(245,114,25)" fg:x="22103" fg:w="10"/><text x="51.5295%" y="767.50"></text></g><g><title>_PyObject_MakeTpCall (5 samples, 0.01%)</title><rect x="51.3097%" y="757" width="0.0116%" height="15" fill="rgb(210,61,42)" fg:x="22116" fg:w="5"/><text x="51.5597%" y="767.50"></text></g><g><title>_PyEval_EvalFrameDefault (73 samples, 0.17%)</title><rect x="51.1589%" y="773" width="0.1694%" height="15" fill="rgb(211,52,33)" fg:x="22051" fg:w="73"/><text x="51.4089%" y="783.50"></text></g><g><title>PyObject_CallOneArg (6 samples, 0.01%)</title><rect x="51.3584%" y="741" width="0.0139%" height="15" fill="rgb(234,58,33)" fg:x="22137" fg:w="6"/><text x="51.6084%" y="751.50"></text></g><g><title>_PyEval_EvalFrameDefault (5 samples, 0.01%)</title><rect x="51.3607%" y="725" width="0.0116%" height="15" fill="rgb(220,115,36)" fg:x="22138" fg:w="5"/><text x="51.6107%" y="735.50"></text></g><g><title>PyObject_IsInstance (8 samples, 0.02%)</title><rect x="51.3561%" y="757" width="0.0186%" height="15" fill="rgb(243,153,54)" fg:x="22136" fg:w="8"/><text x="51.6061%" y="767.50"></text></g><g><title>PyObject_VectorcallMethod (95 samples, 0.22%)</title><rect x="51.1565%" y="789" width="0.2204%" height="15" fill="rgb(251,47,18)" fg:x="22050" fg:w="95"/><text x="51.4065%" y="799.50"></text></g><g><title>_PyObject_MakeTpCall (17 samples, 0.04%)</title><rect x="51.3375%" y="773" width="0.0394%" height="15" fill="rgb(242,102,42)" fg:x="22128" fg:w="17"/><text x="51.5875%" y="783.50"></text></g><g><title>_PyObject_MakeTpCall (8 samples, 0.02%)</title><rect x="51.3978%" y="789" width="0.0186%" height="15" fill="rgb(234,31,38)" fg:x="22154" fg:w="8"/><text x="51.6478%" y="799.50"></text></g><g><title>_PyEval_EvalFrameDefault (336 samples, 0.78%)</title><rect x="50.6392%" y="821" width="0.7795%" height="15" fill="rgb(221,117,51)" fg:x="21827" fg:w="336"/><text x="50.8892%" y="831.50"></text></g><g><title>_PyObject_MakeTpCall (159 samples, 0.37%)</title><rect x="51.0498%" y="805" width="0.3689%" height="15" fill="rgb(212,20,18)" fg:x="22004" fg:w="159"/><text x="51.2998%" y="815.50"></text></g><g><title>&lt;pyo3::instance::Bound&lt;pyo3::types::tuple::PyTuple&gt; as pyo3::call::PyCallArgs&gt;::call (339 samples, 0.79%)</title><rect x="50.6345%" y="853" width="0.7865%" height="15" fill="rgb(245,133,36)" fg:x="21825" fg:w="339"/><text x="50.8845%" y="863.50"></text></g><g><title>PyObject_Call (339 samples, 0.79%)</title><rect x="50.6345%" y="837" width="0.7865%" height="15" fill="rgb(212,6,19)" fg:x="21825" fg:w="339"/><text x="50.8845%" y="847.50"></text></g><g><title>&lt;pyo3::instance::Bound&lt;pyo3::types::any::PyAny&gt; as pyo3::types::any::PyAnyMethods&gt;::call_method (340 samples, 0.79%)</title><rect x="50.6345%" y="869" width="0.7888%" height="15" fill="rgb(218,1,36)" fg:x="21825" fg:w="340"/><text x="50.8845%" y="879.50"></text></g><g><title>&lt;r2l_gym::GymEnv as r2l_core::env::Env&gt;::reset (355 samples, 0.82%)</title><rect x="50.6345%" y="885" width="0.8236%" height="15" fill="rgb(246,84,54)" fg:x="21825" fg:w="355"/><text x="50.8845%" y="895.50"></text></g><g><title>pyo3::types::sequence::extract_sequence (13 samples, 0.03%)</title><rect x="51.4280%" y="869" width="0.0302%" height="15" fill="rgb(242,110,6)" fg:x="22167" fg:w="13"/><text x="51.6780%" y="879.50"></text></g><g><title>pyo3::types::iterator::&lt;impl pyo3::instance::Borrowed&lt;pyo3::types::iterator::PyIterator&gt;&gt;::next (7 samples, 0.02%)</title><rect x="51.4419%" y="853" width="0.0162%" height="15" fill="rgb(214,47,5)" fg:x="22173" fg:w="7"/><text x="51.6919%" y="863.50"></text></g><g><title>PyEval_SaveThread (16 samples, 0.04%)</title><rect x="51.7574%" y="853" width="0.0371%" height="15" fill="rgb(218,159,25)" fg:x="22309" fg:w="16"/><text x="52.0074%" y="863.50"></text></g><g><title>&lt;pyo3::gil::GILGuard as core::ops::drop::Drop&gt;::drop (30 samples, 0.07%)</title><rect x="51.7505%" y="869" width="0.0696%" height="15" fill="rgb(215,211,28)" fg:x="22306" fg:w="30"/><text x="52.0005%" y="879.50"></text></g><g><title>PyGILState_Release (11 samples, 0.03%)</title><rect x="51.7945%" y="853" width="0.0255%" height="15" fill="rgb(238,59,32)" fg:x="22325" fg:w="11"/><text x="52.0445%" y="863.50"></text></g><g><title>&lt;pyo3::instance::Bound&lt;pyo3::types::any::PyAny&gt; as pyo3::types::any::PyAnyMethods&gt;::get_item (5 samples, 0.01%)</title><rect x="51.8201%" y="869" width="0.0116%" height="15" fill="rgb(226,82,3)" fg:x="22336" fg:w="5"/><text x="52.0701%" y="879.50"></text></g><g><title>&lt;pyo3::instance::Bound&lt;pyo3::types::any::PyAny&gt; as pyo3::types::any::PyAnyMethods&gt;::get_item::inner (37 samples, 0.09%)</title><rect x="51.8317%" y="869" width="0.0858%" height="15" fill="rgb(240,164,32)" fg:x="22341" fg:w="37"/><text x="52.0817%" y="879.50"></text></g><g><title>PyObject_GetItem (9 samples, 0.02%)</title><rect x="51.8966%" y="853" width="0.0209%" height="15" fill="rgb(232,46,7)" fg:x="22369" fg:w="9"/><text x="52.1466%" y="863.50"></text></g><g><title>PyNumber_AsSsize_t (5 samples, 0.01%)</title><rect x="51.9361%" y="837" width="0.0116%" height="15" fill="rgb(229,129,53)" fg:x="22386" fg:w="5"/><text x="52.1861%" y="847.50"></text></g><g><title>&lt;pyo3::instance::Bound&lt;pyo3::types::any::PyAny&gt; as pyo3::types::any::PyAnyMethods&gt;::get_item::inner (18 samples, 0.04%)</title><rect x="51.9175%" y="853" width="0.0418%" height="15" fill="rgb(234,188,29)" fg:x="22378" fg:w="18"/><text x="52.1675%" y="863.50"></text></g><g><title>PyObject_GetItem (5 samples, 0.01%)</title><rect x="51.9477%" y="837" width="0.0116%" height="15" fill="rgb(246,141,4)" fg:x="22391" fg:w="5"/><text x="52.1977%" y="847.50"></text></g><g><title>&lt;pyo3::instance::Bound&lt;pyo3::types::any::PyAny&gt; as pyo3::types::any::PyAnyMethods&gt;::get_item (19 samples, 0.04%)</title><rect x="51.9175%" y="869" width="0.0441%" height="15" fill="rgb(229,23,39)" fg:x="22378" fg:w="19"/><text x="52.1675%" y="879.50"></text></g><g><title>PyCapsule_GetPointer (6 samples, 0.01%)</title><rect x="51.9616%" y="869" width="0.0139%" height="15" fill="rgb(206,12,3)" fg:x="22397" fg:w="6"/><text x="52.2116%" y="879.50"></text></g><g><title>PyObject_Free (26 samples, 0.06%)</title><rect x="51.9755%" y="869" width="0.0603%" height="15" fill="rgb(252,226,20)" fg:x="22403" fg:w="26"/><text x="52.2255%" y="879.50"></text></g><g><title>PyTraceMalloc_Untrack (12 samples, 0.03%)</title><rect x="52.0358%" y="869" width="0.0278%" height="15" fill="rgb(216,123,35)" fg:x="22429" fg:w="12"/><text x="52.2858%" y="879.50"></text></g><g><title>pyo3::conversions::std::num::&lt;impl pyo3::conversion::IntoPyObject for i32&gt;::into_pyobject (5 samples, 0.01%)</title><rect x="52.0683%" y="869" width="0.0116%" height="15" fill="rgb(212,68,40)" fg:x="22443" fg:w="5"/><text x="52.3183%" y="879.50"></text></g><g><title>PyEval_RestoreThread (30 samples, 0.07%)</title><rect x="52.0985%" y="821" width="0.0696%" height="15" fill="rgb(254,125,32)" fg:x="22456" fg:w="30"/><text x="52.3485%" y="831.50"></text></g><g><title>pyo3::gil::GILGuard::acquire (42 samples, 0.10%)</title><rect x="52.0822%" y="869" width="0.0974%" height="15" fill="rgb(253,97,22)" fg:x="22449" fg:w="42"/><text x="52.3322%" y="879.50"></text></g><g><title>pyo3_ffi::pystate::PyGILState_Ensure (39 samples, 0.09%)</title><rect x="52.0892%" y="853" width="0.0905%" height="15" fill="rgb(241,101,14)" fg:x="22452" fg:w="39"/><text x="52.3392%" y="863.50"></text></g><g><title>PyGILState_Ensure (38 samples, 0.09%)</title><rect x="52.0915%" y="837" width="0.0882%" height="15" fill="rgb(238,103,29)" fg:x="22453" fg:w="38"/><text x="52.3415%" y="847.50"></text></g><g><title>pyo3::gil::register_decref (7 samples, 0.02%)</title><rect x="52.1797%" y="869" width="0.0162%" height="15" fill="rgb(233,195,47)" fg:x="22491" fg:w="7"/><text x="52.4297%" y="879.50"></text></g><g><title>&lt;pyo3::instance::Bound&lt;pyo3::types::any::PyAny&gt; as pyo3::types::any::PyAnyMethods&gt;::getattr::inner (143 samples, 0.33%)</title><rect x="52.3142%" y="837" width="0.3318%" height="15" fill="rgb(246,218,30)" fg:x="22549" fg:w="143"/><text x="52.5642%" y="847.50"></text></g><g><title>PyObject_GetAttr (142 samples, 0.33%)</title><rect x="52.3165%" y="821" width="0.3294%" height="15" fill="rgb(219,145,47)" fg:x="22550" fg:w="142"/><text x="52.5665%" y="831.50"></text></g><g><title>_PyObject_GenericGetAttrWithDict (134 samples, 0.31%)</title><rect x="52.3351%" y="805" width="0.3109%" height="15" fill="rgb(243,12,26)" fg:x="22558" fg:w="134"/><text x="52.5851%" y="815.50"></text></g><g><title>PyObject_Call (7 samples, 0.02%)</title><rect x="52.8571%" y="821" width="0.0162%" height="15" fill="rgb(214,87,16)" fg:x="22783" fg:w="7"/><text x="53.1071%" y="831.50"></text></g><g><title>PyCapsule_GetPointer (7 samples, 0.02%)</title><rect x="57.9728%" y="805" width="0.0162%" height="15" fill="rgb(208,99,42)" fg:x="24988" fg:w="7"/><text x="58.2228%" y="815.50"></text></g><g><title>PyContextVar_Get (9 samples, 0.02%)</title><rect x="57.9890%" y="805" width="0.0209%" height="15" fill="rgb(253,99,2)" fg:x="24995" fg:w="9"/><text x="58.2390%" y="815.50"></text></g><g><title>PyDict_GetItemRef (62 samples, 0.14%)</title><rect x="58.0099%" y="805" width="0.1438%" height="15" fill="rgb(220,168,23)" fg:x="25004" fg:w="62"/><text x="58.2599%" y="815.50"></text></g><g><title>PyErr_Occurred (17 samples, 0.04%)</title><rect x="58.1607%" y="805" width="0.0394%" height="15" fill="rgb(242,38,24)" fg:x="25069" fg:w="17"/><text x="58.4107%" y="815.50"></text></g><g><title>__tls_get_addr (7 samples, 0.02%)</title><rect x="58.1839%" y="789" width="0.0162%" height="15" fill="rgb(225,182,9)" fg:x="25079" fg:w="7"/><text x="58.4339%" y="799.50"></text></g><g><title>PyFloat_FromDouble (5 samples, 0.01%)</title><rect x="58.2001%" y="805" width="0.0116%" height="15" fill="rgb(243,178,37)" fg:x="25086" fg:w="5"/><text x="58.4501%" y="815.50"></text></g><g><title>PyMem_Calloc (29 samples, 0.07%)</title><rect x="58.2744%" y="789" width="0.0673%" height="15" fill="rgb(232,139,19)" fg:x="25118" fg:w="29"/><text x="58.5244%" y="799.50"></text></g><g><title>PyList_New (58 samples, 0.13%)</title><rect x="58.2117%" y="805" width="0.1346%" height="15" fill="rgb(225,201,24)" fg:x="25091" fg:w="58"/><text x="58.4617%" y="815.50"></text></g><g><title>PyObject_Init (9 samples, 0.02%)</title><rect x="58.6316%" y="789" width="0.0209%" height="15" fill="rgb(221,47,46)" fg:x="25272" fg:w="9"/><text x="58.8816%" y="799.50"></text></g><g><title>PyObject_Malloc (75 samples, 0.17%)</title><rect x="58.6525%" y="789" width="0.1740%" height="15" fill="rgb(249,23,13)" fg:x="25281" fg:w="75"/><text x="58.9025%" y="799.50"></text></g><g><title>PyNumber_Add (245 samples, 0.57%)</title><rect x="58.3579%" y="805" width="0.5684%" height="15" fill="rgb(219,9,5)" fg:x="25154" fg:w="245"/><text x="58.6079%" y="815.50"></text></g><g><title>fetestexcept (42 samples, 0.10%)</title><rect x="58.8289%" y="789" width="0.0974%" height="15" fill="rgb(254,171,16)" fg:x="25357" fg:w="42"/><text x="59.0789%" y="799.50"></text></g><g><title>PyObject_Init (11 samples, 0.03%)</title><rect x="59.3833%" y="789" width="0.0255%" height="15" fill="rgb(230,171,20)" fg:x="25596" fg:w="11"/><text x="59.6333%" y="799.50"></text></g><g><title>PyObject_Malloc (76 samples, 0.18%)</title><rect x="59.4089%" y="789" width="0.1763%" height="15" fill="rgb(210,71,41)" fg:x="25607" fg:w="76"/><text x="59.6589%" y="799.50"></text></g><g><title>__tls_get_addr (6 samples, 0.01%)</title><rect x="59.5713%" y="773" width="0.0139%" height="15" fill="rgb(206,173,20)" fg:x="25677" fg:w="6"/><text x="59.8213%" y="783.50"></text></g><g><title>PyNumber_Multiply (345 samples, 0.80%)</title><rect x="58.9263%" y="805" width="0.8004%" height="15" fill="rgb(233,88,34)" fg:x="25399" fg:w="345"/><text x="59.1763%" y="815.50"></text></g><g><title>fetestexcept (54 samples, 0.13%)</title><rect x="59.6014%" y="789" width="0.1253%" height="15" fill="rgb(223,209,46)" fg:x="25690" fg:w="54"/><text x="59.8514%" y="799.50"></text></g><g><title>PyNumber_Negative (44 samples, 0.10%)</title><rect x="59.7267%" y="805" width="0.1021%" height="15" fill="rgb(250,43,18)" fg:x="25744" fg:w="44"/><text x="59.9767%" y="815.50"></text></g><g><title>PyObject_Malloc (16 samples, 0.04%)</title><rect x="59.9007%" y="789" width="0.0371%" height="15" fill="rgb(208,13,10)" fg:x="25819" fg:w="16"/><text x="60.1507%" y="799.50"></text></g><g><title>fetestexcept (6 samples, 0.01%)</title><rect x="59.9425%" y="789" width="0.0139%" height="15" fill="rgb(212,200,36)" fg:x="25837" fg:w="6"/><text x="60.1925%" y="799.50"></text></g><g><title>PyNumber_Remainder (62 samples, 0.14%)</title><rect x="59.8288%" y="805" width="0.1438%" height="15" fill="rgb(225,90,30)" fg:x="25788" fg:w="62"/><text x="60.0788%" y="815.50"></text></g><g><title>fmod (7 samples, 0.02%)</title><rect x="59.9564%" y="789" width="0.0162%" height="15" fill="rgb(236,182,39)" fg:x="25843" fg:w="7"/><text x="60.2064%" y="799.50"></text></g><g><title>PyNumber_Subtract (5 samples, 0.01%)</title><rect x="59.9726%" y="805" width="0.0116%" height="15" fill="rgb(212,144,35)" fg:x="25850" fg:w="5"/><text x="60.2226%" y="815.50"></text></g><g><title>PyNumber_TrueDivide (29 samples, 0.07%)</title><rect x="59.9842%" y="805" width="0.0673%" height="15" fill="rgb(228,63,44)" fg:x="25855" fg:w="29"/><text x="60.2342%" y="815.50"></text></g><g><title>PyObject_Free (249 samples, 0.58%)</title><rect x="60.0515%" y="805" width="0.5777%" height="15" fill="rgb(228,109,6)" fg:x="25884" fg:w="249"/><text x="60.3015%" y="815.50"></text></g><g><title>__tls_get_addr (18 samples, 0.04%)</title><rect x="60.5874%" y="789" width="0.0418%" height="15" fill="rgb(238,117,24)" fg:x="26115" fg:w="18"/><text x="60.8374%" y="799.50"></text></g><g><title>PyObject_GetAttr (533 samples, 1.24%)</title><rect x="60.6292%" y="805" width="1.2366%" height="15" fill="rgb(242,26,26)" fg:x="26133" fg:w="533"/><text x="60.8792%" y="815.50"></text></g><g><title>_PyObject_GenericGetAttrWithDict (423 samples, 0.98%)</title><rect x="60.8844%" y="789" width="0.9814%" height="15" fill="rgb(221,92,48)" fg:x="26243" fg:w="423"/><text x="61.1344%" y="799.50"></text></g><g><title>PyObject_GetItem (6 samples, 0.01%)</title><rect x="61.8658%" y="805" width="0.0139%" height="15" fill="rgb(209,209,32)" fg:x="26666" fg:w="6"/><text x="62.1158%" y="815.50"></text></g><g><title>PyObject_Malloc (68 samples, 0.16%)</title><rect x="61.8866%" y="805" width="0.1578%" height="15" fill="rgb(221,70,22)" fg:x="26675" fg:w="68"/><text x="62.1366%" y="815.50"></text></g><g><title>PyObject_RichCompare (23 samples, 0.05%)</title><rect x="62.0444%" y="805" width="0.0534%" height="15" fill="rgb(248,145,5)" fg:x="26743" fg:w="23"/><text x="62.2944%" y="815.50"></text></g><g><title>PyCapsule_GetPointer (27 samples, 0.06%)</title><rect x="66.8886%" y="789" width="0.0626%" height="15" fill="rgb(226,116,26)" fg:x="28831" fg:w="27"/><text x="67.1386%" y="799.50"></text></g><g><title>PyContextVar_Get (84 samples, 0.19%)</title><rect x="66.9513%" y="789" width="0.1949%" height="15" fill="rgb(244,5,17)" fg:x="28858" fg:w="84"/><text x="67.2013%" y="799.50"></text></g><g><title>PyDict_GetItemRef (350 samples, 0.81%)</title><rect x="67.1461%" y="789" width="0.8120%" height="15" fill="rgb(252,159,33)" fg:x="28942" fg:w="350"/><text x="67.3961%" y="799.50"></text></g><g><title>PyErr_CheckSignals (5 samples, 0.01%)</title><rect x="67.9581%" y="789" width="0.0116%" height="15" fill="rgb(206,71,0)" fg:x="29292" fg:w="5"/><text x="68.2081%" y="799.50"></text></g><g><title>PyErr_Occurred (64 samples, 0.15%)</title><rect x="67.9697%" y="789" width="0.1485%" height="15" fill="rgb(233,118,54)" fg:x="29297" fg:w="64"/><text x="68.2197%" y="799.50"></text></g><g><title>__tls_get_addr (19 samples, 0.04%)</title><rect x="68.0741%" y="773" width="0.0441%" height="15" fill="rgb(234,83,48)" fg:x="29342" fg:w="19"/><text x="68.3241%" y="783.50"></text></g><g><title>PyObject_Free (187 samples, 0.43%)</title><rect x="68.1252%" y="789" width="0.4338%" height="15" fill="rgb(228,3,54)" fg:x="29364" fg:w="187"/><text x="68.3752%" y="799.50"></text></g><g><title>__tls_get_addr (15 samples, 0.03%)</title><rect x="68.5242%" y="773" width="0.0348%" height="15" fill="rgb(226,155,13)" fg:x="29536" fg:w="15"/><text x="68.7742%" y="783.50"></text></g><g><title>PyObject_GetOptionalAttr (25 samples, 0.06%)</title><rect x="68.5590%" y="789" width="0.0580%" height="15" fill="rgb(241,28,37)" fg:x="29551" fg:w="25"/><text x="68.8090%" y="799.50"></text></g><g><title>PyObject_Init (6 samples, 0.01%)</title><rect x="68.6170%" y="789" width="0.0139%" height="15" fill="rgb(233,93,10)" fg:x="29576" fg:w="6"/><text x="68.8670%" y="799.50"></text></g><g><title>PyObject_Malloc (138 samples, 0.32%)</title><rect x="68.6310%" y="789" width="0.3202%" height="15" fill="rgb(225,113,19)" fg:x="29582" fg:w="138"/><text x="68.8810%" y="799.50"></text></g><g><title>__tls_get_addr (9 samples, 0.02%)</title><rect x="68.9302%" y="773" width="0.0209%" height="15" fill="rgb(241,2,18)" fg:x="29711" fg:w="9"/><text x="69.1802%" y="783.50"></text></g><g><title>PyDict_New (63 samples, 0.15%)</title><rect x="69.5543%" y="773" width="0.1462%" height="15" fill="rgb(228,207,21)" fg:x="29980" fg:w="63"/><text x="69.8043%" y="783.50"></text></g><g><title>PyContextVar_Get (10 samples, 0.02%)</title><rect x="74.1178%" y="757" width="0.0232%" height="15" fill="rgb(213,211,35)" fg:x="31947" fg:w="10"/><text x="74.3678%" y="767.50"></text></g><g><title>PyMem_Calloc (37 samples, 0.09%)</title><rect x="74.1642%" y="741" width="0.0858%" height="15" fill="rgb(209,83,10)" fg:x="31967" fg:w="37"/><text x="74.4142%" y="751.50"></text></g><g><title>PyList_New (49 samples, 0.11%)</title><rect x="74.1410%" y="757" width="0.1137%" height="15" fill="rgb(209,164,1)" fg:x="31957" fg:w="49"/><text x="74.3910%" y="767.50"></text></g><g><title>PyMem_Free (85 samples, 0.20%)</title><rect x="74.2547%" y="757" width="0.1972%" height="15" fill="rgb(213,184,43)" fg:x="32006" fg:w="85"/><text x="74.5047%" y="767.50"></text></g><g><title>__tls_get_addr (8 samples, 0.02%)</title><rect x="74.4333%" y="741" width="0.0186%" height="15" fill="rgb(231,61,34)" fg:x="32083" fg:w="8"/><text x="74.6833%" y="751.50"></text></g><g><title>PyMem_Free (6 samples, 0.01%)</title><rect x="74.5911%" y="741" width="0.0139%" height="15" fill="rgb(235,75,3)" fg:x="32151" fg:w="6"/><text x="74.8411%" y="751.50"></text></g><g><title>PyDict_New (15 samples, 0.03%)</title><rect x="74.6723%" y="725" width="0.0348%" height="15" fill="rgb(220,106,47)" fg:x="32186" fg:w="15"/><text x="74.9223%" y="735.50"></text></g><g><title>PyCapsule_GetPointer (23 samples, 0.05%)</title><rect x="77.5213%" y="709" width="0.0534%" height="15" fill="rgb(210,196,33)" fg:x="33414" fg:w="23"/><text x="77.7713%" y="719.50"></text></g><g><title>PyContextVar_Get (60 samples, 0.14%)</title><rect x="77.5746%" y="709" width="0.1392%" height="15" fill="rgb(229,154,42)" fg:x="33437" fg:w="60"/><text x="77.8246%" y="719.50"></text></g><g><title>PyDict_GetItemRef (74 samples, 0.17%)</title><rect x="77.7138%" y="709" width="0.1717%" height="15" fill="rgb(228,114,26)" fg:x="33497" fg:w="74"/><text x="77.9638%" y="719.50"></text></g><g><title>PyErr_Occurred (45 samples, 0.10%)</title><rect x="77.8855%" y="709" width="0.1044%" height="15" fill="rgb(208,144,1)" fg:x="33571" fg:w="45"/><text x="78.1355%" y="719.50"></text></g><g><title>__tls_get_addr (12 samples, 0.03%)</title><rect x="77.9621%" y="693" width="0.0278%" height="15" fill="rgb(239,112,37)" fg:x="33604" fg:w="12"/><text x="78.2121%" y="703.50"></text></g><g><title>PyLong_AsLong (11 samples, 0.03%)</title><rect x="77.9899%" y="709" width="0.0255%" height="15" fill="rgb(210,96,50)" fg:x="33616" fg:w="11"/><text x="78.2399%" y="719.50"></text></g><g><title>PyLong_AsLongLong (6 samples, 0.01%)</title><rect x="78.0155%" y="709" width="0.0139%" height="15" fill="rgb(222,178,2)" fg:x="33627" fg:w="6"/><text x="78.2655%" y="719.50"></text></g><g><title>PyMem_Free (25 samples, 0.06%)</title><rect x="78.0294%" y="709" width="0.0580%" height="15" fill="rgb(226,74,18)" fg:x="33633" fg:w="25"/><text x="78.2794%" y="719.50"></text></g><g><title>PyMem_RawFree (9 samples, 0.02%)</title><rect x="78.0874%" y="709" width="0.0209%" height="15" fill="rgb(225,67,54)" fg:x="33658" fg:w="9"/><text x="78.3374%" y="719.50"></text></g><g><title>PyFloat_FromDouble (28 samples, 0.06%)</title><rect x="78.1361%" y="693" width="0.0650%" height="15" fill="rgb(251,92,32)" fg:x="33679" fg:w="28"/><text x="78.3861%" y="703.50"></text></g><g><title>PyNumber_Float (42 samples, 0.10%)</title><rect x="78.1083%" y="709" width="0.0974%" height="15" fill="rgb(228,149,22)" fg:x="33667" fg:w="42"/><text x="78.3583%" y="719.50"></text></g><g><title>PyNumber_Long (10 samples, 0.02%)</title><rect x="78.2057%" y="709" width="0.0232%" height="15" fill="rgb(243,54,13)" fg:x="33709" fg:w="10"/><text x="78.4557%" y="719.50"></text></g><g><title>PyObject_Free (111 samples, 0.26%)</title><rect x="78.2289%" y="709" width="0.2575%" height="15" fill="rgb(243,180,28)" fg:x="33719" fg:w="111"/><text x="78.4789%" y="719.50"></text></g><g><title>__tls_get_addr (15 samples, 0.03%)</title><rect x="78.4516%" y="693" width="0.0348%" height="15" fill="rgb(208,167,24)" fg:x="33815" fg:w="15"/><text x="78.7016%" y="703.50"></text></g><g><title>PyObject_GetAttr (67 samples, 0.16%)</title><rect x="78.4864%" y="709" width="0.1554%" height="15" fill="rgb(245,73,45)" fg:x="33830" fg:w="67"/><text x="78.7364%" y="719.50"></text></g><g><title>_PyObject_GenericGetAttrWithDict (57 samples, 0.13%)</title><rect x="78.5096%" y="693" width="0.1322%" height="15" fill="rgb(237,203,48)" fg:x="33840" fg:w="57"/><text x="78.7596%" y="703.50"></text></g><g><title>PyObject_Malloc (33 samples, 0.08%)</title><rect x="78.6442%" y="709" width="0.0766%" height="15" fill="rgb(211,197,16)" fg:x="33898" fg:w="33"/><text x="78.8942%" y="719.50"></text></g><g><title>PyGILState_Ensure (31 samples, 0.07%)</title><rect x="78.7648%" y="693" width="0.0719%" height="15" fill="rgb(243,99,51)" fg:x="33950" fg:w="31"/><text x="79.0148%" y="703.50"></text></g><g><title>PyTraceMalloc_Track (71 samples, 0.16%)</title><rect x="78.7207%" y="709" width="0.1647%" height="15" fill="rgb(215,123,29)" fg:x="33931" fg:w="71"/><text x="78.9707%" y="719.50"></text></g><g><title>PyGILState_Release (21 samples, 0.05%)</title><rect x="78.8367%" y="693" width="0.0487%" height="15" fill="rgb(239,186,37)" fg:x="33981" fg:w="21"/><text x="79.0867%" y="703.50"></text></g><g><title>PyGILState_Ensure (34 samples, 0.08%)</title><rect x="78.9017%" y="693" width="0.0789%" height="15" fill="rgb(252,136,39)" fg:x="34009" fg:w="34"/><text x="79.1517%" y="703.50"></text></g><g><title>PyTraceMalloc_Untrack (56 samples, 0.13%)</title><rect x="78.8855%" y="709" width="0.1299%" height="15" fill="rgb(223,213,32)" fg:x="34002" fg:w="56"/><text x="79.1355%" y="719.50"></text></g><g><title>PyGILState_Release (15 samples, 0.03%)</title><rect x="78.9806%" y="693" width="0.0348%" height="15" fill="rgb(233,115,5)" fg:x="34043" fg:w="15"/><text x="79.2306%" y="703.50"></text></g><g><title>PyTuple_New (9 samples, 0.02%)</title><rect x="79.0154%" y="709" width="0.0209%" height="15" fill="rgb(207,226,44)" fg:x="34058" fg:w="9"/><text x="79.2654%" y="719.50"></text></g><g><title>PyType_GenericAlloc (95 samples, 0.22%)</title><rect x="79.0363%" y="709" width="0.2204%" height="15" fill="rgb(208,126,0)" fg:x="34067" fg:w="95"/><text x="79.2863%" y="719.50"></text></g><g><title>PyType_IsSubtype (24 samples, 0.06%)</title><rect x="79.2567%" y="709" width="0.0557%" height="15" fill="rgb(244,66,21)" fg:x="34162" fg:w="24"/><text x="79.5067%" y="719.50"></text></g><g><title>_PyEval_FrameClearAndPop (33 samples, 0.08%)</title><rect x="79.3193%" y="709" width="0.0766%" height="15" fill="rgb(222,97,12)" fg:x="34189" fg:w="33"/><text x="79.5693%" y="719.50"></text></g><g><title>_PyTuple_FromArraySteal (7 samples, 0.02%)</title><rect x="79.3959%" y="709" width="0.0162%" height="15" fill="rgb(219,213,19)" fg:x="34222" fg:w="7"/><text x="79.6459%" y="719.50"></text></g><g><title>__tls_get_addr (8 samples, 0.02%)</title><rect x="79.4191%" y="709" width="0.0186%" height="15" fill="rgb(252,169,30)" fg:x="34232" fg:w="8"/><text x="79.6691%" y="719.50"></text></g><g><title>_PyEval_EvalFrameDefault (2,055 samples, 4.77%)</title><rect x="74.7071%" y="725" width="4.7676%" height="15" fill="rgb(206,32,51)" fg:x="32201" fg:w="2055"/><text x="74.9571%" y="735.50">_PyEva..</text></g><g><title>fetestexcept (16 samples, 0.04%)</title><rect x="79.4376%" y="709" width="0.0371%" height="15" fill="rgb(250,172,42)" fg:x="34240" fg:w="16"/><text x="79.6876%" y="719.50"></text></g><g><title>PyObject_Vectorcall (2,100 samples, 4.87%)</title><rect x="74.6050%" y="741" width="4.8721%" height="15" fill="rgb(209,34,43)" fg:x="32157" fg:w="2100"/><text x="74.8550%" y="751.50">PyObje..</text></g><g><title>PyObject_Call (2,171 samples, 5.04%)</title><rect x="74.4519%" y="757" width="5.0368%" height="15" fill="rgb(223,11,35)" fg:x="32091" fg:w="2171"/><text x="74.7019%" y="767.50">PyObje..</text></g><g><title>PyObject_Free (29 samples, 0.07%)</title><rect x="79.4887%" y="757" width="0.0673%" height="15" fill="rgb(251,219,26)" fg:x="34262" fg:w="29"/><text x="79.7387%" y="767.50"></text></g><g><title>PyObject_GC_Del (38 samples, 0.09%)</title><rect x="79.5559%" y="757" width="0.0882%" height="15" fill="rgb(231,119,3)" fg:x="34291" fg:w="38"/><text x="79.8059%" y="767.50"></text></g><g><title>PyObject_GetAttr (253 samples, 0.59%)</title><rect x="79.6441%" y="757" width="0.5870%" height="15" fill="rgb(216,97,11)" fg:x="34329" fg:w="253"/><text x="79.8941%" y="767.50"></text></g><g><title>_PyObject_GenericGetAttrWithDict (220 samples, 0.51%)</title><rect x="79.7207%" y="741" width="0.5104%" height="15" fill="rgb(223,59,9)" fg:x="34362" fg:w="220"/><text x="79.9707%" y="751.50"></text></g><g><title>__tls_get_addr (9 samples, 0.02%)</title><rect x="80.2102%" y="725" width="0.0209%" height="15" fill="rgb(233,93,31)" fg:x="34573" fg:w="9"/><text x="80.4602%" y="735.50"></text></g><g><title>PyObject_GetAttrString (156 samples, 0.36%)</title><rect x="80.2311%" y="757" width="0.3619%" height="15" fill="rgb(239,81,33)" fg:x="34582" fg:w="156"/><text x="80.4811%" y="767.50"></text></g><g><title>PyObject_GetAttr (123 samples, 0.29%)</title><rect x="80.3076%" y="741" width="0.2854%" height="15" fill="rgb(213,120,34)" fg:x="34615" fg:w="123"/><text x="80.5576%" y="751.50"></text></g><g><title>_PyObject_GenericGetAttrWithDict (118 samples, 0.27%)</title><rect x="80.3192%" y="725" width="0.2738%" height="15" fill="rgb(243,49,53)" fg:x="34620" fg:w="118"/><text x="80.5692%" y="735.50"></text></g><g><title>PyDict_New (17 samples, 0.04%)</title><rect x="80.9224%" y="741" width="0.0394%" height="15" fill="rgb(247,216,33)" fg:x="34880" fg:w="17"/><text x="81.1724%" y="751.50"></text></g><g><title>PyErr_Occurred (11 samples, 0.03%)</title><rect x="80.9619%" y="741" width="0.0255%" height="15" fill="rgb(226,26,14)" fg:x="34897" fg:w="11"/><text x="81.2119%" y="751.50"></text></g><g><title>PyMem_Malloc (36 samples, 0.08%)</title><rect x="80.9920%" y="741" width="0.0835%" height="15" fill="rgb(215,49,53)" fg:x="34910" fg:w="36"/><text x="81.2420%" y="751.50"></text></g><g><title>__tls_get_addr (5 samples, 0.01%)</title><rect x="81.0640%" y="725" width="0.0116%" height="15" fill="rgb(245,162,40)" fg:x="34941" fg:w="5"/><text x="81.3140%" y="735.50"></text></g><g><title>PyTuple_New (17 samples, 0.04%)</title><rect x="81.0779%" y="741" width="0.0394%" height="15" fill="rgb(229,68,17)" fg:x="34947" fg:w="17"/><text x="81.3279%" y="751.50"></text></g><g><title>PyType_IsSubtype (18 samples, 0.04%)</title><rect x="81.1220%" y="741" width="0.0418%" height="15" fill="rgb(213,182,10)" fg:x="34966" fg:w="18"/><text x="81.3720%" y="751.50"></text></g><g><title>PyCapsule_GetPointer (10 samples, 0.02%)</title><rect x="83.8921%" y="725" width="0.0232%" height="15" fill="rgb(245,125,30)" fg:x="36160" fg:w="10"/><text x="84.1421%" y="735.50"></text></g><g><title>PyContextVar_Get (45 samples, 0.10%)</title><rect x="83.9153%" y="725" width="0.1044%" height="15" fill="rgb(232,202,2)" fg:x="36170" fg:w="45"/><text x="84.1653%" y="735.50"></text></g><g><title>PyErr_Occurred (10 samples, 0.02%)</title><rect x="84.0197%" y="725" width="0.0232%" height="15" fill="rgb(237,140,51)" fg:x="36215" fg:w="10"/><text x="84.2697%" y="735.50"></text></g><g><title>PyMem_Free (18 samples, 0.04%)</title><rect x="84.0429%" y="725" width="0.0418%" height="15" fill="rgb(236,157,25)" fg:x="36225" fg:w="18"/><text x="84.2929%" y="735.50"></text></g><g><title>PyNumber_Float (9 samples, 0.02%)</title><rect x="84.0870%" y="725" width="0.0209%" height="15" fill="rgb(219,209,0)" fg:x="36244" fg:w="9"/><text x="84.3370%" y="735.50"></text></g><g><title>PyObject_Free (50 samples, 0.12%)</title><rect x="84.1078%" y="725" width="0.1160%" height="15" fill="rgb(240,116,54)" fg:x="36253" fg:w="50"/><text x="84.3578%" y="735.50"></text></g><g><title>PyObject_GetAttr (96 samples, 0.22%)</title><rect x="84.2238%" y="725" width="0.2227%" height="15" fill="rgb(216,10,36)" fg:x="36303" fg:w="96"/><text x="84.4738%" y="735.50"></text></g><g><title>_PyObject_GenericGetAttrWithDict (72 samples, 0.17%)</title><rect x="84.2795%" y="709" width="0.1670%" height="15" fill="rgb(222,72,44)" fg:x="36327" fg:w="72"/><text x="84.5295%" y="719.50"></text></g><g><title>PyGILState_Ensure (13 samples, 0.03%)</title><rect x="84.4721%" y="709" width="0.0302%" height="15" fill="rgb(232,159,9)" fg:x="36410" fg:w="13"/><text x="84.7221%" y="719.50"></text></g><g><title>PyTraceMalloc_Track (37 samples, 0.09%)</title><rect x="84.4466%" y="725" width="0.0858%" height="15" fill="rgb(210,39,32)" fg:x="36399" fg:w="37"/><text x="84.6966%" y="735.50"></text></g><g><title>PyGILState_Release (13 samples, 0.03%)</title><rect x="84.5022%" y="709" width="0.0302%" height="15" fill="rgb(216,194,45)" fg:x="36423" fg:w="13"/><text x="84.7522%" y="719.50"></text></g><g><title>PyGILState_Ensure (15 samples, 0.03%)</title><rect x="84.5556%" y="709" width="0.0348%" height="15" fill="rgb(218,18,35)" fg:x="36446" fg:w="15"/><text x="84.8056%" y="719.50"></text></g><g><title>PyTraceMalloc_Untrack (32 samples, 0.07%)</title><rect x="84.5324%" y="725" width="0.0742%" height="15" fill="rgb(207,83,51)" fg:x="36436" fg:w="32"/><text x="84.7824%" y="735.50"></text></g><g><title>PyGILState_Release (7 samples, 0.02%)</title><rect x="84.5904%" y="709" width="0.0162%" height="15" fill="rgb(225,63,43)" fg:x="36461" fg:w="7"/><text x="84.8404%" y="719.50"></text></g><g><title>PyTuple_New (28 samples, 0.06%)</title><rect x="84.6066%" y="725" width="0.0650%" height="15" fill="rgb(207,57,36)" fg:x="36468" fg:w="28"/><text x="84.8566%" y="735.50"></text></g><g><title>__tls_get_addr (10 samples, 0.02%)</title><rect x="84.6484%" y="709" width="0.0232%" height="15" fill="rgb(216,99,33)" fg:x="36486" fg:w="10"/><text x="84.8984%" y="719.50"></text></g><g><title>PyType_GenericAlloc (85 samples, 0.20%)</title><rect x="84.6716%" y="725" width="0.1972%" height="15" fill="rgb(225,42,16)" fg:x="36496" fg:w="85"/><text x="84.9216%" y="735.50"></text></g><g><title>__tls_get_addr (6 samples, 0.01%)</title><rect x="84.8549%" y="709" width="0.0139%" height="15" fill="rgb(220,201,45)" fg:x="36575" fg:w="6"/><text x="85.1049%" y="719.50"></text></g><g><title>PyType_IsSubtype (28 samples, 0.06%)</title><rect x="84.8688%" y="725" width="0.0650%" height="15" fill="rgb(225,33,4)" fg:x="36581" fg:w="28"/><text x="85.1188%" y="735.50"></text></g><g><title>_PyEval_FrameClearAndPop (54 samples, 0.13%)</title><rect x="84.9384%" y="725" width="0.1253%" height="15" fill="rgb(224,33,50)" fg:x="36611" fg:w="54"/><text x="85.1884%" y="735.50"></text></g><g><title>_PyTuple_FromArraySteal (19 samples, 0.04%)</title><rect x="85.0637%" y="725" width="0.0441%" height="15" fill="rgb(246,198,51)" fg:x="36665" fg:w="19"/><text x="85.3137%" y="735.50"></text></g><g><title>__tls_get_addr (13 samples, 0.03%)</title><rect x="85.1170%" y="725" width="0.0302%" height="15" fill="rgb(205,22,4)" fg:x="36688" fg:w="13"/><text x="85.3670%" y="735.50"></text></g><g><title>_PyEval_EvalFrameDefault (1,739 samples, 4.03%)</title><rect x="81.1637%" y="741" width="4.0345%" height="15" fill="rgb(206,3,8)" fg:x="34984" fg:w="1739"/><text x="81.4137%" y="751.50">_PyE..</text></g><g><title>fetestexcept (21 samples, 0.05%)</title><rect x="85.1495%" y="725" width="0.0487%" height="15" fill="rgb(251,23,15)" fg:x="36702" fg:w="21"/><text x="85.3995%" y="735.50"></text></g><g><title>PyObject_Vectorcall (1,992 samples, 4.62%)</title><rect x="80.5930%" y="757" width="4.6215%" height="15" fill="rgb(252,88,28)" fg:x="34738" fg:w="1992"/><text x="80.8430%" y="767.50">PyObj..</text></g><g><title>__tls_get_addr (7 samples, 0.02%)</title><rect x="85.1982%" y="741" width="0.0162%" height="15" fill="rgb(212,127,14)" fg:x="36723" fg:w="7"/><text x="85.4482%" y="751.50"></text></g><g><title>PyTraceMalloc_Track (8 samples, 0.02%)</title><rect x="85.2145%" y="757" width="0.0186%" height="15" fill="rgb(247,145,37)" fg:x="36730" fg:w="8"/><text x="85.4645%" y="767.50"></text></g><g><title>PyGILState_Ensure (5 samples, 0.01%)</title><rect x="85.2400%" y="741" width="0.0116%" height="15" fill="rgb(209,117,53)" fg:x="36741" fg:w="5"/><text x="85.4900%" y="751.50"></text></g><g><title>PyTraceMalloc_Untrack (13 samples, 0.03%)</title><rect x="85.2330%" y="757" width="0.0302%" height="15" fill="rgb(212,90,42)" fg:x="36738" fg:w="13"/><text x="85.4830%" y="767.50"></text></g><g><title>PyGILState_Release (5 samples, 0.01%)</title><rect x="85.2516%" y="741" width="0.0116%" height="15" fill="rgb(218,164,37)" fg:x="36746" fg:w="5"/><text x="85.5016%" y="751.50"></text></g><g><title>PyType_GenericAlloc (26 samples, 0.06%)</title><rect x="85.2632%" y="757" width="0.0603%" height="15" fill="rgb(246,65,34)" fg:x="36751" fg:w="26"/><text x="85.5132%" y="767.50"></text></g><g><title>PyType_IsSubtype (15 samples, 0.03%)</title><rect x="85.3235%" y="757" width="0.0348%" height="15" fill="rgb(231,100,33)" fg:x="36777" fg:w="15"/><text x="85.5735%" y="767.50"></text></g><g><title>PyDict_New (31 samples, 0.07%)</title><rect x="85.7713%" y="741" width="0.0719%" height="15" fill="rgb(228,126,14)" fg:x="36970" fg:w="31"/><text x="86.0213%" y="751.50"></text></g><g><title>PyDict_SetItem (9 samples, 0.02%)</title><rect x="85.8432%" y="741" width="0.0209%" height="15" fill="rgb(215,173,21)" fg:x="37001" fg:w="9"/><text x="86.0932%" y="751.50"></text></g><g><title>PyUnicode_RichCompare (24 samples, 0.06%)</title><rect x="86.0079%" y="709" width="0.0557%" height="15" fill="rgb(210,6,40)" fg:x="37072" fg:w="24"/><text x="86.2579%" y="719.50"></text></g><g><title>PyObject_RichCompareBool (90 samples, 0.21%)</title><rect x="85.8641%" y="741" width="0.2088%" height="15" fill="rgb(212,48,18)" fg:x="37010" fg:w="90"/><text x="86.1141%" y="751.50"></text></g><g><title>PyObject_RichCompare (76 samples, 0.18%)</title><rect x="85.8966%" y="725" width="0.1763%" height="15" fill="rgb(230,214,11)" fg:x="37024" fg:w="76"/><text x="86.1466%" y="735.50"></text></g><g><title>_PyTuple_FromArraySteal (41 samples, 0.10%)</title><rect x="86.0729%" y="741" width="0.0951%" height="15" fill="rgb(254,105,39)" fg:x="37100" fg:w="41"/><text x="86.3229%" y="751.50"></text></g><g><title>_PyEvalFramePushAndInit (351 samples, 0.81%)</title><rect x="85.3583%" y="757" width="0.8143%" height="15" fill="rgb(245,158,5)" fg:x="36792" fg:w="351"/><text x="85.6083%" y="767.50"></text></g><g><title>PyMem_Free (44 samples, 0.10%)</title><rect x="86.8571%" y="741" width="0.1021%" height="15" fill="rgb(249,208,11)" fg:x="37438" fg:w="44"/><text x="87.1071%" y="751.50"></text></g><g><title>PyObject_Free (38 samples, 0.09%)</title><rect x="86.9591%" y="741" width="0.0882%" height="15" fill="rgb(210,39,28)" fg:x="37482" fg:w="38"/><text x="87.2091%" y="751.50"></text></g><g><title>PyObject_GC_Del (5 samples, 0.01%)</title><rect x="87.0473%" y="741" width="0.0116%" height="15" fill="rgb(211,56,53)" fg:x="37520" fg:w="5"/><text x="87.2973%" y="751.50"></text></g><g><title>PyGILState_Ensure (6 samples, 0.01%)</title><rect x="87.0635%" y="725" width="0.0139%" height="15" fill="rgb(226,201,30)" fg:x="37527" fg:w="6"/><text x="87.3135%" y="735.50"></text></g><g><title>PyTraceMalloc_Untrack (13 samples, 0.03%)</title><rect x="87.0589%" y="741" width="0.0302%" height="15" fill="rgb(239,101,34)" fg:x="37525" fg:w="13"/><text x="87.3089%" y="751.50"></text></g><g><title>PyGILState_Release (5 samples, 0.01%)</title><rect x="87.0775%" y="725" width="0.0116%" height="15" fill="rgb(226,209,5)" fg:x="37533" fg:w="5"/><text x="87.3275%" y="735.50"></text></g><g><title>_PyEval_FrameClearAndPop (413 samples, 0.96%)</title><rect x="86.1727%" y="757" width="0.9582%" height="15" fill="rgb(250,105,47)" fg:x="37143" fg:w="413"/><text x="86.4227%" y="767.50"></text></g><g><title>__tls_get_addr (18 samples, 0.04%)</title><rect x="87.0891%" y="741" width="0.0418%" height="15" fill="rgb(230,72,3)" fg:x="37538" fg:w="18"/><text x="87.3391%" y="751.50"></text></g><g><title>_PyList_Extend (57 samples, 0.13%)</title><rect x="87.1331%" y="757" width="0.1322%" height="15" fill="rgb(232,218,39)" fg:x="37557" fg:w="57"/><text x="87.3831%" y="767.50"></text></g><g><title>_PyObject_GenericGetAttrWithDict (150 samples, 0.35%)</title><rect x="87.2654%" y="757" width="0.3480%" height="15" fill="rgb(248,166,6)" fg:x="37614" fg:w="150"/><text x="87.5154%" y="767.50"></text></g><g><title>__tls_get_addr (7 samples, 0.02%)</title><rect x="87.5972%" y="741" width="0.0162%" height="15" fill="rgb(247,89,20)" fg:x="37757" fg:w="7"/><text x="87.8472%" y="751.50"></text></g><g><title>PyContextVar_Get (31 samples, 0.07%)</title><rect x="88.5762%" y="741" width="0.0719%" height="15" fill="rgb(248,130,54)" fg:x="38179" fg:w="31"/><text x="88.8262%" y="751.50"></text></g><g><title>PyDict_GetItemRef (29 samples, 0.07%)</title><rect x="88.6481%" y="741" width="0.0673%" height="15" fill="rgb(234,196,4)" fg:x="38210" fg:w="29"/><text x="88.8981%" y="751.50"></text></g><g><title>PyErr_CheckSignals (15 samples, 0.03%)</title><rect x="88.7154%" y="741" width="0.0348%" height="15" fill="rgb(250,143,31)" fg:x="38239" fg:w="15"/><text x="88.9654%" y="751.50"></text></g><g><title>PySequence_Check (21 samples, 0.05%)</title><rect x="88.7572%" y="741" width="0.0487%" height="15" fill="rgb(211,110,34)" fg:x="38257" fg:w="21"/><text x="89.0072%" y="751.50"></text></g><g><title>PySequence_Size (9 samples, 0.02%)</title><rect x="88.8105%" y="741" width="0.0209%" height="15" fill="rgb(215,124,48)" fg:x="38280" fg:w="9"/><text x="89.0605%" y="751.50"></text></g><g><title>PyTraceMalloc_Track (14 samples, 0.03%)</title><rect x="88.8314%" y="741" width="0.0325%" height="15" fill="rgb(216,46,13)" fg:x="38289" fg:w="14"/><text x="89.0814%" y="751.50"></text></g><g><title>PyGILState_Release (5 samples, 0.01%)</title><rect x="88.8523%" y="725" width="0.0116%" height="15" fill="rgb(205,184,25)" fg:x="38298" fg:w="5"/><text x="89.1023%" y="735.50"></text></g><g><title>PyType_GenericAlloc (15 samples, 0.03%)</title><rect x="88.8639%" y="741" width="0.0348%" height="15" fill="rgb(228,1,10)" fg:x="38303" fg:w="15"/><text x="89.1139%" y="751.50"></text></g><g><title>PyType_IsSubtype (26 samples, 0.06%)</title><rect x="88.8987%" y="741" width="0.0603%" height="15" fill="rgb(213,116,27)" fg:x="38318" fg:w="26"/><text x="89.1487%" y="751.50"></text></g><g><title>_PyObject_NewVar (18 samples, 0.04%)</title><rect x="88.9590%" y="741" width="0.0418%" height="15" fill="rgb(241,95,50)" fg:x="38344" fg:w="18"/><text x="89.2090%" y="751.50"></text></g><g><title>PyObject_Malloc (14 samples, 0.03%)</title><rect x="88.9683%" y="725" width="0.0325%" height="15" fill="rgb(238,48,32)" fg:x="38348" fg:w="14"/><text x="89.2183%" y="735.50"></text></g><g><title>_PyObject_MakeTpCall (606 samples, 1.41%)</title><rect x="87.6134%" y="757" width="1.4059%" height="15" fill="rgb(235,113,49)" fg:x="37764" fg:w="606"/><text x="87.8634%" y="767.50"></text></g><g><title>__tls_get_addr (5 samples, 0.01%)</title><rect x="89.0077%" y="741" width="0.0116%" height="15" fill="rgb(205,127,43)" fg:x="38365" fg:w="5"/><text x="89.2577%" y="751.50"></text></g><g><title>_PyTuple_FromArraySteal (49 samples, 0.11%)</title><rect x="89.0193%" y="757" width="0.1137%" height="15" fill="rgb(250,162,2)" fg:x="38370" fg:w="49"/><text x="89.2693%" y="767.50"></text></g><g><title>_PyEval_EvalFrameDefault (8,431 samples, 19.56%)</title><rect x="69.7005%" y="773" width="19.5601%" height="15" fill="rgb(220,13,41)" fg:x="30043" fg:w="8431"/><text x="69.9505%" y="783.50">_PyEval_EvalFrameDefault</text></g><g><title>__tls_get_addr (54 samples, 0.13%)</title><rect x="89.1353%" y="757" width="0.1253%" height="15" fill="rgb(249,221,25)" fg:x="38420" fg:w="54"/><text x="89.3853%" y="767.50"></text></g><g><title>PyObject_Vectorcall (8,760 samples, 20.32%)</title><rect x="68.9511%" y="789" width="20.3234%" height="15" fill="rgb(215,208,19)" fg:x="29720" fg:w="8760"/><text x="69.2011%" y="799.50">PyObject_Vectorcall</text></g><g><title>__tls_get_addr (6 samples, 0.01%)</title><rect x="89.2606%" y="773" width="0.0139%" height="15" fill="rgb(236,175,2)" fg:x="38474" fg:w="6"/><text x="89.5106%" y="783.50"></text></g><g><title>PySequence_Check (8 samples, 0.02%)</title><rect x="89.2745%" y="789" width="0.0186%" height="15" fill="rgb(241,52,2)" fg:x="38480" fg:w="8"/><text x="89.5245%" y="799.50"></text></g><g><title>PySequence_Fast (5 samples, 0.01%)</title><rect x="89.2931%" y="789" width="0.0116%" height="15" fill="rgb(248,140,14)" fg:x="38488" fg:w="5"/><text x="89.5431%" y="799.50"></text></g><g><title>PySequence_Size (10 samples, 0.02%)</title><rect x="89.3047%" y="789" width="0.0232%" height="15" fill="rgb(253,22,42)" fg:x="38493" fg:w="10"/><text x="89.5547%" y="799.50"></text></g><g><title>PyGILState_Ensure (55 samples, 0.13%)</title><rect x="89.3789%" y="773" width="0.1276%" height="15" fill="rgb(234,61,47)" fg:x="38525" fg:w="55"/><text x="89.6289%" y="783.50"></text></g><g><title>__tls_get_addr (5 samples, 0.01%)</title><rect x="89.4949%" y="757" width="0.0116%" height="15" fill="rgb(208,226,15)" fg:x="38575" fg:w="5"/><text x="89.7449%" y="767.50"></text></g><g><title>PyTraceMalloc_Track (97 samples, 0.23%)</title><rect x="89.3279%" y="789" width="0.2250%" height="15" fill="rgb(217,221,4)" fg:x="38503" fg:w="97"/><text x="89.5779%" y="799.50"></text></g><g><title>PyGILState_Release (20 samples, 0.05%)</title><rect x="89.5065%" y="773" width="0.0464%" height="15" fill="rgb(212,174,34)" fg:x="38580" fg:w="20"/><text x="89.7565%" y="783.50"></text></g><g><title>PyGILState_Ensure (45 samples, 0.10%)</title><rect x="89.5738%" y="773" width="0.1044%" height="15" fill="rgb(253,83,4)" fg:x="38609" fg:w="45"/><text x="89.8238%" y="783.50"></text></g><g><title>PyTraceMalloc_Untrack (77 samples, 0.18%)</title><rect x="89.5529%" y="789" width="0.1786%" height="15" fill="rgb(250,195,49)" fg:x="38600" fg:w="77"/><text x="89.8029%" y="799.50"></text></g><g><title>PyGILState_Release (23 samples, 0.05%)</title><rect x="89.6782%" y="773" width="0.0534%" height="15" fill="rgb(241,192,25)" fg:x="38654" fg:w="23"/><text x="89.9282%" y="783.50"></text></g><g><title>__tls_get_addr (10 samples, 0.02%)</title><rect x="89.7084%" y="757" width="0.0232%" height="15" fill="rgb(208,124,10)" fg:x="38667" fg:w="10"/><text x="89.9584%" y="767.50"></text></g><g><title>PyTuple_New (24 samples, 0.06%)</title><rect x="89.7316%" y="789" width="0.0557%" height="15" fill="rgb(222,33,0)" fg:x="38677" fg:w="24"/><text x="89.9816%" y="799.50"></text></g><g><title>PyType_GenericAlloc (191 samples, 0.44%)</title><rect x="89.7873%" y="789" width="0.4431%" height="15" fill="rgb(234,209,28)" fg:x="38701" fg:w="191"/><text x="90.0373%" y="799.50"></text></g><g><title>__tls_get_addr (5 samples, 0.01%)</title><rect x="90.2188%" y="773" width="0.0116%" height="15" fill="rgb(224,11,23)" fg:x="38887" fg:w="5"/><text x="90.4688%" y="783.50"></text></g><g><title>PyType_IsSubtype (59 samples, 0.14%)</title><rect x="90.2304%" y="789" width="0.1369%" height="15" fill="rgb(232,99,1)" fg:x="38892" fg:w="59"/><text x="90.4804%" y="799.50"></text></g><g><title>_Py_Dealloc (11 samples, 0.03%)</title><rect x="90.3696%" y="789" width="0.0255%" height="15" fill="rgb(237,95,45)" fg:x="38952" fg:w="11"/><text x="90.6196%" y="799.50"></text></g><g><title>__tls_get_addr (11 samples, 0.03%)</title><rect x="90.3951%" y="789" width="0.0255%" height="15" fill="rgb(208,109,11)" fg:x="38963" fg:w="11"/><text x="90.6451%" y="799.50"></text></g><g><title>PyObject_Vectorcall (12,258 samples, 28.44%)</title><rect x="62.0978%" y="805" width="28.4389%" height="15" fill="rgb(216,190,48)" fg:x="26766" fg:w="12258"/><text x="62.3478%" y="815.50">PyObject_Vectorcall</text></g><g><title>fetestexcept (50 samples, 0.12%)</title><rect x="90.4206%" y="789" width="0.1160%" height="15" fill="rgb(251,171,36)" fg:x="38974" fg:w="50"/><text x="90.6706%" y="799.50"></text></g><g><title>PySequence_Check (12 samples, 0.03%)</title><rect x="90.5366%" y="805" width="0.0278%" height="15" fill="rgb(230,62,22)" fg:x="39024" fg:w="12"/><text x="90.7866%" y="815.50"></text></g><g><title>PySequence_Size (5 samples, 0.01%)</title><rect x="90.5691%" y="805" width="0.0116%" height="15" fill="rgb(225,114,35)" fg:x="39038" fg:w="5"/><text x="90.8191%" y="815.50"></text></g><g><title>PyTraceMalloc_Track (11 samples, 0.03%)</title><rect x="90.5807%" y="805" width="0.0255%" height="15" fill="rgb(215,118,42)" fg:x="39043" fg:w="11"/><text x="90.8307%" y="815.50"></text></g><g><title>PyGILState_Ensure (6 samples, 0.01%)</title><rect x="90.5923%" y="789" width="0.0139%" height="15" fill="rgb(243,119,21)" fg:x="39048" fg:w="6"/><text x="90.8423%" y="799.50"></text></g><g><title>PyGILState_Ensure (6 samples, 0.01%)</title><rect x="90.6109%" y="789" width="0.0139%" height="15" fill="rgb(252,177,53)" fg:x="39056" fg:w="6"/><text x="90.8609%" y="799.50"></text></g><g><title>PyTraceMalloc_Untrack (13 samples, 0.03%)</title><rect x="90.6062%" y="805" width="0.0302%" height="15" fill="rgb(237,209,29)" fg:x="39054" fg:w="13"/><text x="90.8562%" y="815.50"></text></g><g><title>PyGILState_Release (5 samples, 0.01%)</title><rect x="90.6248%" y="789" width="0.0116%" height="15" fill="rgb(212,65,23)" fg:x="39062" fg:w="5"/><text x="90.8748%" y="799.50"></text></g><g><title>PyType_GenericAlloc (34 samples, 0.08%)</title><rect x="90.6364%" y="805" width="0.0789%" height="15" fill="rgb(230,222,46)" fg:x="39067" fg:w="34"/><text x="90.8864%" y="815.50"></text></g><g><title>PyType_IsSubtype (42 samples, 0.10%)</title><rect x="90.7153%" y="805" width="0.0974%" height="15" fill="rgb(215,135,32)" fg:x="39101" fg:w="42"/><text x="90.9653%" y="815.50"></text></g><g><title>_PyEval_FrameClearAndPop (136 samples, 0.32%)</title><rect x="90.8127%" y="805" width="0.3155%" height="15" fill="rgb(246,101,22)" fg:x="39143" fg:w="136"/><text x="91.0627%" y="815.50"></text></g><g><title>PyObject_Free (87 samples, 0.20%)</title><rect x="90.9264%" y="789" width="0.2018%" height="15" fill="rgb(206,107,13)" fg:x="39192" fg:w="87"/><text x="91.1764%" y="799.50"></text></g><g><title>PyErr_ExceptionMatches (36 samples, 0.08%)</title><rect x="91.6897%" y="773" width="0.0835%" height="15" fill="rgb(250,100,44)" fg:x="39521" fg:w="36"/><text x="91.9397%" y="783.50"></text></g><g><title>_PyUnicodeWriter_WriteASCIIString (10 samples, 0.02%)</title><rect x="92.9610%" y="741" width="0.0232%" height="15" fill="rgb(231,147,38)" fg:x="40069" fg:w="10"/><text x="93.2110%" y="751.50"></text></g><g><title>PyUnicode_FromFormatV (459 samples, 1.06%)</title><rect x="91.9379%" y="757" width="1.0649%" height="15" fill="rgb(229,8,40)" fg:x="39628" fg:w="459"/><text x="92.1879%" y="767.50"></text></g><g><title>__tls_get_addr (8 samples, 0.02%)</title><rect x="92.9842%" y="741" width="0.0186%" height="15" fill="rgb(221,135,30)" fg:x="40079" fg:w="8"/><text x="93.2342%" y="751.50"></text></g><g><title>_PyObject_MakeTpCall (132 samples, 0.31%)</title><rect x="93.0028%" y="757" width="0.3062%" height="15" fill="rgb(249,193,18)" fg:x="40087" fg:w="132"/><text x="93.2528%" y="767.50"></text></g><g><title>__tls_get_addr (5 samples, 0.01%)</title><rect x="93.2975%" y="741" width="0.0116%" height="15" fill="rgb(209,133,39)" fg:x="40214" fg:w="5"/><text x="93.5475%" y="751.50"></text></g><g><title>PyErr_Format (665 samples, 1.54%)</title><rect x="91.7732%" y="773" width="1.5428%" height="15" fill="rgb(232,100,14)" fg:x="39557" fg:w="665"/><text x="92.0232%" y="783.50"></text></g><g><title>PyObject_GC_Del (25 samples, 0.06%)</title><rect x="93.3160%" y="773" width="0.0580%" height="15" fill="rgb(224,185,1)" fg:x="40222" fg:w="25"/><text x="93.5660%" y="783.50"></text></g><g><title>PyIter_Next (855 samples, 1.98%)</title><rect x="91.4020%" y="789" width="1.9836%" height="15" fill="rgb(223,139,8)" fg:x="39397" fg:w="855"/><text x="91.6520%" y="799.50">P..</text></g><g><title>PyObject_GC_Del (46 samples, 0.11%)</title><rect x="93.3856%" y="789" width="0.1067%" height="15" fill="rgb(232,213,38)" fg:x="40252" fg:w="46"/><text x="93.6356%" y="799.50"></text></g><g><title>PySequence_Check (16 samples, 0.04%)</title><rect x="93.5666%" y="757" width="0.0371%" height="15" fill="rgb(207,94,22)" fg:x="40330" fg:w="16"/><text x="93.8166%" y="767.50"></text></g><g><title>_PyObject_GC_New (29 samples, 0.07%)</title><rect x="93.6037%" y="757" width="0.0673%" height="15" fill="rgb(219,183,54)" fg:x="40346" fg:w="29"/><text x="93.8537%" y="767.50"></text></g><g><title>PyObject_GetIter (80 samples, 0.19%)</title><rect x="93.4923%" y="789" width="0.1856%" height="15" fill="rgb(216,185,54)" fg:x="40298" fg:w="80"/><text x="93.7423%" y="799.50"></text></g><g><title>PySeqIter_New (70 samples, 0.16%)</title><rect x="93.5155%" y="773" width="0.1624%" height="15" fill="rgb(254,217,39)" fg:x="40308" fg:w="70"/><text x="93.7655%" y="783.50"></text></g><g><title>PyObject_Init (8 samples, 0.02%)</title><rect x="93.6779%" y="789" width="0.0186%" height="15" fill="rgb(240,178,23)" fg:x="40378" fg:w="8"/><text x="93.9279%" y="799.50"></text></g><g><title>_PyEval_UnpackIterable (1,206 samples, 2.80%)</title><rect x="91.1282%" y="805" width="2.7979%" height="15" fill="rgb(218,11,47)" fg:x="39279" fg:w="1206"/><text x="91.3782%" y="815.50">_P..</text></g><g><title>PyObject_Malloc (99 samples, 0.23%)</title><rect x="93.6965%" y="789" width="0.2297%" height="15" fill="rgb(218,51,51)" fg:x="40386" fg:w="99"/><text x="93.9465%" y="799.50"></text></g><g><title>__tls_get_addr (5 samples, 0.01%)</title><rect x="93.9146%" y="773" width="0.0116%" height="15" fill="rgb(238,126,27)" fg:x="40480" fg:w="5"/><text x="94.1646%" y="783.50"></text></g><g><title>_PyLong_Add (5 samples, 0.01%)</title><rect x="93.9262%" y="805" width="0.0116%" height="15" fill="rgb(249,202,22)" fg:x="40485" fg:w="5"/><text x="94.1762%" y="815.50"></text></g><g><title>_PySuper_Lookup (74 samples, 0.17%)</title><rect x="93.9378%" y="805" width="0.1717%" height="15" fill="rgb(254,195,49)" fg:x="40490" fg:w="74"/><text x="94.1878%" y="815.50"></text></g><g><title>_PyTuple_FromArraySteal (27 samples, 0.06%)</title><rect x="94.1095%" y="805" width="0.0626%" height="15" fill="rgb(208,123,14)" fg:x="40564" fg:w="27"/><text x="94.3595%" y="815.50"></text></g><g><title>__tls_get_addr (26 samples, 0.06%)</title><rect x="94.1721%" y="805" width="0.0603%" height="15" fill="rgb(224,200,8)" fg:x="40591" fg:w="26"/><text x="94.4221%" y="815.50"></text></g><g><title>fetestexcept (45 samples, 0.10%)</title><rect x="94.2324%" y="805" width="0.1044%" height="15" fill="rgb(217,61,36)" fg:x="40617" fg:w="45"/><text x="94.4824%" y="815.50"></text></g><g><title>_PyEval_EvalFrameDefault (18,039 samples, 41.85%)</title><rect x="52.8733%" y="821" width="41.8509%" height="15" fill="rgb(206,35,45)" fg:x="22790" fg:w="18039"/><text x="53.1233%" y="831.50">_PyEval_EvalFrameDefault</text></g><g><title>pow (167 samples, 0.39%)</title><rect x="94.3368%" y="805" width="0.3874%" height="15" fill="rgb(217,65,33)" fg:x="40662" fg:w="167"/><text x="94.5868%" y="815.50"></text></g><g><title>&lt;pyo3::instance::Bound&lt;pyo3::types::tuple::PyTuple&gt; as pyo3::call::PyCallArgs&gt;::call_positional (18,141 samples, 42.09%)</title><rect x="52.6460%" y="837" width="42.0876%" height="15" fill="rgb(222,158,48)" fg:x="22692" fg:w="18141"/><text x="52.8960%" y="847.50">&lt;pyo3::instance::Bound&lt;pyo3::types::tuple::PyTuple&gt; as pyo3::call::Py..</text></g><g><title>PyObject_GC_Del (41 samples, 0.10%)</title><rect x="94.7335%" y="837" width="0.0951%" height="15" fill="rgb(254,2,54)" fg:x="40833" fg:w="41"/><text x="94.9835%" y="847.50"></text></g><g><title>&lt;pyo3::instance::Bound&lt;pyo3::types::any::PyAny&gt; as pyo3::types::any::PyAnyMethods&gt;::call_method (18,395 samples, 42.68%)</title><rect x="52.2284%" y="853" width="42.6768%" height="15" fill="rgb(250,143,38)" fg:x="22512" fg:w="18395"/><text x="52.4784%" y="863.50">&lt;pyo3::instance::Bound&lt;pyo3::types::any::PyAny&gt; as pyo3::types::any::P..</text></g><g><title>pyo3::types::string::PyString::new (30 samples, 0.07%)</title><rect x="94.8356%" y="837" width="0.0696%" height="15" fill="rgb(248,25,0)" fg:x="40877" fg:w="30"/><text x="95.0856%" y="847.50"></text></g><g><title>PyTuple_New (9 samples, 0.02%)</title><rect x="94.9052%" y="853" width="0.0209%" height="15" fill="rgb(206,152,27)" fg:x="40907" fg:w="9"/><text x="95.1552%" y="863.50"></text></g><g><title>PyTuple_SetItem (5 samples, 0.01%)</title><rect x="94.9261%" y="853" width="0.0116%" height="15" fill="rgb(240,77,30)" fg:x="40916" fg:w="5"/><text x="95.1761%" y="863.50"></text></g><g><title>PyMem_Calloc (18 samples, 0.04%)</title><rect x="94.9911%" y="821" width="0.0418%" height="15" fill="rgb(231,5,3)" fg:x="40944" fg:w="18"/><text x="95.2411%" y="831.50"></text></g><g><title>PyList_New (35 samples, 0.08%)</title><rect x="94.9563%" y="837" width="0.0812%" height="15" fill="rgb(207,226,32)" fg:x="40929" fg:w="35"/><text x="95.2063%" y="847.50"></text></g><g><title>pyo3::instance::Py&lt;T&gt;::call_method (18,491 samples, 42.90%)</title><rect x="52.1959%" y="869" width="42.8996%" height="15" fill="rgb(222,207,47)" fg:x="22498" fg:w="18491"/><text x="52.4459%" y="879.50">pyo3::instance::Py&lt;T&gt;::call_method</text></g><g><title>pyo3::conversion::IntoPyObject::owned_sequence_into_pyobject (68 samples, 0.16%)</title><rect x="94.9377%" y="853" width="0.1578%" height="15" fill="rgb(229,115,45)" fg:x="40921" fg:w="68"/><text x="95.1877%" y="863.50"></text></g><g><title>pyo3::types::float::PyFloat::new (24 samples, 0.06%)</title><rect x="95.0398%" y="837" width="0.0557%" height="15" fill="rgb(224,191,6)" fg:x="40965" fg:w="24"/><text x="95.2898%" y="847.50"></text></g><g><title>PyFloat_FromDouble (24 samples, 0.06%)</title><rect x="95.0398%" y="821" width="0.0557%" height="15" fill="rgb(230,227,24)" fg:x="40965" fg:w="24"/><text x="95.2898%" y="831.50"></text></g><g><title>pyo3::types::boolobject::&lt;impl pyo3::conversion::FromPyObject for bool&gt;::extract_bound (12 samples, 0.03%)</title><rect x="95.0955%" y="869" width="0.0278%" height="15" fill="rgb(228,80,19)" fg:x="40989" fg:w="12"/><text x="95.3455%" y="879.50"></text></g><g><title>pyo3::types::float::&lt;impl pyo3::conversion::FromPyObject for f32&gt;::extract_bound (9 samples, 0.02%)</title><rect x="95.1233%" y="869" width="0.0209%" height="15" fill="rgb(247,229,0)" fg:x="41001" fg:w="9"/><text x="95.3733%" y="879.50"></text></g><g><title>PyFloat_AsDouble (9 samples, 0.02%)</title><rect x="95.1233%" y="853" width="0.0209%" height="15" fill="rgb(237,194,15)" fg:x="41001" fg:w="9"/><text x="95.3733%" y="863.50"></text></g><g><title>_PyObject_GC_New (9 samples, 0.02%)</title><rect x="95.3739%" y="789" width="0.0209%" height="15" fill="rgb(219,203,20)" fg:x="41109" fg:w="9"/><text x="95.6239%" y="799.50"></text></g><g><title>&lt;pyo3::instance::Bound&lt;pyo3::types::any::PyAny&gt; as pyo3::types::any::PyAnyMethods&gt;::iter (24 samples, 0.06%)</title><rect x="95.3414%" y="853" width="0.0557%" height="15" fill="rgb(234,128,8)" fg:x="41095" fg:w="24"/><text x="95.5914%" y="863.50"></text></g><g><title>pyo3::types::iterator::PyIterator::from_object (22 samples, 0.05%)</title><rect x="95.3460%" y="837" width="0.0510%" height="15" fill="rgb(248,202,8)" fg:x="41097" fg:w="22"/><text x="95.5960%" y="847.50"></text></g><g><title>PyObject_GetIter (21 samples, 0.05%)</title><rect x="95.3484%" y="821" width="0.0487%" height="15" fill="rgb(206,104,37)" fg:x="41098" fg:w="21"/><text x="95.5984%" y="831.50"></text></g><g><title>PySeqIter_New (19 samples, 0.04%)</title><rect x="95.3530%" y="805" width="0.0441%" height="15" fill="rgb(223,8,27)" fg:x="41100" fg:w="19"/><text x="95.6030%" y="815.50"></text></g><g><title>PyObject_Free (41 samples, 0.10%)</title><rect x="95.3971%" y="853" width="0.0951%" height="15" fill="rgb(216,217,28)" fg:x="41119" fg:w="41"/><text x="95.6471%" y="863.50"></text></g><g><title>PyObject_GC_Del (35 samples, 0.08%)</title><rect x="95.4922%" y="853" width="0.0812%" height="15" fill="rgb(249,199,1)" fg:x="41160" fg:w="35"/><text x="95.7422%" y="863.50"></text></g><g><title>PyFloat_FromDouble (36 samples, 0.08%)</title><rect x="95.7474%" y="821" width="0.0835%" height="15" fill="rgb(240,85,17)" fg:x="41270" fg:w="36"/><text x="95.9974%" y="831.50"></text></g><g><title>pyo3::types::float::&lt;impl pyo3::conversion::FromPyObject for f32&gt;::extract_bound (104 samples, 0.24%)</title><rect x="95.5943%" y="853" width="0.2413%" height="15" fill="rgb(206,108,45)" fg:x="41204" fg:w="104"/><text x="95.8443%" y="863.50"></text></g><g><title>PyFloat_AsDouble (94 samples, 0.22%)</title><rect x="95.6175%" y="837" width="0.2181%" height="15" fill="rgb(245,210,41)" fg:x="41214" fg:w="94"/><text x="95.8675%" y="847.50"></text></g><g><title>PyErr_ExceptionMatches (21 samples, 0.05%)</title><rect x="96.1256%" y="821" width="0.0487%" height="15" fill="rgb(206,13,37)" fg:x="41433" fg:w="21"/><text x="96.3756%" y="831.50"></text></g><g><title>PyUnicode_FromFormatV (249 samples, 0.58%)</title><rect x="96.2532%" y="805" width="0.5777%" height="15" fill="rgb(250,61,18)" fg:x="41488" fg:w="249"/><text x="96.5032%" y="815.50"></text></g><g><title>_PyObject_MakeTpCall (54 samples, 0.13%)</title><rect x="96.8308%" y="805" width="0.1253%" height="15" fill="rgb(235,172,48)" fg:x="41737" fg:w="54"/><text x="97.0808%" y="815.50"></text></g><g><title>PyErr_Format (339 samples, 0.79%)</title><rect x="96.1743%" y="821" width="0.7865%" height="15" fill="rgb(249,201,17)" fg:x="41454" fg:w="339"/><text x="96.4243%" y="831.50"></text></g><g><title>PyObject_GC_Del (12 samples, 0.03%)</title><rect x="96.9608%" y="821" width="0.0278%" height="15" fill="rgb(219,208,6)" fg:x="41793" fg:w="12"/><text x="97.2108%" y="831.50"></text></g><g><title>PyObject_Init (5 samples, 0.01%)</title><rect x="96.9886%" y="821" width="0.0116%" height="15" fill="rgb(248,31,23)" fg:x="41805" fg:w="5"/><text x="97.2386%" y="831.50"></text></g><g><title>PyObject_Malloc (42 samples, 0.10%)</title><rect x="97.0002%" y="821" width="0.0974%" height="15" fill="rgb(245,15,42)" fg:x="41810" fg:w="42"/><text x="97.2502%" y="831.50"></text></g><g><title>PyIter_Next (541 samples, 1.26%)</title><rect x="95.8564%" y="837" width="1.2551%" height="15" fill="rgb(222,217,39)" fg:x="41317" fg:w="541"/><text x="96.1064%" y="847.50"></text></g><g><title>__tls_get_addr (6 samples, 0.01%)</title><rect x="97.0976%" y="821" width="0.0139%" height="15" fill="rgb(210,219,27)" fg:x="41852" fg:w="6"/><text x="97.3476%" y="831.50"></text></g><g><title>pyo3::types::sequence::extract_sequence (883 samples, 2.05%)</title><rect x="95.1442%" y="869" width="2.0486%" height="15" fill="rgb(252,166,36)" fg:x="41010" fg:w="883"/><text x="95.3942%" y="879.50">p..</text></g><g><title>pyo3::types::iterator::&lt;impl pyo3::instance::Borrowed&lt;pyo3::types::iterator::PyIterator&gt;&gt;::next (585 samples, 1.36%)</title><rect x="95.8356%" y="853" width="1.3572%" height="15" fill="rgb(245,132,34)" fg:x="41308" fg:w="585"/><text x="96.0856%" y="863.50"></text></g><g><title>pyo3::err::PyErr::take (35 samples, 0.08%)</title><rect x="97.1116%" y="837" width="0.0812%" height="15" fill="rgb(236,54,3)" fg:x="41858" fg:w="35"/><text x="97.3616%" y="847.50"></text></g><g><title>pyo3::err::err_state::PyErrStateNormalized::take (31 samples, 0.07%)</title><rect x="97.1209%" y="821" width="0.0719%" height="15" fill="rgb(241,173,43)" fg:x="41862" fg:w="31"/><text x="97.3709%" y="831.50"></text></g><g><title>PyErr_Fetch (10 samples, 0.02%)</title><rect x="97.1696%" y="805" width="0.0232%" height="15" fill="rgb(215,190,9)" fg:x="41883" fg:w="10"/><text x="97.4196%" y="815.50"></text></g><g><title>__tls_get_addr (7 samples, 0.02%)</title><rect x="97.1765%" y="789" width="0.0162%" height="15" fill="rgb(242,101,16)" fg:x="41886" fg:w="7"/><text x="97.4265%" y="799.50"></text></g><g><title>r2l_core::tensor::R2lBuffer::from_vec (6 samples, 0.01%)</title><rect x="97.1928%" y="869" width="0.0139%" height="15" fill="rgb(223,190,21)" fg:x="41893" fg:w="6"/><text x="97.4428%" y="879.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (113 samples, 0.26%)</title><rect x="97.3482%" y="853" width="0.2622%" height="15" fill="rgb(215,228,25)" fg:x="41960" fg:w="113"/><text x="97.5982%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (30 samples, 0.07%)</title><rect x="97.5408%" y="837" width="0.0696%" height="15" fill="rgb(225,36,22)" fg:x="42043" fg:w="30"/><text x="97.7908%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (47 samples, 0.11%)</title><rect x="97.9305%" y="837" width="0.1090%" height="15" fill="rgb(251,106,46)" fg:x="42211" fg:w="47"/><text x="98.1805%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (17 samples, 0.04%)</title><rect x="98.0001%" y="821" width="0.0394%" height="15" fill="rgb(208,90,1)" fg:x="42241" fg:w="17"/><text x="98.2501%" y="831.50"></text></g><g><title>candle_core::cpu_backend::utils::binary_map (39 samples, 0.09%)</title><rect x="98.1904%" y="821" width="0.0905%" height="15" fill="rgb(243,10,4)" fg:x="42323" fg:w="39"/><text x="98.4404%" y="831.50"></text></g><g><title>candle_core::layout::Layout::contiguous_offsets (11 samples, 0.03%)</title><rect x="98.2553%" y="805" width="0.0255%" height="15" fill="rgb(212,137,27)" fg:x="42351" fg:w="11"/><text x="98.5053%" y="815.50"></text></g><g><title>candle_core::storage::Storage::binary_impl (107 samples, 0.25%)</title><rect x="98.0396%" y="837" width="0.2482%" height="15" fill="rgb(231,220,49)" fg:x="42258" fg:w="107"/><text x="98.2896%" y="847.50"></text></g><g><title>candle_core::tensor::Tensor::storage (45 samples, 0.10%)</title><rect x="98.2994%" y="837" width="0.1044%" height="15" fill="rgb(237,96,20)" fg:x="42370" fg:w="45"/><text x="98.5494%" y="847.50"></text></g><g><title>candle_core::shape::Shape::stride_contiguous (26 samples, 0.06%)</title><rect x="98.5453%" y="821" width="0.0603%" height="15" fill="rgb(239,229,30)" fg:x="42476" fg:w="26"/><text x="98.7953%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="98.5917%" y="805" width="0.0139%" height="15" fill="rgb(219,65,33)" fg:x="42496" fg:w="6"/><text x="98.8417%" y="815.50"></text></g><g><title>candle_core::tensor::Tensor::clamp (434 samples, 1.01%)</title><rect x="97.6104%" y="853" width="1.0069%" height="15" fill="rgb(243,134,7)" fg:x="42073" fg:w="434"/><text x="97.8604%" y="863.50"></text></g><g><title>candle_core::tensor::from_storage (92 samples, 0.21%)</title><rect x="98.4038%" y="837" width="0.2134%" height="15" fill="rgb(216,177,54)" fg:x="42415" fg:w="92"/><text x="98.6538%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (43 samples, 0.10%)</title><rect x="98.6521%" y="837" width="0.0998%" height="15" fill="rgb(211,160,20)" fg:x="42522" fg:w="43"/><text x="98.9021%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (15 samples, 0.03%)</title><rect x="98.7170%" y="821" width="0.0348%" height="15" fill="rgb(239,85,39)" fg:x="42550" fg:w="15"/><text x="98.9670%" y="831.50"></text></g><g><title>r2l_core::tensor::candle_tensor::&lt;impl core::convert::From&lt;candle_core::tensor::Tensor&gt; for r2l_core::tensor::R2lBuffer&gt;::from (87 samples, 0.20%)</title><rect x="98.6173%" y="853" width="0.2018%" height="15" fill="rgb(232,125,22)" fg:x="42507" fg:w="87"/><text x="98.8673%" y="863.50"></text></g><g><title>candle_core::tensor::Tensor::to_vec1 (29 samples, 0.07%)</title><rect x="98.7518%" y="837" width="0.0673%" height="15" fill="rgb(244,57,34)" fg:x="42565" fg:w="29"/><text x="99.0018%" y="847.50"></text></g><g><title>candle_core::tensor::Tensor::storage (9 samples, 0.02%)</title><rect x="98.7982%" y="821" width="0.0209%" height="15" fill="rgb(214,203,32)" fg:x="42585" fg:w="9"/><text x="99.0482%" y="831.50"></text></g><g><title>candle_core::shape::Shape::stride_contiguous (64 samples, 0.15%)</title><rect x="99.1416%" y="821" width="0.1485%" height="15" fill="rgb(207,58,43)" fg:x="42733" fg:w="64"/><text x="99.3916%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 0.05%)</title><rect x="99.2437%" y="805" width="0.0464%" height="15" fill="rgb(215,193,15)" fg:x="42777" fg:w="20"/><text x="99.4937%" y="815.50"></text></g><g><title>candle_core::storage::Storage::device (8 samples, 0.02%)</title><rect x="99.2924%" y="821" width="0.0186%" height="15" fill="rgb(232,15,44)" fg:x="42798" fg:w="8"/><text x="99.5424%" y="831.50"></text></g><g><title>&lt;r2l_gym::GymEnv as r2l_core::env::Env&gt;::step (20,630 samples, 47.86%)</title><rect x="51.4581%" y="885" width="47.8621%" height="15" fill="rgb(212,3,48)" fg:x="22180" fg:w="20630"/><text x="51.7081%" y="895.50">&lt;r2l_gym::GymEnv as r2l_core::env::Env&gt;::step</text></g><g><title>r2l_core::tensor::candle_tensor::&lt;impl r2l_core::tensor::R2lBuffer&gt;::clamp (910 samples, 2.11%)</title><rect x="97.2090%" y="869" width="2.1112%" height="15" fill="rgb(218,128,7)" fg:x="41900" fg:w="910"/><text x="97.4590%" y="879.50">r..</text></g><g><title>r2l_core::tensor::candle_tensor::&lt;impl core::convert::From&lt;r2l_core::tensor::R2lBuffer&gt; for candle_core::tensor::Tensor&gt;::from (216 samples, 0.50%)</title><rect x="98.8191%" y="853" width="0.5011%" height="15" fill="rgb(226,216,39)" fg:x="42594" fg:w="216"/><text x="99.0691%" y="863.50"></text></g><g><title>candle_core::tensor::from_storage (186 samples, 0.43%)</title><rect x="98.8887%" y="837" width="0.4315%" height="15" fill="rgb(243,47,51)" fg:x="42624" fg:w="186"/><text x="99.1387%" y="847.50"></text></g><g><title>&lt;r2l_core::sampler3::R2lSamplerX&lt;E,B&gt; as r2l_core::env::Sampler4&gt;::collect_rollouts (30,692 samples, 71.21%)</title><rect x="28.1210%" y="917" width="71.2062%" height="15" fill="rgb(241,183,40)" fg:x="12121" fg:w="30692"/><text x="28.3710%" y="927.50">&lt;r2l_core::sampler3::R2lSamplerX&lt;E,B&gt; as r2l_core::env::Sampler4&gt;::collect_rollouts</text></g><g><title>r2l_core::sampler3::coordinator::CoordinatorS&lt;E,B&gt;::collect (30,692 samples, 71.21%)</title><rect x="28.1210%" y="901" width="71.2062%" height="15" fill="rgb(231,217,32)" fg:x="12121" fg:w="30692"/><text x="28.3710%" y="911.50">r2l_core::sampler3::coordinator::CoordinatorS&lt;E,B&gt;::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (76 samples, 0.18%)</title><rect x="99.3318%" y="901" width="0.1763%" height="15" fill="rgb(229,61,38)" fg:x="42815" fg:w="76"/><text x="99.5818%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.08%)</title><rect x="99.4270%" y="885" width="0.0812%" height="15" fill="rgb(225,210,5)" fg:x="42856" fg:w="35"/><text x="99.6770%" y="895.50"></text></g><g><title>__rustc::__rdl_alloc (5 samples, 0.01%)</title><rect x="99.8283%" y="853" width="0.0116%" height="15" fill="rgb(231,79,45)" fg:x="43029" fg:w="5"/><text x="100.0783%" y="863.50"></text></g><g><title>candle_core::shape::Shape::stride_contiguous (37 samples, 0.09%)</title><rect x="99.8399%" y="853" width="0.0858%" height="15" fill="rgb(224,100,7)" fg:x="43034" fg:w="37"/><text x="100.0899%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.03%)</title><rect x="99.8979%" y="837" width="0.0278%" height="15" fill="rgb(241,198,18)" fg:x="43059" fg:w="12"/><text x="100.1479%" y="847.50"></text></g><g><title>r2l_core::sampler3::coordinator::CoordinatorS&lt;E,B&gt;::get_buffers2 (259 samples, 0.60%)</title><rect x="99.3318%" y="917" width="0.6009%" height="15" fill="rgb(252,97,53)" fg:x="42815" fg:w="259"/><text x="99.5818%" y="927.50"></text></g><g><title>alloc::vec::in_place_collect::from_iter_in_place (183 samples, 0.42%)</title><rect x="99.5082%" y="901" width="0.4246%" height="15" fill="rgb(220,88,7)" fg:x="42891" fg:w="183"/><text x="99.7582%" y="911.50"></text></g><g><title>r2l_core::tensor::candle_tensor::&lt;impl core::convert::From&lt;r2l_core::tensor::R2lBuffer&gt; for candle_core::tensor::Tensor&gt;::from (178 samples, 0.41%)</title><rect x="99.5198%" y="885" width="0.4130%" height="15" fill="rgb(213,176,14)" fg:x="42896" fg:w="178"/><text x="99.7698%" y="895.50"></text></g><g><title>candle_core::tensor::from_storage (137 samples, 0.32%)</title><rect x="99.6149%" y="869" width="0.3178%" height="15" fill="rgb(246,73,7)" fg:x="42937" fg:w="137"/><text x="99.8649%" y="879.50"></text></g><g><title>r2l_core::on_policy_algorithm::OnPolicyAlgorithm4&lt;H,A,S&gt;::train (42,544 samples, 98.70%)</title><rect x="1.2319%" y="933" width="98.7031%" height="15" fill="rgb(245,64,36)" fg:x="531" fg:w="42544"/><text x="1.4819%" y="943.50">r2l_core::on_policy_algorithm::OnPolicyAlgorithm4&lt;H,A,S&gt;::train</text></g><g><title>pyo3::gil::GILGuard::acquire (5 samples, 0.01%)</title><rect x="99.9420%" y="885" width="0.0116%" height="15" fill="rgb(245,80,10)" fg:x="43078" fg:w="5"/><text x="100.1920%" y="895.50"></text></g><g><title>std::sys::sync::once::futex::Once::call (5 samples, 0.01%)</title><rect x="99.9420%" y="869" width="0.0116%" height="15" fill="rgb(232,107,50)" fg:x="43078" fg:w="5"/><text x="100.1920%" y="879.50"></text></g><g><title>std::sync::poison::once::Once::call_once_force::{{closure}} (5 samples, 0.01%)</title><rect x="99.9420%" y="853" width="0.0116%" height="15" fill="rgb(253,3,0)" fg:x="43078" fg:w="5"/><text x="100.1920%" y="863.50"></text></g><g><title>Py_InitializeEx (5 samples, 0.01%)</title><rect x="99.9420%" y="837" width="0.0116%" height="15" fill="rgb(212,99,53)" fg:x="43078" fg:w="5"/><text x="100.1920%" y="847.50"></text></g><g><title>Py_InitializeFromConfig (5 samples, 0.01%)</title><rect x="99.9420%" y="821" width="0.0116%" height="15" fill="rgb(249,111,54)" fg:x="43078" fg:w="5"/><text x="100.1920%" y="831.50"></text></g><g><title>PyImport_ImportModuleLevelObject (6 samples, 0.01%)</title><rect x="99.9582%" y="213" width="0.0139%" height="15" fill="rgb(249,55,30)" fg:x="43085" fg:w="6"/><text x="100.2082%" y="223.50"></text></g><g><title>PyObject_CallMethodObjArgs (6 samples, 0.01%)</title><rect x="99.9582%" y="197" width="0.0139%" height="15" fill="rgb(237,47,42)" fg:x="43085" fg:w="6"/><text x="100.2082%" y="207.50"></text></g><g><title>_PyEval_EvalFrameDefault (6 samples, 0.01%)</title><rect x="99.9582%" y="181" width="0.0139%" height="15" fill="rgb(211,20,18)" fg:x="43085" fg:w="6"/><text x="100.2082%" y="191.50"></text></g><g><title>PyEval_EvalCode (6 samples, 0.01%)</title><rect x="99.9582%" y="165" width="0.0139%" height="15" fill="rgb(231,203,46)" fg:x="43085" fg:w="6"/><text x="100.2082%" y="175.50"></text></g><g><title>_PyEval_EvalFrameDefault (6 samples, 0.01%)</title><rect x="99.9582%" y="149" width="0.0139%" height="15" fill="rgb(237,142,3)" fg:x="43085" fg:w="6"/><text x="100.2082%" y="159.50"></text></g><g><title>PyImport_ImportModuleLevelObject (6 samples, 0.01%)</title><rect x="99.9582%" y="133" width="0.0139%" height="15" fill="rgb(241,107,1)" fg:x="43085" fg:w="6"/><text x="100.2082%" y="143.50"></text></g><g><title>PyObject_CallMethodObjArgs (6 samples, 0.01%)</title><rect x="99.9582%" y="117" width="0.0139%" height="15" fill="rgb(229,83,13)" fg:x="43085" fg:w="6"/><text x="100.2082%" y="127.50"></text></g><g><title>_PyEval_EvalFrameDefault (6 samples, 0.01%)</title><rect x="99.9582%" y="101" width="0.0139%" height="15" fill="rgb(241,91,40)" fg:x="43085" fg:w="6"/><text x="100.2082%" y="111.50"></text></g><g><title>dlopen (6 samples, 0.01%)</title><rect x="99.9582%" y="85" width="0.0139%" height="15" fill="rgb(225,3,45)" fg:x="43085" fg:w="6"/><text x="100.2082%" y="95.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.01%)</title><rect x="99.9582%" y="69" width="0.0139%" height="15" fill="rgb(244,223,14)" fg:x="43085" fg:w="6"/><text x="100.2082%" y="79.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.01%)</title><rect x="99.9582%" y="53" width="0.0139%" height="15" fill="rgb(224,124,37)" fg:x="43085" fg:w="6"/><text x="100.2082%" y="63.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.01%)</title><rect x="99.9582%" y="37" width="0.0139%" height="15" fill="rgb(251,171,30)" fg:x="43085" fg:w="6"/><text x="100.2082%" y="47.50"></text></g><g><title>PyEval_EvalCode (7 samples, 0.02%)</title><rect x="99.9582%" y="293" width="0.0162%" height="15" fill="rgb(236,46,54)" fg:x="43085" fg:w="7"/><text x="100.2082%" y="303.50"></text></g><g><title>_PyEval_EvalFrameDefault (7 samples, 0.02%)</title><rect x="99.9582%" y="277" width="0.0162%" height="15" fill="rgb(245,213,5)" fg:x="43085" fg:w="7"/><text x="100.2082%" y="287.50"></text></g><g><title>PyImport_ImportModuleLevelObject (7 samples, 0.02%)</title><rect x="99.9582%" y="261" width="0.0162%" height="15" fill="rgb(230,144,27)" fg:x="43085" fg:w="7"/><text x="100.2082%" y="271.50"></text></g><g><title>PyObject_CallMethodObjArgs (7 samples, 0.02%)</title><rect x="99.9582%" y="245" width="0.0162%" height="15" fill="rgb(220,86,6)" fg:x="43085" fg:w="7"/><text x="100.2082%" y="255.50"></text></g><g><title>_PyEval_EvalFrameDefault (7 samples, 0.02%)</title><rect x="99.9582%" y="229" width="0.0162%" height="15" fill="rgb(240,20,13)" fg:x="43085" fg:w="7"/><text x="100.2082%" y="239.50"></text></g><g><title>PyEval_EvalCode (9 samples, 0.02%)</title><rect x="99.9559%" y="549" width="0.0209%" height="15" fill="rgb(217,89,34)" fg:x="43084" fg:w="9"/><text x="100.2059%" y="559.50"></text></g><g><title>_PyEval_EvalFrameDefault (9 samples, 0.02%)</title><rect x="99.9559%" y="533" width="0.0209%" height="15" fill="rgb(229,13,5)" fg:x="43084" fg:w="9"/><text x="100.2059%" y="543.50"></text></g><g><title>PyImport_ImportModuleLevelObject (9 samples, 0.02%)</title><rect x="99.9559%" y="517" width="0.0209%" height="15" fill="rgb(244,67,35)" fg:x="43084" fg:w="9"/><text x="100.2059%" y="527.50"></text></g><g><title>PyObject_CallMethodObjArgs (9 samples, 0.02%)</title><rect x="99.9559%" y="501" width="0.0209%" height="15" fill="rgb(221,40,2)" fg:x="43084" fg:w="9"/><text x="100.2059%" y="511.50"></text></g><g><title>_PyEval_EvalFrameDefault (9 samples, 0.02%)</title><rect x="99.9559%" y="485" width="0.0209%" height="15" fill="rgb(237,157,21)" fg:x="43084" fg:w="9"/><text x="100.2059%" y="495.50"></text></g><g><title>PyImport_ImportModuleLevelObject (8 samples, 0.02%)</title><rect x="99.9582%" y="469" width="0.0186%" height="15" fill="rgb(222,94,11)" fg:x="43085" fg:w="8"/><text x="100.2082%" y="479.50"></text></g><g><title>PyObject_CallMethodObjArgs (8 samples, 0.02%)</title><rect x="99.9582%" y="453" width="0.0186%" height="15" fill="rgb(249,113,6)" fg:x="43085" fg:w="8"/><text x="100.2082%" y="463.50"></text></g><g><title>_PyEval_EvalFrameDefault (8 samples, 0.02%)</title><rect x="99.9582%" y="437" width="0.0186%" height="15" fill="rgb(238,137,36)" fg:x="43085" fg:w="8"/><text x="100.2082%" y="447.50"></text></g><g><title>PyEval_EvalCode (8 samples, 0.02%)</title><rect x="99.9582%" y="421" width="0.0186%" height="15" fill="rgb(210,102,26)" fg:x="43085" fg:w="8"/><text x="100.2082%" y="431.50"></text></g><g><title>_PyEval_EvalFrameDefault (8 samples, 0.02%)</title><rect x="99.9582%" y="405" width="0.0186%" height="15" fill="rgb(218,30,30)" fg:x="43085" fg:w="8"/><text x="100.2082%" y="415.50"></text></g><g><title>PyImport_ImportModuleLevelObject (8 samples, 0.02%)</title><rect x="99.9582%" y="389" width="0.0186%" height="15" fill="rgb(214,67,26)" fg:x="43085" fg:w="8"/><text x="100.2082%" y="399.50"></text></g><g><title>PyObject_CallMethodObjArgs (8 samples, 0.02%)</title><rect x="99.9582%" y="373" width="0.0186%" height="15" fill="rgb(251,9,53)" fg:x="43085" fg:w="8"/><text x="100.2082%" y="383.50"></text></g><g><title>_PyEval_EvalFrameDefault (8 samples, 0.02%)</title><rect x="99.9582%" y="357" width="0.0186%" height="15" fill="rgb(228,204,25)" fg:x="43085" fg:w="8"/><text x="100.2082%" y="367.50"></text></g><g><title>PyImport_ImportModuleLevelObject (8 samples, 0.02%)</title><rect x="99.9582%" y="341" width="0.0186%" height="15" fill="rgb(207,153,8)" fg:x="43085" fg:w="8"/><text x="100.2082%" y="351.50"></text></g><g><title>PyObject_CallMethodObjArgs (8 samples, 0.02%)</title><rect x="99.9582%" y="325" width="0.0186%" height="15" fill="rgb(242,9,16)" fg:x="43085" fg:w="8"/><text x="100.2082%" y="335.50"></text></g><g><title>_PyEval_EvalFrameDefault (8 samples, 0.02%)</title><rect x="99.9582%" y="309" width="0.0186%" height="15" fill="rgb(217,211,10)" fg:x="43085" fg:w="8"/><text x="100.2082%" y="319.50"></text></g><g><title>PyImport_ImportModuleLevelObject (10 samples, 0.02%)</title><rect x="99.9559%" y="597" width="0.0232%" height="15" fill="rgb(219,228,52)" fg:x="43084" fg:w="10"/><text x="100.2059%" y="607.50"></text></g><g><title>PyObject_CallMethodObjArgs (10 samples, 0.02%)</title><rect x="99.9559%" y="581" width="0.0232%" height="15" fill="rgb(231,92,29)" fg:x="43084" fg:w="10"/><text x="100.2059%" y="591.50"></text></g><g><title>_PyEval_EvalFrameDefault (10 samples, 0.02%)</title><rect x="99.9559%" y="565" width="0.0232%" height="15" fill="rgb(232,8,23)" fg:x="43084" fg:w="10"/><text x="100.2059%" y="575.50"></text></g><g><title>PyEval_EvalCode (11 samples, 0.03%)</title><rect x="99.9559%" y="629" width="0.0255%" height="15" fill="rgb(216,211,34)" fg:x="43084" fg:w="11"/><text x="100.2059%" y="639.50"></text></g><g><title>_PyEval_EvalFrameDefault (11 samples, 0.03%)</title><rect x="99.9559%" y="613" width="0.0255%" height="15" fill="rgb(236,151,0)" fg:x="43084" fg:w="11"/><text x="100.2059%" y="623.50"></text></g><g><title>PyEval_EvalCode (15 samples, 0.03%)</title><rect x="99.9536%" y="709" width="0.0348%" height="15" fill="rgb(209,168,3)" fg:x="43083" fg:w="15"/><text x="100.2036%" y="719.50"></text></g><g><title>_PyEval_EvalFrameDefault (15 samples, 0.03%)</title><rect x="99.9536%" y="693" width="0.0348%" height="15" fill="rgb(208,129,28)" fg:x="43083" fg:w="15"/><text x="100.2036%" y="703.50"></text></g><g><title>PyImport_ImportModuleLevelObject (15 samples, 0.03%)</title><rect x="99.9536%" y="677" width="0.0348%" height="15" fill="rgb(229,78,22)" fg:x="43083" fg:w="15"/><text x="100.2036%" y="687.50"></text></g><g><title>PyObject_CallMethodObjArgs (15 samples, 0.03%)</title><rect x="99.9536%" y="661" width="0.0348%" height="15" fill="rgb(228,187,13)" fg:x="43083" fg:w="15"/><text x="100.2036%" y="671.50"></text></g><g><title>_PyEval_EvalFrameDefault (15 samples, 0.03%)</title><rect x="99.9536%" y="645" width="0.0348%" height="15" fill="rgb(240,119,24)" fg:x="43083" fg:w="15"/><text x="100.2036%" y="655.50"></text></g><g><title>all (43,103 samples, 100%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(209,194,42)" fg:x="0" fg:w="43103"/><text x="0.2500%" y="1103.50"></text></g><g><title>new_api2 (43,103 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(247,200,46)" fg:x="0" fg:w="43103"/><text x="0.2500%" y="1087.50">new_api2</text></g><g><title>std::sys::thread::unix::Thread::new::thread_start (42,973 samples, 99.70%)</title><rect x="0.3016%" y="1061" width="99.6984%" height="15" fill="rgb(218,76,16)" fg:x="130" fg:w="42973"/><text x="0.5516%" y="1071.50">std::sys::thread::unix::Thread::new::thread_start</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (42,973 samples, 99.70%)</title><rect x="0.3016%" y="1045" width="99.6984%" height="15" fill="rgb(225,21,48)" fg:x="130" fg:w="42973"/><text x="0.5516%" y="1055.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (42,973 samples, 99.70%)</title><rect x="0.3016%" y="1029" width="99.6984%" height="15" fill="rgb(239,223,50)" fg:x="130" fg:w="42973"/><text x="0.5516%" y="1039.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>test::run_test::{{closure}} (42,573 samples, 98.77%)</title><rect x="1.2296%" y="1013" width="98.7704%" height="15" fill="rgb(244,45,21)" fg:x="530" fg:w="42573"/><text x="1.4796%" y="1023.50">test::run_test::{{closure}}</text></g><g><title>test::__rust_begin_short_backtrace (42,573 samples, 98.77%)</title><rect x="1.2296%" y="997" width="98.7704%" height="15" fill="rgb(232,33,43)" fg:x="530" fg:w="42573"/><text x="1.4796%" y="1007.50">test::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (42,573 samples, 98.77%)</title><rect x="1.2296%" y="981" width="98.7704%" height="15" fill="rgb(209,8,3)" fg:x="530" fg:w="42573"/><text x="1.4796%" y="991.50">core::ops::function::FnOnce::call_once</text></g><g><title>new_api::ptest_func (42,573 samples, 98.77%)</title><rect x="1.2296%" y="965" width="98.7704%" height="15" fill="rgb(214,25,53)" fg:x="530" fg:w="42573"/><text x="1.4796%" y="975.50">new_api::ptest_func</text></g><g><title>new_api::run_new_test2 (42,573 samples, 98.77%)</title><rect x="1.2296%" y="949" width="98.7704%" height="15" fill="rgb(254,186,54)" fg:x="530" fg:w="42573"/><text x="1.4796%" y="959.50">new_api::run_new_test2</text></g><g><title>r2l_core::sampler3::coordinator::CoordinatorS&lt;E,B&gt;::build_rc (28 samples, 0.06%)</title><rect x="99.9350%" y="933" width="0.0650%" height="15" fill="rgb(208,174,49)" fg:x="43075" fg:w="28"/><text x="100.1850%" y="943.50"></text></g><g><title>&lt;r2l_gym::GymEnvBuilder as r2l_core::env_builder::EnvBuilderTrait&gt;::build_env (28 samples, 0.06%)</title><rect x="99.9350%" y="917" width="0.0650%" height="15" fill="rgb(233,191,51)" fg:x="43075" fg:w="28"/><text x="100.1850%" y="927.50"></text></g><g><title>r2l_gym::GymEnv::new (28 samples, 0.06%)</title><rect x="99.9350%" y="901" width="0.0650%" height="15" fill="rgb(222,134,10)" fg:x="43075" fg:w="28"/><text x="100.1850%" y="911.50"></text></g><g><title>pyo3::types::module::PyModule::import (20 samples, 0.05%)</title><rect x="99.9536%" y="885" width="0.0464%" height="15" fill="rgb(230,226,20)" fg:x="43083" fg:w="20"/><text x="100.2036%" y="895.50"></text></g><g><title>PyImport_Import (20 samples, 0.05%)</title><rect x="99.9536%" y="869" width="0.0464%" height="15" fill="rgb(251,111,25)" fg:x="43083" fg:w="20"/><text x="100.2036%" y="879.50"></text></g><g><title>PyObject_CallFunction (20 samples, 0.05%)</title><rect x="99.9536%" y="853" width="0.0464%" height="15" fill="rgb(224,40,46)" fg:x="43083" fg:w="20"/><text x="100.2036%" y="863.50"></text></g><g><title>PyImport_ImportModuleLevelObject (20 samples, 0.05%)</title><rect x="99.9536%" y="837" width="0.0464%" height="15" fill="rgb(236,108,47)" fg:x="43083" fg:w="20"/><text x="100.2036%" y="847.50"></text></g><g><title>PyObject_CallMethodObjArgs (20 samples, 0.05%)</title><rect x="99.9536%" y="821" width="0.0464%" height="15" fill="rgb(234,93,0)" fg:x="43083" fg:w="20"/><text x="100.2036%" y="831.50"></text></g><g><title>_PyEval_EvalFrameDefault (20 samples, 0.05%)</title><rect x="99.9536%" y="805" width="0.0464%" height="15" fill="rgb(224,213,32)" fg:x="43083" fg:w="20"/><text x="100.2036%" y="815.50"></text></g><g><title>PyEval_EvalCode (20 samples, 0.05%)</title><rect x="99.9536%" y="789" width="0.0464%" height="15" fill="rgb(251,11,48)" fg:x="43083" fg:w="20"/><text x="100.2036%" y="799.50"></text></g><g><title>_PyEval_EvalFrameDefault (20 samples, 0.05%)</title><rect x="99.9536%" y="773" width="0.0464%" height="15" fill="rgb(236,173,5)" fg:x="43083" fg:w="20"/><text x="100.2036%" y="783.50"></text></g><g><title>PyImport_ImportModuleLevelObject (20 samples, 0.05%)</title><rect x="99.9536%" y="757" width="0.0464%" height="15" fill="rgb(230,95,12)" fg:x="43083" fg:w="20"/><text x="100.2036%" y="767.50"></text></g><g><title>PyObject_CallMethodObjArgs (20 samples, 0.05%)</title><rect x="99.9536%" y="741" width="0.0464%" height="15" fill="rgb(232,209,1)" fg:x="43083" fg:w="20"/><text x="100.2036%" y="751.50"></text></g><g><title>_PyEval_EvalFrameDefault (20 samples, 0.05%)</title><rect x="99.9536%" y="725" width="0.0464%" height="15" fill="rgb(232,6,1)" fg:x="43083" fg:w="20"/><text x="100.2036%" y="735.50"></text></g><g><title>PyImport_ImportModuleLevelObject (5 samples, 0.01%)</title><rect x="99.9884%" y="709" width="0.0116%" height="15" fill="rgb(210,224,50)" fg:x="43098" fg:w="5"/><text x="100.2384%" y="719.50"></text></g><g><title>PyObject_CallMethodObjArgs (5 samples, 0.01%)</title><rect x="99.9884%" y="693" width="0.0116%" height="15" fill="rgb(228,127,35)" fg:x="43098" fg:w="5"/><text x="100.2384%" y="703.50"></text></g><g><title>_PyEval_EvalFrameDefault (5 samples, 0.01%)</title><rect x="99.9884%" y="677" width="0.0116%" height="15" fill="rgb(245,102,45)" fg:x="43098" fg:w="5"/><text x="100.2384%" y="687.50"></text></g><g><title>PyEval_EvalCode (5 samples, 0.01%)</title><rect x="99.9884%" y="661" width="0.0116%" height="15" fill="rgb(214,1,49)" fg:x="43098" fg:w="5"/><text x="100.2384%" y="671.50"></text></g><g><title>_PyEval_EvalFrameDefault (5 samples, 0.01%)</title><rect x="99.9884%" y="645" width="0.0116%" height="15" fill="rgb(226,163,40)" fg:x="43098" fg:w="5"/><text x="100.2384%" y="655.50"></text></g><g><title>PyImport_ImportModuleLevelObject (5 samples, 0.01%)</title><rect x="99.9884%" y="629" width="0.0116%" height="15" fill="rgb(239,212,28)" fg:x="43098" fg:w="5"/><text x="100.2384%" y="639.50"></text></g><g><title>PyObject_CallMethodObjArgs (5 samples, 0.01%)</title><rect x="99.9884%" y="613" width="0.0116%" height="15" fill="rgb(220,20,13)" fg:x="43098" fg:w="5"/><text x="100.2384%" y="623.50"></text></g><g><title>_PyEval_EvalFrameDefault (5 samples, 0.01%)</title><rect x="99.9884%" y="597" width="0.0116%" height="15" fill="rgb(210,164,35)" fg:x="43098" fg:w="5"/><text x="100.2384%" y="607.50"></text></g></svg></svg>